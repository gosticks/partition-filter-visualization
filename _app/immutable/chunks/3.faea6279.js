var Pg=Object.defineProperty;var Lg=(s,e,t)=>e in s?Pg(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var Ue=(s,e,t)=>(Lg(s,typeof e!="symbol"?e+"":e,t),t);import{S as Mt,i as bt,s as St,O as Je,P as Ke,m as G,h as R,n as b,b as ae,D as k,G as Ze,k as ce,l as he,o as Bn,Q as Fi,w as _i,a as Le,c as Ie,g as W,v as wt,d as K,f as Et,I as Bi,y as Te,z as Ae,A as Ce,J as zi,K as Vi,L as Hi,B as Re,R as jd,T as Jd,U as Ig,V as eu,q as Ne,r as Oe,C as Lt,W as po,E as Dr,F as Zn,u as Ct,p as ta,X as tu,Y as qn,Z as Ao,_ as Kd,e as Pt,$ as Dg,M as kn,a0 as nu,a1 as Ug,a2 as Ng,N as Kn,a3 as Co,a4 as Ro,a5 as mo,a6 as Qd,a7 as Og,a8 as kg,a9 as Fg,H as Bg,aa as zg}from"./index.14b8a44d.js";import{S as iu,r as Vg,c as Hg,i as ec,a as su,b as ru,d as Gg,p as ep,L as Wg,D as tp,e as Xg,f as Ur,g as Yn,T as $g,h as np,j as au,k as Er,l as Yg,m as Ws,n as qg,P as Zg,o as jg,C as Jg,q as Kg,s as Qg,G as e0,t as ou}from"./TableSelection.2a257ce5.js";import{s as go,T as t0,X as n0}from"./XIcon.39faf244.js";import{B as nn,c as Dt,b as mn,f as lu,a as ip}from"./fadeSlide.f65added.js";import{_ as ml}from"./preload-helper.a4192956.js";import{w as i0}from"./index.fb042441.js";function s0(s){let e,t,n,i;return{c(){e=Je("svg"),t=Je("path"),n=Je("line"),this.h()},l(r){e=Ke(r,"svg",{xmlns:!0,width:!0,height:!0,fill:!0,viewBox:!0,stroke:!0,"stroke-width":!0,"stroke-linecap":!0,"stroke-linejoin":!0,class:!0});var a=G(e);t=Ke(a,"path",{d:!0}),G(t).forEach(R),n=Ke(a,"line",{x1:!0,y1:!0,x2:!0,y2:!0}),G(n).forEach(R),a.forEach(R),this.h()},h(){b(t,"d","M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24"),b(n,"x1","1"),b(n,"y1","1"),b(n,"x2","23"),b(n,"y2","23"),b(e,"xmlns","http://www.w3.org/2000/svg"),b(e,"width",s[0]),b(e,"height",s[0]),b(e,"fill","none"),b(e,"viewBox","0 0 24 24"),b(e,"stroke","currentColor"),b(e,"stroke-width",s[1]),b(e,"stroke-linecap","round"),b(e,"stroke-linejoin","round"),b(e,"class",i="feather feather-eye-off "+s[2])},m(r,a){ae(r,e,a),k(e,t),k(e,n)},p(r,[a]){a&1&&b(e,"width",r[0]),a&1&&b(e,"height",r[0]),a&2&&b(e,"stroke-width",r[1]),a&4&&i!==(i="feather feather-eye-off "+r[2])&&b(e,"class",i)},i:Ze,o:Ze,d(r){r&&R(e)}}}function r0(s,e,t){let{size:n="24"}=e,{strokeWidth:i=2}=e,{class:r=""}=e;return n!=="100%"&&(n=n.slice(-1)==="x"?n.slice(0,n.length-1)+"em":parseInt(n)+"px"),s.$$set=a=>{"size"in a&&t(0,n=a.size),"strokeWidth"in a&&t(1,i=a.strokeWidth),"class"in a&&t(2,r=a.class)},[n,i,r]}class a0 extends Mt{constructor(e){super(),bt(this,e,r0,s0,St,{size:0,strokeWidth:1,class:2})}}function o0(s){let e,t,n,i;return{c(){e=Je("svg"),t=Je("path"),n=Je("circle"),this.h()},l(r){e=Ke(r,"svg",{xmlns:!0,width:!0,height:!0,fill:!0,viewBox:!0,stroke:!0,"stroke-width":!0,"stroke-linecap":!0,"stroke-linejoin":!0,class:!0});var a=G(e);t=Ke(a,"path",{d:!0}),G(t).forEach(R),n=Ke(a,"circle",{cx:!0,cy:!0,r:!0}),G(n).forEach(R),a.forEach(R),this.h()},h(){b(t,"d","M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"),b(n,"cx","12"),b(n,"cy","12"),b(n,"r","3"),b(e,"xmlns","http://www.w3.org/2000/svg"),b(e,"width",s[0]),b(e,"height",s[0]),b(e,"fill","none"),b(e,"viewBox","0 0 24 24"),b(e,"stroke","currentColor"),b(e,"stroke-width",s[1]),b(e,"stroke-linecap","round"),b(e,"stroke-linejoin","round"),b(e,"class",i="feather feather-eye "+s[2])},m(r,a){ae(r,e,a),k(e,t),k(e,n)},p(r,[a]){a&1&&b(e,"width",r[0]),a&1&&b(e,"height",r[0]),a&2&&b(e,"stroke-width",r[1]),a&4&&i!==(i="feather feather-eye "+r[2])&&b(e,"class",i)},i:Ze,o:Ze,d(r){r&&R(e)}}}function l0(s,e,t){let{size:n="24"}=e,{strokeWidth:i=2}=e,{class:r=""}=e;return n!=="100%"&&(n=n.slice(-1)==="x"?n.slice(0,n.length-1)+"em":parseInt(n)+"px"),s.$$set=a=>{"size"in a&&t(0,n=a.size),"strokeWidth"in a&&t(1,i=a.strokeWidth),"class"in a&&t(2,r=a.class)},[n,i,r]}class c0 extends Mt{constructor(e){super(),bt(this,e,l0,o0,St,{size:0,strokeWidth:1,class:2})}}function h0(s){let e,t,n,i,r;return{c(){e=Je("svg"),t=Je("circle"),n=Je("line"),i=Je("line"),this.h()},l(a){e=Ke(a,"svg",{xmlns:!0,width:!0,height:!0,fill:!0,viewBox:!0,stroke:!0,"stroke-width":!0,"stroke-linecap":!0,"stroke-linejoin":!0,class:!0});var o=G(e);t=Ke(o,"circle",{cx:!0,cy:!0,r:!0}),G(t).forEach(R),n=Ke(o,"line",{x1:!0,y1:!0,x2:!0,y2:!0}),G(n).forEach(R),i=Ke(o,"line",{x1:!0,y1:!0,x2:!0,y2:!0}),G(i).forEach(R),o.forEach(R),this.h()},h(){b(t,"cx","12"),b(t,"cy","12"),b(t,"r","10"),b(n,"x1","12"),b(n,"y1","16"),b(n,"x2","12"),b(n,"y2","12"),b(i,"x1","12"),b(i,"y1","8"),b(i,"x2","12.01"),b(i,"y2","8"),b(e,"xmlns","http://www.w3.org/2000/svg"),b(e,"width",s[0]),b(e,"height",s[0]),b(e,"fill","none"),b(e,"viewBox","0 0 24 24"),b(e,"stroke","currentColor"),b(e,"stroke-width",s[1]),b(e,"stroke-linecap","round"),b(e,"stroke-linejoin","round"),b(e,"class",r="feather feather-info "+s[2])},m(a,o){ae(a,e,o),k(e,t),k(e,n),k(e,i)},p(a,[o]){o&1&&b(e,"width",a[0]),o&1&&b(e,"height",a[0]),o&2&&b(e,"stroke-width",a[1]),o&4&&r!==(r="feather feather-info "+a[2])&&b(e,"class",r)},i:Ze,o:Ze,d(a){a&&R(e)}}}function u0(s,e,t){let{size:n="24"}=e,{strokeWidth:i=2}=e,{class:r=""}=e;return n!=="100%"&&(n=n.slice(-1)==="x"?n.slice(0,n.length-1)+"em":parseInt(n)+"px"),s.$$set=a=>{"size"in a&&t(0,n=a.size),"strokeWidth"in a&&t(1,i=a.strokeWidth),"class"in a&&t(2,r=a.class)},[n,i,r]}class sp extends Mt{constructor(e){super(),bt(this,e,u0,h0,St,{size:0,strokeWidth:1,class:2})}}function f0(s){let e,t,n,i,r;return{c(){e=Je("svg"),t=Je("polygon"),n=Je("polyline"),i=Je("polyline"),this.h()},l(a){e=Ke(a,"svg",{xmlns:!0,width:!0,height:!0,fill:!0,viewBox:!0,stroke:!0,"stroke-width":!0,"stroke-linecap":!0,"stroke-linejoin":!0,class:!0});var o=G(e);t=Ke(o,"polygon",{points:!0}),G(t).forEach(R),n=Ke(o,"polyline",{points:!0}),G(n).forEach(R),i=Ke(o,"polyline",{points:!0}),G(i).forEach(R),o.forEach(R),this.h()},h(){b(t,"points","12 2 2 7 12 12 22 7 12 2"),b(n,"points","2 17 12 22 22 17"),b(i,"points","2 12 12 17 22 12"),b(e,"xmlns","http://www.w3.org/2000/svg"),b(e,"width",s[0]),b(e,"height",s[0]),b(e,"fill","none"),b(e,"viewBox","0 0 24 24"),b(e,"stroke","currentColor"),b(e,"stroke-width",s[1]),b(e,"stroke-linecap","round"),b(e,"stroke-linejoin","round"),b(e,"class",r="feather feather-layers "+s[2])},m(a,o){ae(a,e,o),k(e,t),k(e,n),k(e,i)},p(a,[o]){o&1&&b(e,"width",a[0]),o&1&&b(e,"height",a[0]),o&2&&b(e,"stroke-width",a[1]),o&4&&r!==(r="feather feather-layers "+a[2])&&b(e,"class",r)},i:Ze,o:Ze,d(a){a&&R(e)}}}function d0(s,e,t){let{size:n="24"}=e,{strokeWidth:i=2}=e,{class:r=""}=e;return n!=="100%"&&(n=n.slice(-1)==="x"?n.slice(0,n.length-1)+"em":parseInt(n)+"px"),s.$$set=a=>{"size"in a&&t(0,n=a.size),"strokeWidth"in a&&t(1,i=a.strokeWidth),"class"in a&&t(2,r=a.class)},[n,i,r]}class rp extends Mt{constructor(e){super(),bt(this,e,d0,f0,St,{size:0,strokeWidth:1,class:2})}}function p0(s){let e,t,n,i;return{c(){e=Je("svg"),t=Je("rect"),n=Je("path"),this.h()},l(r){e=Ke(r,"svg",{xmlns:!0,width:!0,height:!0,fill:!0,viewBox:!0,stroke:!0,"stroke-width":!0,"stroke-linecap":!0,"stroke-linejoin":!0,class:!0});var a=G(e);t=Ke(a,"rect",{x:!0,y:!0,width:!0,height:!0,rx:!0,ry:!0}),G(t).forEach(R),n=Ke(a,"path",{d:!0}),G(n).forEach(R),a.forEach(R),this.h()},h(){b(t,"x","3"),b(t,"y","11"),b(t,"width","18"),b(t,"height","11"),b(t,"rx","2"),b(t,"ry","2"),b(n,"d","M7 11V7a5 5 0 0 1 10 0v4"),b(e,"xmlns","http://www.w3.org/2000/svg"),b(e,"width",s[0]),b(e,"height",s[0]),b(e,"fill","none"),b(e,"viewBox","0 0 24 24"),b(e,"stroke","currentColor"),b(e,"stroke-width",s[1]),b(e,"stroke-linecap","round"),b(e,"stroke-linejoin","round"),b(e,"class",i="feather feather-lock "+s[2])},m(r,a){ae(r,e,a),k(e,t),k(e,n)},p(r,[a]){a&1&&b(e,"width",r[0]),a&1&&b(e,"height",r[0]),a&2&&b(e,"stroke-width",r[1]),a&4&&i!==(i="feather feather-lock "+r[2])&&b(e,"class",i)},i:Ze,o:Ze,d(r){r&&R(e)}}}function m0(s,e,t){let{size:n="24"}=e,{strokeWidth:i=2}=e,{class:r=""}=e;return n!=="100%"&&(n=n.slice(-1)==="x"?n.slice(0,n.length-1)+"em":parseInt(n)+"px"),s.$$set=a=>{"size"in a&&t(0,n=a.size),"strokeWidth"in a&&t(1,i=a.strokeWidth),"class"in a&&t(2,r=a.class)},[n,i,r]}class g0 extends Mt{constructor(e){super(),bt(this,e,m0,p0,St,{size:0,strokeWidth:1,class:2})}}function _0(s){let e,t,n,i,r,a;return{c(){e=Je("svg"),t=Je("polyline"),n=Je("polyline"),i=Je("line"),r=Je("line"),this.h()},l(o){e=Ke(o,"svg",{xmlns:!0,width:!0,height:!0,fill:!0,viewBox:!0,stroke:!0,"stroke-width":!0,"stroke-linecap":!0,"stroke-linejoin":!0,class:!0});var l=G(e);t=Ke(l,"polyline",{points:!0}),G(t).forEach(R),n=Ke(l,"polyline",{points:!0}),G(n).forEach(R),i=Ke(l,"line",{x1:!0,y1:!0,x2:!0,y2:!0}),G(i).forEach(R),r=Ke(l,"line",{x1:!0,y1:!0,x2:!0,y2:!0}),G(r).forEach(R),l.forEach(R),this.h()},h(){b(t,"points","15 3 21 3 21 9"),b(n,"points","9 21 3 21 3 15"),b(i,"x1","21"),b(i,"y1","3"),b(i,"x2","14"),b(i,"y2","10"),b(r,"x1","3"),b(r,"y1","21"),b(r,"x2","10"),b(r,"y2","14"),b(e,"xmlns","http://www.w3.org/2000/svg"),b(e,"width",s[0]),b(e,"height",s[0]),b(e,"fill","none"),b(e,"viewBox","0 0 24 24"),b(e,"stroke","currentColor"),b(e,"stroke-width",s[1]),b(e,"stroke-linecap","round"),b(e,"stroke-linejoin","round"),b(e,"class",a="feather feather-maximize-2 "+s[2])},m(o,l){ae(o,e,l),k(e,t),k(e,n),k(e,i),k(e,r)},p(o,[l]){l&1&&b(e,"width",o[0]),l&1&&b(e,"height",o[0]),l&2&&b(e,"stroke-width",o[1]),l&4&&a!==(a="feather feather-maximize-2 "+o[2])&&b(e,"class",a)},i:Ze,o:Ze,d(o){o&&R(e)}}}function v0(s,e,t){let{size:n="24"}=e,{strokeWidth:i=2}=e,{class:r=""}=e;return n!=="100%"&&(n=n.slice(-1)==="x"?n.slice(0,n.length-1)+"em":parseInt(n)+"px"),s.$$set=a=>{"size"in a&&t(0,n=a.size),"strokeWidth"in a&&t(1,i=a.strokeWidth),"class"in a&&t(2,r=a.class)},[n,i,r]}class y0 extends Mt{constructor(e){super(),bt(this,e,v0,_0,St,{size:0,strokeWidth:1,class:2})}}function x0(s){let e,t,n;return{c(){e=Je("svg"),t=Je("path"),this.h()},l(i){e=Ke(i,"svg",{xmlns:!0,width:!0,height:!0,fill:!0,viewBox:!0,stroke:!0,"stroke-width":!0,"stroke-linecap":!0,"stroke-linejoin":!0,class:!0});var r=G(e);t=Ke(r,"path",{d:!0}),G(t).forEach(R),r.forEach(R),this.h()},h(){b(t,"d","M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"),b(e,"xmlns","http://www.w3.org/2000/svg"),b(e,"width",s[0]),b(e,"height",s[0]),b(e,"fill","none"),b(e,"viewBox","0 0 24 24"),b(e,"stroke","currentColor"),b(e,"stroke-width",s[1]),b(e,"stroke-linecap","round"),b(e,"stroke-linejoin","round"),b(e,"class",n="feather feather-moon "+s[2])},m(i,r){ae(i,e,r),k(e,t)},p(i,[r]){r&1&&b(e,"width",i[0]),r&1&&b(e,"height",i[0]),r&2&&b(e,"stroke-width",i[1]),r&4&&n!==(n="feather feather-moon "+i[2])&&b(e,"class",n)},i:Ze,o:Ze,d(i){i&&R(e)}}}function M0(s,e,t){let{size:n="24"}=e,{strokeWidth:i=2}=e,{class:r=""}=e;return n!=="100%"&&(n=n.slice(-1)==="x"?n.slice(0,n.length-1)+"em":parseInt(n)+"px"),s.$$set=a=>{"size"in a&&t(0,n=a.size),"strokeWidth"in a&&t(1,i=a.strokeWidth),"class"in a&&t(2,r=a.class)},[n,i,r]}class b0 extends Mt{constructor(e){super(),bt(this,e,M0,x0,St,{size:0,strokeWidth:1,class:2})}}function S0(s){let e,t,n,i,r,a,o,l;return{c(){e=Je("svg"),t=Je("polyline"),n=Je("polyline"),i=Je("polyline"),r=Je("polyline"),a=Je("line"),o=Je("line"),this.h()},l(c){e=Ke(c,"svg",{xmlns:!0,width:!0,height:!0,fill:!0,viewBox:!0,stroke:!0,"stroke-width":!0,"stroke-linecap":!0,"stroke-linejoin":!0,class:!0});var h=G(e);t=Ke(h,"polyline",{points:!0}),G(t).forEach(R),n=Ke(h,"polyline",{points:!0}),G(n).forEach(R),i=Ke(h,"polyline",{points:!0}),G(i).forEach(R),r=Ke(h,"polyline",{points:!0}),G(r).forEach(R),a=Ke(h,"line",{x1:!0,y1:!0,x2:!0,y2:!0}),G(a).forEach(R),o=Ke(h,"line",{x1:!0,y1:!0,x2:!0,y2:!0}),G(o).forEach(R),h.forEach(R),this.h()},h(){b(t,"points","5 9 2 12 5 15"),b(n,"points","9 5 12 2 15 5"),b(i,"points","15 19 12 22 9 19"),b(r,"points","19 9 22 12 19 15"),b(a,"x1","2"),b(a,"y1","12"),b(a,"x2","22"),b(a,"y2","12"),b(o,"x1","12"),b(o,"y1","2"),b(o,"x2","12"),b(o,"y2","22"),b(e,"xmlns","http://www.w3.org/2000/svg"),b(e,"width",s[0]),b(e,"height",s[0]),b(e,"fill","none"),b(e,"viewBox","0 0 24 24"),b(e,"stroke","currentColor"),b(e,"stroke-width",s[1]),b(e,"stroke-linecap","round"),b(e,"stroke-linejoin","round"),b(e,"class",l="feather feather-move "+s[2])},m(c,h){ae(c,e,h),k(e,t),k(e,n),k(e,i),k(e,r),k(e,a),k(e,o)},p(c,[h]){h&1&&b(e,"width",c[0]),h&1&&b(e,"height",c[0]),h&2&&b(e,"stroke-width",c[1]),h&4&&l!==(l="feather feather-move "+c[2])&&b(e,"class",l)},i:Ze,o:Ze,d(c){c&&R(e)}}}function w0(s,e,t){let{size:n="24"}=e,{strokeWidth:i=2}=e,{class:r=""}=e;return n!=="100%"&&(n=n.slice(-1)==="x"?n.slice(0,n.length-1)+"em":parseInt(n)+"px"),s.$$set=a=>{"size"in a&&t(0,n=a.size),"strokeWidth"in a&&t(1,i=a.strokeWidth),"class"in a&&t(2,r=a.class)},[n,i,r]}class E0 extends Mt{constructor(e){super(),bt(this,e,w0,S0,St,{size:0,strokeWidth:1,class:2})}}function T0(s){let e,t,n,i;return{c(){e=Je("svg"),t=Je("line"),n=Je("line"),this.h()},l(r){e=Ke(r,"svg",{xmlns:!0,width:!0,height:!0,fill:!0,viewBox:!0,stroke:!0,"stroke-width":!0,"stroke-linecap":!0,"stroke-linejoin":!0,class:!0});var a=G(e);t=Ke(a,"line",{x1:!0,y1:!0,x2:!0,y2:!0}),G(t).forEach(R),n=Ke(a,"line",{x1:!0,y1:!0,x2:!0,y2:!0}),G(n).forEach(R),a.forEach(R),this.h()},h(){b(t,"x1","12"),b(t,"y1","5"),b(t,"x2","12"),b(t,"y2","19"),b(n,"x1","5"),b(n,"y1","12"),b(n,"x2","19"),b(n,"y2","12"),b(e,"xmlns","http://www.w3.org/2000/svg"),b(e,"width",s[0]),b(e,"height",s[0]),b(e,"fill","none"),b(e,"viewBox","0 0 24 24"),b(e,"stroke","currentColor"),b(e,"stroke-width",s[1]),b(e,"stroke-linecap","round"),b(e,"stroke-linejoin","round"),b(e,"class",i="feather feather-plus "+s[2])},m(r,a){ae(r,e,a),k(e,t),k(e,n)},p(r,[a]){a&1&&b(e,"width",r[0]),a&1&&b(e,"height",r[0]),a&2&&b(e,"stroke-width",r[1]),a&4&&i!==(i="feather feather-plus "+r[2])&&b(e,"class",i)},i:Ze,o:Ze,d(r){r&&R(e)}}}function A0(s,e,t){let{size:n="24"}=e,{strokeWidth:i=2}=e,{class:r=""}=e;return n!=="100%"&&(n=n.slice(-1)==="x"?n.slice(0,n.length-1)+"em":parseInt(n)+"px"),s.$$set=a=>{"size"in a&&t(0,n=a.size),"strokeWidth"in a&&t(1,i=a.strokeWidth),"class"in a&&t(2,r=a.class)},[n,i,r]}class C0 extends Mt{constructor(e){super(),bt(this,e,A0,T0,St,{size:0,strokeWidth:1,class:2})}}function R0(s){let e,t,n,i,r;return{c(){e=Je("svg"),t=Je("polyline"),n=Je("polyline"),i=Je("path"),this.h()},l(a){e=Ke(a,"svg",{xmlns:!0,width:!0,height:!0,fill:!0,viewBox:!0,stroke:!0,"stroke-width":!0,"stroke-linecap":!0,"stroke-linejoin":!0,class:!0});var o=G(e);t=Ke(o,"polyline",{points:!0}),G(t).forEach(R),n=Ke(o,"polyline",{points:!0}),G(n).forEach(R),i=Ke(o,"path",{d:!0}),G(i).forEach(R),o.forEach(R),this.h()},h(){b(t,"points","1 4 1 10 7 10"),b(n,"points","23 20 23 14 17 14"),b(i,"d","M20.49 9A9 9 0 0 0 5.64 5.64L1 10m22 4l-4.64 4.36A9 9 0 0 1 3.51 15"),b(e,"xmlns","http://www.w3.org/2000/svg"),b(e,"width",s[0]),b(e,"height",s[0]),b(e,"fill","none"),b(e,"viewBox","0 0 24 24"),b(e,"stroke","currentColor"),b(e,"stroke-width",s[1]),b(e,"stroke-linecap","round"),b(e,"stroke-linejoin","round"),b(e,"class",r="feather feather-refresh-ccw "+s[2])},m(a,o){ae(a,e,o),k(e,t),k(e,n),k(e,i)},p(a,[o]){o&1&&b(e,"width",a[0]),o&1&&b(e,"height",a[0]),o&2&&b(e,"stroke-width",a[1]),o&4&&r!==(r="feather feather-refresh-ccw "+a[2])&&b(e,"class",r)},i:Ze,o:Ze,d(a){a&&R(e)}}}function P0(s,e,t){let{size:n="24"}=e,{strokeWidth:i=2}=e,{class:r=""}=e;return n!=="100%"&&(n=n.slice(-1)==="x"?n.slice(0,n.length-1)+"em":parseInt(n)+"px"),s.$$set=a=>{"size"in a&&t(0,n=a.size),"strokeWidth"in a&&t(1,i=a.strokeWidth),"class"in a&&t(2,r=a.class)},[n,i,r]}class L0 extends Mt{constructor(e){super(),bt(this,e,P0,R0,St,{size:0,strokeWidth:1,class:2})}}function I0(s){let e,t,n,i;return{c(){e=Je("svg"),t=Je("circle"),n=Je("path"),this.h()},l(r){e=Ke(r,"svg",{xmlns:!0,width:!0,height:!0,fill:!0,viewBox:!0,stroke:!0,"stroke-width":!0,"stroke-linecap":!0,"stroke-linejoin":!0,class:!0});var a=G(e);t=Ke(a,"circle",{cx:!0,cy:!0,r:!0}),G(t).forEach(R),n=Ke(a,"path",{d:!0}),G(n).forEach(R),a.forEach(R),this.h()},h(){b(t,"cx","12"),b(t,"cy","12"),b(t,"r","3"),b(n,"d","M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z"),b(e,"xmlns","http://www.w3.org/2000/svg"),b(e,"width",s[0]),b(e,"height",s[0]),b(e,"fill","none"),b(e,"viewBox","0 0 24 24"),b(e,"stroke","currentColor"),b(e,"stroke-width",s[1]),b(e,"stroke-linecap","round"),b(e,"stroke-linejoin","round"),b(e,"class",i="feather feather-settings "+s[2])},m(r,a){ae(r,e,a),k(e,t),k(e,n)},p(r,[a]){a&1&&b(e,"width",r[0]),a&1&&b(e,"height",r[0]),a&2&&b(e,"stroke-width",r[1]),a&4&&i!==(i="feather feather-settings "+r[2])&&b(e,"class",i)},i:Ze,o:Ze,d(r){r&&R(e)}}}function D0(s,e,t){let{size:n="24"}=e,{strokeWidth:i=2}=e,{class:r=""}=e;return n!=="100%"&&(n=n.slice(-1)==="x"?n.slice(0,n.length-1)+"em":parseInt(n)+"px"),s.$$set=a=>{"size"in a&&t(0,n=a.size),"strokeWidth"in a&&t(1,i=a.strokeWidth),"class"in a&&t(2,r=a.class)},[n,i,r]}class U0 extends Mt{constructor(e){super(),bt(this,e,D0,I0,St,{size:0,strokeWidth:1,class:2})}}function N0(s){let e,t,n,i,r,a,o,l,c,h,u;return{c(){e=Je("svg"),t=Je("circle"),n=Je("line"),i=Je("line"),r=Je("line"),a=Je("line"),o=Je("line"),l=Je("line"),c=Je("line"),h=Je("line"),this.h()},l(f){e=Ke(f,"svg",{xmlns:!0,width:!0,height:!0,fill:!0,viewBox:!0,stroke:!0,"stroke-width":!0,"stroke-linecap":!0,"stroke-linejoin":!0,class:!0});var d=G(e);t=Ke(d,"circle",{cx:!0,cy:!0,r:!0}),G(t).forEach(R),n=Ke(d,"line",{x1:!0,y1:!0,x2:!0,y2:!0}),G(n).forEach(R),i=Ke(d,"line",{x1:!0,y1:!0,x2:!0,y2:!0}),G(i).forEach(R),r=Ke(d,"line",{x1:!0,y1:!0,x2:!0,y2:!0}),G(r).forEach(R),a=Ke(d,"line",{x1:!0,y1:!0,x2:!0,y2:!0}),G(a).forEach(R),o=Ke(d,"line",{x1:!0,y1:!0,x2:!0,y2:!0}),G(o).forEach(R),l=Ke(d,"line",{x1:!0,y1:!0,x2:!0,y2:!0}),G(l).forEach(R),c=Ke(d,"line",{x1:!0,y1:!0,x2:!0,y2:!0}),G(c).forEach(R),h=Ke(d,"line",{x1:!0,y1:!0,x2:!0,y2:!0}),G(h).forEach(R),d.forEach(R),this.h()},h(){b(t,"cx","12"),b(t,"cy","12"),b(t,"r","5"),b(n,"x1","12"),b(n,"y1","1"),b(n,"x2","12"),b(n,"y2","3"),b(i,"x1","12"),b(i,"y1","21"),b(i,"x2","12"),b(i,"y2","23"),b(r,"x1","4.22"),b(r,"y1","4.22"),b(r,"x2","5.64"),b(r,"y2","5.64"),b(a,"x1","18.36"),b(a,"y1","18.36"),b(a,"x2","19.78"),b(a,"y2","19.78"),b(o,"x1","1"),b(o,"y1","12"),b(o,"x2","3"),b(o,"y2","12"),b(l,"x1","21"),b(l,"y1","12"),b(l,"x2","23"),b(l,"y2","12"),b(c,"x1","4.22"),b(c,"y1","19.78"),b(c,"x2","5.64"),b(c,"y2","18.36"),b(h,"x1","18.36"),b(h,"y1","5.64"),b(h,"x2","19.78"),b(h,"y2","4.22"),b(e,"xmlns","http://www.w3.org/2000/svg"),b(e,"width",s[0]),b(e,"height",s[0]),b(e,"fill","none"),b(e,"viewBox","0 0 24 24"),b(e,"stroke","currentColor"),b(e,"stroke-width",s[1]),b(e,"stroke-linecap","round"),b(e,"stroke-linejoin","round"),b(e,"class",u="feather feather-sun "+s[2])},m(f,d){ae(f,e,d),k(e,t),k(e,n),k(e,i),k(e,r),k(e,a),k(e,o),k(e,l),k(e,c),k(e,h)},p(f,[d]){d&1&&b(e,"width",f[0]),d&1&&b(e,"height",f[0]),d&2&&b(e,"stroke-width",f[1]),d&4&&u!==(u="feather feather-sun "+f[2])&&b(e,"class",u)},i:Ze,o:Ze,d(f){f&&R(e)}}}function O0(s,e,t){let{size:n="24"}=e,{strokeWidth:i=2}=e,{class:r=""}=e;return n!=="100%"&&(n=n.slice(-1)==="x"?n.slice(0,n.length-1)+"em":parseInt(n)+"px"),s.$$set=a=>{"size"in a&&t(0,n=a.size),"strokeWidth"in a&&t(1,i=a.strokeWidth),"class"in a&&t(2,r=a.class)},[n,i,r]}class k0 extends Mt{constructor(e){super(),bt(this,e,O0,N0,St,{size:0,strokeWidth:1,class:2})}}function no(s,e){return s==null||e==null?NaN:s<e?-1:s>e?1:s>=e?0:NaN}function F0(s,e){return s==null||e==null?NaN:e<s?-1:e>s?1:e>=s?0:NaN}function ap(s){let e,t,n;s.length!==2?(e=no,t=(o,l)=>no(s(o),l),n=(o,l)=>s(o)-l):(e=s===no||s===F0?s:B0,t=s,n=s);function i(o,l,c=0,h=o.length){if(c<h){if(e(l,l)!==0)return h;do{const u=c+h>>>1;t(o[u],l)<0?c=u+1:h=u}while(c<h)}return c}function r(o,l,c=0,h=o.length){if(c<h){if(e(l,l)!==0)return h;do{const u=c+h>>>1;t(o[u],l)<=0?c=u+1:h=u}while(c<h)}return c}function a(o,l,c=0,h=o.length){const u=i(o,l,c,h-1);return u>c&&n(o[u-1],l)>-n(o[u],l)?u-1:u}return{left:i,center:a,right:r}}function B0(){return 0}function z0(s){return s===null?NaN:+s}const V0=ap(no),H0=V0.right;ap(z0).center;const G0=H0,W0=Math.sqrt(50),X0=Math.sqrt(10),$0=Math.sqrt(2);function _o(s,e,t){const n=(e-s)/Math.max(0,t),i=Math.floor(Math.log10(n)),r=n/Math.pow(10,i),a=r>=W0?10:r>=X0?5:r>=$0?2:1;let o,l,c;return i<0?(c=Math.pow(10,-i)/a,o=Math.round(s*c),l=Math.round(e*c),o/c<s&&++o,l/c>e&&--l,c=-c):(c=Math.pow(10,i)*a,o=Math.round(s/c),l=Math.round(e/c),o*c<s&&++o,l*c>e&&--l),l<o&&.5<=t&&t<2?_o(s,e,t*2):[o,l,c]}function tc(s,e,t){if(e=+e,s=+s,t=+t,!(t>0))return[];if(s===e)return[s];const n=e<s,[i,r,a]=n?_o(e,s,t):_o(s,e,t);if(!(r>=i))return[];const o=r-i+1,l=new Array(o);if(n)if(a<0)for(let c=0;c<o;++c)l[c]=(r-c)/-a;else for(let c=0;c<o;++c)l[c]=(r-c)*a;else if(a<0)for(let c=0;c<o;++c)l[c]=(i+c)/-a;else for(let c=0;c<o;++c)l[c]=(i+c)*a;return l}function nc(s,e,t){return e=+e,s=+s,t=+t,_o(s,e,t)[2]}function Y0(s,e,t){e=+e,s=+s,t=+t;const n=e<s,i=n?nc(e,s,t):nc(s,e,t);return(n?-1:1)*(i<0?1/-i:i)}function q0(s){return s}var gl=1,_l=2,ic=3,Mr=4,cu=1e-6;function Z0(s){return"translate("+s+",0)"}function j0(s){return"translate(0,"+s+")"}function J0(s){return e=>+s(e)}function K0(s,e){return e=Math.max(0,s.bandwidth()-e*2)/2,s.round()&&(e=Math.round(e)),t=>+s(t)+e}function Q0(){return!this.__axis}function op(s,e){var t=[],n=null,i=null,r=6,a=6,o=3,l=typeof window<"u"&&window.devicePixelRatio>1?0:.5,c=s===gl||s===Mr?-1:1,h=s===Mr||s===_l?"x":"y",u=s===gl||s===ic?Z0:j0;function f(d){var p=n??(e.ticks?e.ticks.apply(e,t):e.domain()),m=i??(e.tickFormat?e.tickFormat.apply(e,t):q0),_=Math.max(r,0)+o,g=e.range(),y=+g[0]+l,v=+g[g.length-1]+l,x=(e.bandwidth?K0:J0)(e.copy(),l),M=d.selection?d.selection():d,w=M.selectAll(".domain").data([null]),T=M.selectAll(".tick").data(p,e).order(),I=T.exit(),S=T.enter().append("g").attr("class","tick"),C=T.select("line"),V=T.select("text");w=w.merge(w.enter().insert("path",".tick").attr("class","domain").attr("stroke","currentColor")),T=T.merge(S),C=C.merge(S.append("line").attr("stroke","currentColor").attr(h+"2",c*r)),V=V.merge(S.append("text").attr("fill","currentColor").attr(h,c*_).attr("dy",s===gl?"0em":s===ic?"0.71em":"0.32em")),d!==M&&(w=w.transition(d),T=T.transition(d),C=C.transition(d),V=V.transition(d),I=I.transition(d).attr("opacity",cu).attr("transform",function(X){return isFinite(X=x(X))?u(X+l):this.getAttribute("transform")}),S.attr("opacity",cu).attr("transform",function(X){var F=this.parentNode.__axis;return u((F&&isFinite(F=F(X))?F:x(X))+l)})),I.remove(),w.attr("d",s===Mr||s===_l?a?"M"+c*a+","+y+"H"+l+"V"+v+"H"+c*a:"M"+l+","+y+"V"+v:a?"M"+y+","+c*a+"V"+l+"H"+v+"V"+c*a:"M"+y+","+l+"H"+v),T.attr("opacity",1).attr("transform",function(X){return u(x(X)+l)}),C.attr(h+"2",c*r),V.attr(h,c*_).text(m),M.filter(Q0).attr("fill","none").attr("font-size",10).attr("font-family","sans-serif").attr("text-anchor",s===_l?"start":s===Mr?"end":"middle"),M.each(function(){this.__axis=x})}return f.scale=function(d){return arguments.length?(e=d,f):e},f.ticks=function(){return t=Array.from(arguments),f},f.tickArguments=function(d){return arguments.length?(t=d==null?[]:Array.from(d),f):t.slice()},f.tickValues=function(d){return arguments.length?(n=d==null?null:Array.from(d),f):n&&n.slice()},f.tickFormat=function(d){return arguments.length?(i=d,f):i},f.tickSize=function(d){return arguments.length?(r=a=+d,f):r},f.tickSizeInner=function(d){return arguments.length?(r=+d,f):r},f.tickSizeOuter=function(d){return arguments.length?(a=+d,f):a},f.tickPadding=function(d){return arguments.length?(o=+d,f):o},f.offset=function(d){return arguments.length?(l=+d,f):l},f}function e_(s){return op(ic,s)}function t_(s){return op(Mr,s)}function n_(s){return typeof s=="string"?new iu([[document.querySelector(s)]],[document.documentElement]):new iu([[s]],Vg)}function i_(s,e){e||(e=[]);var t=s?Math.min(e.length,s.length):0,n=e.slice(),i;return function(r){for(i=0;i<t;++i)n[i]=s[i]*(1-r)+e[i]*r;return n}}function s_(s){return ArrayBuffer.isView(s)&&!(s instanceof DataView)}function r_(s,e){var t=e?e.length:0,n=s?Math.min(t,s.length):0,i=new Array(n),r=new Array(t),a;for(a=0;a<n;++a)i[a]=Zc(s[a],e[a]);for(;a<t;++a)r[a]=e[a];return function(o){for(a=0;a<n;++a)r[a]=i[a](o);return r}}function a_(s,e){var t=new Date;return s=+s,e=+e,function(n){return t.setTime(s*(1-n)+e*n),t}}function o_(s,e){var t={},n={},i;(s===null||typeof s!="object")&&(s={}),(e===null||typeof e!="object")&&(e={});for(i in e)i in s?t[i]=Zc(s[i],e[i]):n[i]=e[i];return function(r){for(i in t)n[i]=t[i](r);return n}}function Zc(s,e){var t=typeof e,n;return e==null||t==="boolean"?Hg(e):(t==="number"?ec:t==="string"?(n=su(e))?(e=n,ru):Gg:e instanceof su?ru:e instanceof Date?a_:s_(e)?i_:Array.isArray(e)?r_:typeof e.valueOf!="function"&&typeof e.toString!="function"||isNaN(e)?o_:ec)(s,e)}function l_(s,e){return s=+s,e=+e,function(t){return Math.round(s*(1-t)+e*t)}}const sc=Math.PI,rc=2*sc,ss=1e-6,c_=rc-ss;function lp(s){this._+=s[0];for(let e=1,t=s.length;e<t;++e)this._+=arguments[e]+s[e]}function h_(s){let e=Math.floor(s);if(!(e>=0))throw new Error(`invalid digits: ${s}`);if(e>15)return lp;const t=10**e;return function(n){this._+=n[0];for(let i=1,r=n.length;i<r;++i)this._+=Math.round(arguments[i]*t)/t+n[i]}}let u_=class{constructor(e){this._x0=this._y0=this._x1=this._y1=null,this._="",this._append=e==null?lp:h_(e)}moveTo(e,t){this._append`M${this._x0=this._x1=+e},${this._y0=this._y1=+t}`}closePath(){this._x1!==null&&(this._x1=this._x0,this._y1=this._y0,this._append`Z`)}lineTo(e,t){this._append`L${this._x1=+e},${this._y1=+t}`}quadraticCurveTo(e,t,n,i){this._append`Q${+e},${+t},${this._x1=+n},${this._y1=+i}`}bezierCurveTo(e,t,n,i,r,a){this._append`C${+e},${+t},${+n},${+i},${this._x1=+r},${this._y1=+a}`}arcTo(e,t,n,i,r){if(e=+e,t=+t,n=+n,i=+i,r=+r,r<0)throw new Error(`negative radius: ${r}`);let a=this._x1,o=this._y1,l=n-e,c=i-t,h=a-e,u=o-t,f=h*h+u*u;if(this._x1===null)this._append`M${this._x1=e},${this._y1=t}`;else if(f>ss)if(!(Math.abs(u*l-c*h)>ss)||!r)this._append`L${this._x1=e},${this._y1=t}`;else{let d=n-a,p=i-o,m=l*l+c*c,_=d*d+p*p,g=Math.sqrt(m),y=Math.sqrt(f),v=r*Math.tan((sc-Math.acos((m+f-_)/(2*g*y)))/2),x=v/y,M=v/g;Math.abs(x-1)>ss&&this._append`L${e+x*h},${t+x*u}`,this._append`A${r},${r},0,0,${+(u*d>h*p)},${this._x1=e+M*l},${this._y1=t+M*c}`}}arc(e,t,n,i,r,a){if(e=+e,t=+t,n=+n,a=!!a,n<0)throw new Error(`negative radius: ${n}`);let o=n*Math.cos(i),l=n*Math.sin(i),c=e+o,h=t+l,u=1^a,f=a?i-r:r-i;this._x1===null?this._append`M${c},${h}`:(Math.abs(this._x1-c)>ss||Math.abs(this._y1-h)>ss)&&this._append`L${c},${h}`,n&&(f<0&&(f=f%rc+rc),f>c_?this._append`A${n},${n},0,1,${u},${e-o},${t-l}A${n},${n},0,1,${u},${this._x1=c},${this._y1=h}`:f>ss&&this._append`A${n},${n},0,${+(f>=sc)},${u},${this._x1=e+n*Math.cos(r)},${this._y1=t+n*Math.sin(r)}`)}rect(e,t,n,i){this._append`M${this._x0=this._x1=+e},${this._y0=this._y1=+t}h${n=+n}v${+i}h${-n}Z`}toString(){return this._}};function f_(s){return Math.abs(s=Math.round(s))>=1e21?s.toLocaleString("en").replace(/,/g,""):s.toString(10)}function vo(s,e){if((t=(s=e?s.toExponential(e-1):s.toExponential()).indexOf("e"))<0)return null;var t,n=s.slice(0,t);return[n.length>1?n[0]+n.slice(2):n,+s.slice(t+1)]}function Qs(s){return s=vo(Math.abs(s)),s?s[1]:NaN}function d_(s,e){return function(t,n){for(var i=t.length,r=[],a=0,o=s[0],l=0;i>0&&o>0&&(l+o+1>n&&(o=Math.max(1,n-l)),r.push(t.substring(i-=o,i+o)),!((l+=o+1)>n));)o=s[a=(a+1)%s.length];return r.reverse().join(e)}}function p_(s){return function(e){return e.replace(/[0-9]/g,function(t){return s[+t]})}}var m_=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function Nr(s){if(!(e=m_.exec(s)))throw new Error("invalid format: "+s);var e;return new jc({fill:e[1],align:e[2],sign:e[3],symbol:e[4],zero:e[5],width:e[6],comma:e[7],precision:e[8]&&e[8].slice(1),trim:e[9],type:e[10]})}Nr.prototype=jc.prototype;function jc(s){this.fill=s.fill===void 0?" ":s.fill+"",this.align=s.align===void 0?">":s.align+"",this.sign=s.sign===void 0?"-":s.sign+"",this.symbol=s.symbol===void 0?"":s.symbol+"",this.zero=!!s.zero,this.width=s.width===void 0?void 0:+s.width,this.comma=!!s.comma,this.precision=s.precision===void 0?void 0:+s.precision,this.trim=!!s.trim,this.type=s.type===void 0?"":s.type+""}jc.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(this.width===void 0?"":Math.max(1,this.width|0))+(this.comma?",":"")+(this.precision===void 0?"":"."+Math.max(0,this.precision|0))+(this.trim?"~":"")+this.type};function g_(s){e:for(var e=s.length,t=1,n=-1,i;t<e;++t)switch(s[t]){case".":n=i=t;break;case"0":n===0&&(n=t),i=t;break;default:if(!+s[t])break e;n>0&&(n=0);break}return n>0?s.slice(0,n)+s.slice(i+1):s}var cp;function __(s,e){var t=vo(s,e);if(!t)return s+"";var n=t[0],i=t[1],r=i-(cp=Math.max(-8,Math.min(8,Math.floor(i/3)))*3)+1,a=n.length;return r===a?n:r>a?n+new Array(r-a+1).join("0"):r>0?n.slice(0,r)+"."+n.slice(r):"0."+new Array(1-r).join("0")+vo(s,Math.max(0,e+r-1))[0]}function hu(s,e){var t=vo(s,e);if(!t)return s+"";var n=t[0],i=t[1];return i<0?"0."+new Array(-i).join("0")+n:n.length>i+1?n.slice(0,i+1)+"."+n.slice(i+1):n+new Array(i-n.length+2).join("0")}const uu={"%":(s,e)=>(s*100).toFixed(e),b:s=>Math.round(s).toString(2),c:s=>s+"",d:f_,e:(s,e)=>s.toExponential(e),f:(s,e)=>s.toFixed(e),g:(s,e)=>s.toPrecision(e),o:s=>Math.round(s).toString(8),p:(s,e)=>hu(s*100,e),r:hu,s:__,X:s=>Math.round(s).toString(16).toUpperCase(),x:s=>Math.round(s).toString(16)};function fu(s){return s}var du=Array.prototype.map,pu=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];function v_(s){var e=s.grouping===void 0||s.thousands===void 0?fu:d_(du.call(s.grouping,Number),s.thousands+""),t=s.currency===void 0?"":s.currency[0]+"",n=s.currency===void 0?"":s.currency[1]+"",i=s.decimal===void 0?".":s.decimal+"",r=s.numerals===void 0?fu:p_(du.call(s.numerals,String)),a=s.percent===void 0?"%":s.percent+"",o=s.minus===void 0?"−":s.minus+"",l=s.nan===void 0?"NaN":s.nan+"";function c(u){u=Nr(u);var f=u.fill,d=u.align,p=u.sign,m=u.symbol,_=u.zero,g=u.width,y=u.comma,v=u.precision,x=u.trim,M=u.type;M==="n"?(y=!0,M="g"):uu[M]||(v===void 0&&(v=12),x=!0,M="g"),(_||f==="0"&&d==="=")&&(_=!0,f="0",d="=");var w=m==="$"?t:m==="#"&&/[boxX]/.test(M)?"0"+M.toLowerCase():"",T=m==="$"?n:/[%p]/.test(M)?a:"",I=uu[M],S=/[defgprs%]/.test(M);v=v===void 0?6:/[gprs]/.test(M)?Math.max(1,Math.min(21,v)):Math.max(0,Math.min(20,v));function C(V){var X=w,F=T,B,N,Y;if(M==="c")F=I(V)+F,V="";else{V=+V;var O=V<0||1/V<0;if(V=isNaN(V)?l:I(Math.abs(V),v),x&&(V=g_(V)),O&&+V==0&&p!=="+"&&(O=!1),X=(O?p==="("?p:o:p==="-"||p==="("?"":p)+X,F=(M==="s"?pu[8+cp/3]:"")+F+(O&&p==="("?")":""),S){for(B=-1,N=V.length;++B<N;)if(Y=V.charCodeAt(B),48>Y||Y>57){F=(Y===46?i+V.slice(B+1):V.slice(B))+F,V=V.slice(0,B);break}}}y&&!_&&(V=e(V,1/0));var Z=X.length+V.length+F.length,q=Z<g?new Array(g-Z+1).join(f):"";switch(y&&_&&(V=e(q+V,q.length?g-F.length:1/0),q=""),d){case"<":V=X+V+F+q;break;case"=":V=X+q+V+F;break;case"^":V=q.slice(0,Z=q.length>>1)+X+V+F+q.slice(Z);break;default:V=q+X+V+F;break}return r(V)}return C.toString=function(){return u+""},C}function h(u,f){var d=c((u=Nr(u),u.type="f",u)),p=Math.max(-8,Math.min(8,Math.floor(Qs(f)/3)))*3,m=Math.pow(10,-p),_=pu[8+p/3];return function(g){return d(m*g)+_}}return{format:c,formatPrefix:h}}var da,Jc,hp;y_({thousands:",",grouping:[3],currency:["$",""]});function y_(s){return da=v_(s),Jc=da.format,hp=da.formatPrefix,da}function x_(s){return Math.max(0,-Qs(Math.abs(s)))}function M_(s,e){return Math.max(0,Math.max(-8,Math.min(8,Math.floor(Qs(e)/3)))*3-Qs(Math.abs(s)))}function b_(s,e){return s=Math.abs(s),e=Math.abs(e)-s,Math.max(0,Qs(e)-Qs(s))+1}function up(s,e){switch(arguments.length){case 0:break;case 1:this.range(s);break;default:this.range(e).domain(s);break}return this}function S_(s){return function(){return s}}function w_(s){return+s}var mu=[0,1];function Xs(s){return s}function ac(s,e){return(e-=s=+s)?function(t){return(t-s)/e}:S_(isNaN(e)?NaN:.5)}function E_(s,e){var t;return s>e&&(t=s,s=e,e=t),function(n){return Math.max(s,Math.min(e,n))}}function T_(s,e,t){var n=s[0],i=s[1],r=e[0],a=e[1];return i<n?(n=ac(i,n),r=t(a,r)):(n=ac(n,i),r=t(r,a)),function(o){return r(n(o))}}function A_(s,e,t){var n=Math.min(s.length,e.length)-1,i=new Array(n),r=new Array(n),a=-1;for(s[n]<s[0]&&(s=s.slice().reverse(),e=e.slice().reverse());++a<n;)i[a]=ac(s[a],s[a+1]),r[a]=t(e[a],e[a+1]);return function(o){var l=G0(s,o,1,n)-1;return r[l](i[l](o))}}function fp(s,e){return e.domain(s.domain()).range(s.range()).interpolate(s.interpolate()).clamp(s.clamp()).unknown(s.unknown())}function dp(){var s=mu,e=mu,t=Zc,n,i,r,a=Xs,o,l,c;function h(){var f=Math.min(s.length,e.length);return a!==Xs&&(a=E_(s[0],s[f-1])),o=f>2?A_:T_,l=c=null,u}function u(f){return f==null||isNaN(f=+f)?r:(l||(l=o(s.map(n),e,t)))(n(a(f)))}return u.invert=function(f){return a(i((c||(c=o(e,s.map(n),ec)))(f)))},u.domain=function(f){return arguments.length?(s=Array.from(f,w_),h()):s.slice()},u.range=function(f){return arguments.length?(e=Array.from(f),h()):e.slice()},u.rangeRound=function(f){return e=Array.from(f),t=l_,h()},u.clamp=function(f){return arguments.length?(a=f?!0:Xs,h()):a!==Xs},u.interpolate=function(f){return arguments.length?(t=f,h()):t},u.unknown=function(f){return arguments.length?(r=f,u):r},function(f,d){return n=f,i=d,h()}}function C_(){return dp()(Xs,Xs)}function R_(s,e,t,n){var i=Y0(s,e,t),r;switch(n=Nr(n??",f"),n.type){case"s":{var a=Math.max(Math.abs(s),Math.abs(e));return n.precision==null&&!isNaN(r=M_(i,a))&&(n.precision=r),hp(n,a)}case"":case"e":case"g":case"p":case"r":{n.precision==null&&!isNaN(r=b_(i,Math.max(Math.abs(s),Math.abs(e))))&&(n.precision=r-(n.type==="e"));break}case"f":case"%":{n.precision==null&&!isNaN(r=x_(i))&&(n.precision=r-(n.type==="%")*2);break}}return Jc(n)}function P_(s){var e=s.domain;return s.ticks=function(t){var n=e();return tc(n[0],n[n.length-1],t??10)},s.tickFormat=function(t,n){var i=e();return R_(i[0],i[i.length-1],t??10,n)},s.nice=function(t){t==null&&(t=10);var n=e(),i=0,r=n.length-1,a=n[i],o=n[r],l,c,h=10;for(o<a&&(c=a,a=o,o=c,c=i,i=r,r=c);h-- >0;){if(c=nc(a,o,t),c===l)return n[i]=a,n[r]=o,e(n);if(c>0)a=Math.floor(a/c)*c,o=Math.ceil(o/c)*c;else if(c<0)a=Math.ceil(a*c)/c,o=Math.floor(o*c)/c;else break;l=c}return s},s}function pp(){var s=C_();return s.copy=function(){return fp(s,pp())},up.apply(s,arguments),P_(s)}function L_(s,e){s=s.slice();var t=0,n=s.length-1,i=s[t],r=s[n],a;return r<i&&(a=t,t=n,n=a,a=i,i=r,r=a),s[t]=e.floor(i),s[n]=e.ceil(r),s}function gu(s){return Math.log(s)}function _u(s){return Math.exp(s)}function I_(s){return-Math.log(-s)}function D_(s){return-Math.exp(-s)}function U_(s){return isFinite(s)?+("1e"+s):s<0?0:s}function N_(s){return s===10?U_:s===Math.E?Math.exp:e=>Math.pow(s,e)}function O_(s){return s===Math.E?Math.log:s===10&&Math.log10||s===2&&Math.log2||(s=Math.log(s),e=>Math.log(e)/s)}function vu(s){return(e,t)=>-s(-e,t)}function k_(s){const e=s(gu,_u),t=e.domain;let n=10,i,r;function a(){return i=O_(n),r=N_(n),t()[0]<0?(i=vu(i),r=vu(r),s(I_,D_)):s(gu,_u),e}return e.base=function(o){return arguments.length?(n=+o,a()):n},e.domain=function(o){return arguments.length?(t(o),a()):t()},e.ticks=o=>{const l=t();let c=l[0],h=l[l.length-1];const u=h<c;u&&([c,h]=[h,c]);let f=i(c),d=i(h),p,m;const _=o==null?10:+o;let g=[];if(!(n%1)&&d-f<_){if(f=Math.floor(f),d=Math.ceil(d),c>0){for(;f<=d;++f)for(p=1;p<n;++p)if(m=f<0?p/r(-f):p*r(f),!(m<c)){if(m>h)break;g.push(m)}}else for(;f<=d;++f)for(p=n-1;p>=1;--p)if(m=f>0?p/r(-f):p*r(f),!(m<c)){if(m>h)break;g.push(m)}g.length*2<_&&(g=tc(c,h,_))}else g=tc(f,d,Math.min(d-f,_)).map(r);return u?g.reverse():g},e.tickFormat=(o,l)=>{if(o==null&&(o=10),l==null&&(l=n===10?"s":","),typeof l!="function"&&(!(n%1)&&(l=Nr(l)).precision==null&&(l.trim=!0),l=Jc(l)),o===1/0)return l;const c=Math.max(1,n*o/e.ticks().length);return h=>{let u=h/r(Math.round(i(h)));return u*n<n-.5&&(u*=n),u<=c?l(h):""}},e.nice=()=>t(L_(t(),{floor:o=>r(Math.floor(i(o))),ceil:o=>r(Math.ceil(i(o)))})),e}function mp(){const s=k_(dp()).domain([1,10]);return s.copy=()=>fp(s,mp()).base(s.base()),up.apply(s,arguments),s}function Ms(s){return function(){return s}}function F_(s){let e=3;return s.digits=function(t){if(!arguments.length)return e;if(t==null)e=null;else{const n=Math.floor(t);if(!(n>=0))throw new RangeError(`invalid digits: ${t}`);e=n}return s},()=>new u_(e)}function B_(s){return typeof s=="object"&&"length"in s?s:Array.from(s)}function gp(s){this._context=s}gp.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||this._line!==0&&this._point===1)&&this._context.closePath(),this._line=1-this._line},point:function(s,e){switch(s=+s,e=+e,this._point){case 0:this._point=1,this._line?this._context.lineTo(s,e):this._context.moveTo(s,e);break;case 1:this._point=2;default:this._context.lineTo(s,e);break}}};function _p(s){return new gp(s)}function z_(s){return s[0]}function V_(s){return s[1]}function H_(s,e){var t=Ms(!0),n=null,i=_p,r=null,a=F_(o);s=typeof s=="function"?s:s===void 0?z_:Ms(s),e=typeof e=="function"?e:e===void 0?V_:Ms(e);function o(l){var c,h=(l=B_(l)).length,u,f=!1,d;for(n==null&&(r=i(d=a())),c=0;c<=h;++c)!(c<h&&t(u=l[c],c,l))===f&&((f=!f)?r.lineStart():r.lineEnd()),f&&r.point(+s(u,c,l),+e(u,c,l));if(d)return r=null,d+""||null}return o.x=function(l){return arguments.length?(s=typeof l=="function"?l:Ms(+l),o):s},o.y=function(l){return arguments.length?(e=typeof l=="function"?l:Ms(+l),o):e},o.defined=function(l){return arguments.length?(t=typeof l=="function"?l:Ms(!!l),o):t},o.curve=function(l){return arguments.length?(i=l,n!=null&&(r=i(n)),o):i},o.context=function(l){return arguments.length?(l==null?n=r=null:r=i(n=l),o):n},o}var js=Object.freeze({Linear:Object.freeze({None:function(s){return s},In:function(s){return this.None(s)},Out:function(s){return this.None(s)},InOut:function(s){return this.None(s)}}),Quadratic:Object.freeze({In:function(s){return s*s},Out:function(s){return s*(2-s)},InOut:function(s){return(s*=2)<1?.5*s*s:-.5*(--s*(s-2)-1)}}),Cubic:Object.freeze({In:function(s){return s*s*s},Out:function(s){return--s*s*s+1},InOut:function(s){return(s*=2)<1?.5*s*s*s:.5*((s-=2)*s*s+2)}}),Quartic:Object.freeze({In:function(s){return s*s*s*s},Out:function(s){return 1- --s*s*s*s},InOut:function(s){return(s*=2)<1?.5*s*s*s*s:-.5*((s-=2)*s*s*s-2)}}),Quintic:Object.freeze({In:function(s){return s*s*s*s*s},Out:function(s){return--s*s*s*s*s+1},InOut:function(s){return(s*=2)<1?.5*s*s*s*s*s:.5*((s-=2)*s*s*s*s+2)}}),Sinusoidal:Object.freeze({In:function(s){return 1-Math.sin((1-s)*Math.PI/2)},Out:function(s){return Math.sin(s*Math.PI/2)},InOut:function(s){return .5*(1-Math.sin(Math.PI*(.5-s)))}}),Exponential:Object.freeze({In:function(s){return s===0?0:Math.pow(1024,s-1)},Out:function(s){return s===1?1:1-Math.pow(2,-10*s)},InOut:function(s){return s===0?0:s===1?1:(s*=2)<1?.5*Math.pow(1024,s-1):.5*(-Math.pow(2,-10*(s-1))+2)}}),Circular:Object.freeze({In:function(s){return 1-Math.sqrt(1-s*s)},Out:function(s){return Math.sqrt(1- --s*s)},InOut:function(s){return(s*=2)<1?-.5*(Math.sqrt(1-s*s)-1):.5*(Math.sqrt(1-(s-=2)*s)+1)}}),Elastic:Object.freeze({In:function(s){return s===0?0:s===1?1:-Math.pow(2,10*(s-1))*Math.sin((s-1.1)*5*Math.PI)},Out:function(s){return s===0?0:s===1?1:Math.pow(2,-10*s)*Math.sin((s-.1)*5*Math.PI)+1},InOut:function(s){return s===0?0:s===1?1:(s*=2,s<1?-.5*Math.pow(2,10*(s-1))*Math.sin((s-1.1)*5*Math.PI):.5*Math.pow(2,-10*(s-1))*Math.sin((s-1.1)*5*Math.PI)+1)}}),Back:Object.freeze({In:function(s){var e=1.70158;return s===1?1:s*s*((e+1)*s-e)},Out:function(s){var e=1.70158;return s===0?0:--s*s*((e+1)*s+e)+1},InOut:function(s){var e=2.5949095;return(s*=2)<1?.5*(s*s*((e+1)*s-e)):.5*((s-=2)*s*((e+1)*s+e)+2)}}),Bounce:Object.freeze({In:function(s){return 1-js.Bounce.Out(1-s)},Out:function(s){return s<1/2.75?7.5625*s*s:s<2/2.75?7.5625*(s-=1.5/2.75)*s+.75:s<2.5/2.75?7.5625*(s-=2.25/2.75)*s+.9375:7.5625*(s-=2.625/2.75)*s+.984375},InOut:function(s){return s<.5?js.Bounce.In(s*2)*.5:js.Bounce.Out(s*2-1)*.5+.5}}),generatePow:function(s){return s===void 0&&(s=4),s=s<Number.EPSILON?Number.EPSILON:s,s=s>1e4?1e4:s,{In:function(e){return Math.pow(e,s)},Out:function(e){return 1-Math.pow(1-e,s)},InOut:function(e){return e<.5?Math.pow(e*2,s)/2:(1-Math.pow(2-e*2,s))/2+.5}}}}),br=function(){return performance.now()},G_=function(){function s(){this._tweens={},this._tweensAddedDuringUpdate={}}return s.prototype.getAll=function(){var e=this;return Object.keys(this._tweens).map(function(t){return e._tweens[t]})},s.prototype.removeAll=function(){this._tweens={}},s.prototype.add=function(e){this._tweens[e.getId()]=e,this._tweensAddedDuringUpdate[e.getId()]=e},s.prototype.remove=function(e){delete this._tweens[e.getId()],delete this._tweensAddedDuringUpdate[e.getId()]},s.prototype.update=function(e,t){e===void 0&&(e=br()),t===void 0&&(t=!1);var n=Object.keys(this._tweens);if(n.length===0)return!1;for(;n.length>0;){this._tweensAddedDuringUpdate={};for(var i=0;i<n.length;i++){var r=this._tweens[n[i]],a=!t;r&&r.update(e,a)===!1&&!t&&delete this._tweens[n[i]]}n=Object.keys(this._tweensAddedDuringUpdate)}return!0},s}(),$s={Linear:function(s,e){var t=s.length-1,n=t*e,i=Math.floor(n),r=$s.Utils.Linear;return e<0?r(s[0],s[1],n):e>1?r(s[t],s[t-1],t-n):r(s[i],s[i+1>t?t:i+1],n-i)},Bezier:function(s,e){for(var t=0,n=s.length-1,i=Math.pow,r=$s.Utils.Bernstein,a=0;a<=n;a++)t+=i(1-e,n-a)*i(e,a)*s[a]*r(n,a);return t},CatmullRom:function(s,e){var t=s.length-1,n=t*e,i=Math.floor(n),r=$s.Utils.CatmullRom;return s[0]===s[t]?(e<0&&(i=Math.floor(n=t*(1+e))),r(s[(i-1+t)%t],s[i],s[(i+1)%t],s[(i+2)%t],n-i)):e<0?s[0]-(r(s[0],s[0],s[1],s[1],-n)-s[0]):e>1?s[t]-(r(s[t],s[t],s[t-1],s[t-1],n-t)-s[t]):r(s[i?i-1:0],s[i],s[t<i+1?t:i+1],s[t<i+2?t:i+2],n-i)},Utils:{Linear:function(s,e,t){return(e-s)*t+s},Bernstein:function(s,e){var t=$s.Utils.Factorial;return t(s)/t(e)/t(s-e)},Factorial:function(){var s=[1];return function(e){var t=1;if(s[e])return s[e];for(var n=e;n>1;n--)t*=n;return s[e]=t,t}}(),CatmullRom:function(s,e,t,n,i){var r=(t-s)*.5,a=(n-e)*.5,o=i*i,l=i*o;return(2*e-2*t+r+a)*l+(-3*e+3*t-2*r-a)*o+r*i+e}}},W_=function(){function s(){}return s.nextId=function(){return s._nextId++},s._nextId=0,s}(),oc=new G_,X_=function(){function s(e,t){t===void 0&&(t=oc),this._object=e,this._group=t,this._isPaused=!1,this._pauseStart=0,this._valuesStart={},this._valuesEnd={},this._valuesStartRepeat={},this._duration=1e3,this._isDynamic=!1,this._initialRepeat=0,this._repeat=0,this._yoyo=!1,this._isPlaying=!1,this._reversed=!1,this._delayTime=0,this._startTime=0,this._easingFunction=js.Linear.None,this._interpolationFunction=$s.Linear,this._chainedTweens=[],this._onStartCallbackFired=!1,this._onEveryStartCallbackFired=!1,this._id=W_.nextId(),this._isChainStopped=!1,this._propertiesAreSetUp=!1,this._goToEnd=!1}return s.prototype.getId=function(){return this._id},s.prototype.isPlaying=function(){return this._isPlaying},s.prototype.isPaused=function(){return this._isPaused},s.prototype.to=function(e,t){if(t===void 0&&(t=1e3),this._isPlaying)throw new Error("Can not call Tween.to() while Tween is already started or paused. Stop the Tween first.");return this._valuesEnd=e,this._propertiesAreSetUp=!1,this._duration=t,this},s.prototype.duration=function(e){return e===void 0&&(e=1e3),this._duration=e,this},s.prototype.dynamic=function(e){return e===void 0&&(e=!1),this._isDynamic=e,this},s.prototype.start=function(e,t){if(e===void 0&&(e=br()),t===void 0&&(t=!1),this._isPlaying)return this;if(this._group&&this._group.add(this),this._repeat=this._initialRepeat,this._reversed){this._reversed=!1;for(var n in this._valuesStartRepeat)this._swapEndStartRepeatValues(n),this._valuesStart[n]=this._valuesStartRepeat[n]}if(this._isPlaying=!0,this._isPaused=!1,this._onStartCallbackFired=!1,this._onEveryStartCallbackFired=!1,this._isChainStopped=!1,this._startTime=e,this._startTime+=this._delayTime,!this._propertiesAreSetUp||t){if(this._propertiesAreSetUp=!0,!this._isDynamic){var i={};for(var r in this._valuesEnd)i[r]=this._valuesEnd[r];this._valuesEnd=i}this._setupProperties(this._object,this._valuesStart,this._valuesEnd,this._valuesStartRepeat,t)}return this},s.prototype.startFromCurrentValues=function(e){return this.start(e,!0)},s.prototype._setupProperties=function(e,t,n,i,r){for(var a in n){var o=e[a],l=Array.isArray(o),c=l?"array":typeof o,h=!l&&Array.isArray(n[a]);if(!(c==="undefined"||c==="function")){if(h){var u=n[a];if(u.length===0)continue;for(var f=[o],d=0,p=u.length;d<p;d+=1){var m=this._handleRelativeValue(o,u[d]);if(isNaN(m)){h=!1,console.warn("Found invalid interpolation list. Skipping.");break}f.push(m)}h&&(n[a]=f)}if((c==="object"||l)&&o&&!h){t[a]=l?[]:{};var _=o;for(var g in _)t[a][g]=_[g];i[a]=l?[]:{};var u=n[a];if(!this._isDynamic){var y={};for(var g in u)y[g]=u[g];n[a]=u=y}this._setupProperties(_,t[a],u,i[a],r)}else(typeof t[a]>"u"||r)&&(t[a]=o),l||(t[a]*=1),h?i[a]=n[a].slice().reverse():i[a]=t[a]||0}}},s.prototype.stop=function(){return this._isChainStopped||(this._isChainStopped=!0,this.stopChainedTweens()),this._isPlaying?(this._group&&this._group.remove(this),this._isPlaying=!1,this._isPaused=!1,this._onStopCallback&&this._onStopCallback(this._object),this):this},s.prototype.end=function(){return this._goToEnd=!0,this.update(1/0),this},s.prototype.pause=function(e){return e===void 0&&(e=br()),this._isPaused||!this._isPlaying?this:(this._isPaused=!0,this._pauseStart=e,this._group&&this._group.remove(this),this)},s.prototype.resume=function(e){return e===void 0&&(e=br()),!this._isPaused||!this._isPlaying?this:(this._isPaused=!1,this._startTime+=e-this._pauseStart,this._pauseStart=0,this._group&&this._group.add(this),this)},s.prototype.stopChainedTweens=function(){for(var e=0,t=this._chainedTweens.length;e<t;e++)this._chainedTweens[e].stop();return this},s.prototype.group=function(e){return e===void 0&&(e=oc),this._group=e,this},s.prototype.delay=function(e){return e===void 0&&(e=0),this._delayTime=e,this},s.prototype.repeat=function(e){return e===void 0&&(e=0),this._initialRepeat=e,this._repeat=e,this},s.prototype.repeatDelay=function(e){return this._repeatDelayTime=e,this},s.prototype.yoyo=function(e){return e===void 0&&(e=!1),this._yoyo=e,this},s.prototype.easing=function(e){return e===void 0&&(e=js.Linear.None),this._easingFunction=e,this},s.prototype.interpolation=function(e){return e===void 0&&(e=$s.Linear),this._interpolationFunction=e,this},s.prototype.chain=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return this._chainedTweens=e,this},s.prototype.onStart=function(e){return this._onStartCallback=e,this},s.prototype.onEveryStart=function(e){return this._onEveryStartCallback=e,this},s.prototype.onUpdate=function(e){return this._onUpdateCallback=e,this},s.prototype.onRepeat=function(e){return this._onRepeatCallback=e,this},s.prototype.onComplete=function(e){return this._onCompleteCallback=e,this},s.prototype.onStop=function(e){return this._onStopCallback=e,this},s.prototype.update=function(e,t){if(e===void 0&&(e=br()),t===void 0&&(t=!0),this._isPaused)return!0;var n,i,r=this._startTime+this._duration;if(!this._goToEnd&&!this._isPlaying){if(e>r)return!1;t&&this.start(e,!0)}if(this._goToEnd=!1,e<this._startTime)return!0;this._onStartCallbackFired===!1&&(this._onStartCallback&&this._onStartCallback(this._object),this._onStartCallbackFired=!0),this._onEveryStartCallbackFired===!1&&(this._onEveryStartCallback&&this._onEveryStartCallback(this._object),this._onEveryStartCallbackFired=!0),i=(e-this._startTime)/this._duration,i=this._duration===0||i>1?1:i;var a=this._easingFunction(i);if(this._updateProperties(this._object,this._valuesStart,this._valuesEnd,a),this._onUpdateCallback&&this._onUpdateCallback(this._object,i),i===1)if(this._repeat>0){isFinite(this._repeat)&&this._repeat--;for(n in this._valuesStartRepeat)!this._yoyo&&typeof this._valuesEnd[n]=="string"&&(this._valuesStartRepeat[n]=this._valuesStartRepeat[n]+parseFloat(this._valuesEnd[n])),this._yoyo&&this._swapEndStartRepeatValues(n),this._valuesStart[n]=this._valuesStartRepeat[n];return this._yoyo&&(this._reversed=!this._reversed),this._repeatDelayTime!==void 0?this._startTime=e+this._repeatDelayTime:this._startTime=e+this._delayTime,this._onRepeatCallback&&this._onRepeatCallback(this._object),this._onEveryStartCallbackFired=!1,!0}else{this._onCompleteCallback&&this._onCompleteCallback(this._object);for(var o=0,l=this._chainedTweens.length;o<l;o++)this._chainedTweens[o].start(this._startTime+this._duration,!1);return this._isPlaying=!1,!1}return!0},s.prototype._updateProperties=function(e,t,n,i){for(var r in n)if(t[r]!==void 0){var a=t[r]||0,o=n[r],l=Array.isArray(e[r]),c=Array.isArray(o),h=!l&&c;h?e[r]=this._interpolationFunction(o,i):typeof o=="object"&&o?this._updateProperties(e[r],a,o,i):(o=this._handleRelativeValue(a,o),typeof o=="number"&&(e[r]=a+(o-a)*i))}},s.prototype._handleRelativeValue=function(e,t){return typeof t!="string"?t:t.charAt(0)==="+"||t.charAt(0)==="-"?e+parseFloat(t):parseFloat(t)},s.prototype._swapEndStartRepeatValues=function(e){var t=this._valuesStartRepeat[e],n=this._valuesEnd[e];typeof n=="string"?this._valuesStartRepeat[e]=this._valuesStartRepeat[e]+parseFloat(n):this._valuesStartRepeat[e]=this._valuesEnd[e],this._valuesEnd[e]=t},s}(),ti=oc;ti.getAll.bind(ti);ti.removeAll.bind(ti);ti.add.bind(ti);ti.remove.bind(ti);var $_=ti.update.bind(ti);/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Po="154",rs={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},as={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},vp=0,lc=1,yp=2,Y_=3,q_=0,Kc=1,xp=2,$n=3,mi=0,pn=1,vn=2,Z_=2,Ln=0,ds=1,yo=2,cc=3,hc=4,Mp=5,Ei=100,bp=101,Sp=102,uc=103,fc=104,wp=200,Ep=201,Tp=202,Ap=203,Qc=204,eh=205,Cp=206,Rp=207,Pp=208,Lp=209,Ip=210,Dp=0,Up=1,Np=2,xo=3,Op=4,kp=5,Fp=6,Bp=7,na=0,zp=1,Vp=2,Qn=0,Hp=1,Gp=2,Wp=3,Xp=4,$p=5,Lo=300,Di=301,Ui=302,Or=303,kr=304,sr=306,Fr=1e3,an=1001,Br=1002,Vt=1003,Mo=1004,j_=1004,Tr=1005,J_=1005,Ht=1006,th=1007,K_=1007,Ni=1008,Q_=1008,pi=1009,Yp=1010,qp=1011,Io=1012,nh=1013,di=1014,jn=1015,Sn=1016,ih=1017,sh=1018,Ai=1020,Zp=1021,wn=1023,jp=1024,Jp=1025,Ci=1026,ms=1027,Kp=1028,rh=1029,Qp=1030,ah=1031,oh=1033,io=33776,so=33777,ro=33778,ao=33779,dc=35840,pc=35841,mc=35842,gc=35843,em=36196,_c=37492,vc=37496,yc=37808,xc=37809,Mc=37810,bc=37811,Sc=37812,wc=37813,Ec=37814,Tc=37815,Ac=37816,Cc=37817,Rc=37818,Pc=37819,Lc=37820,Ic=37821,oo=36492,tm=36283,Dc=36284,Uc=36285,Nc=36286,nm=2200,im=2201,sm=2202,zr=2300,Vr=2301,lo=2302,cs=2400,hs=2401,Hr=2402,Do=2500,lh=2501,ev=0,tv=1,nv=2,ch=3e3,Ri=3001,rm=3200,hh=3201,Gi=0,am=1,Pi="",at="srgb",Fn="srgb-linear",uh="display-p3",iv=0,co=7680,sv=7681,rv=7682,av=7683,ov=34055,lv=34056,cv=5386,hv=512,uv=513,fv=514,dv=515,pv=516,mv=517,gv=518,om=519,lm=512,cm=513,hm=514,um=515,fm=516,dm=517,pm=518,mm=519,Gr=35044,_v=35048,vv=35040,yv=35045,xv=35049,Mv=35041,bv=35046,Sv=35050,wv=35042,Ev="100",Oc="300 es",bo=1035,Jn=2e3,Wr=2001;class ni{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const r=i.indexOf(t);r!==-1&&i.splice(r,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let r=0,a=i.length;r<a;r++)i[r].call(this,e);e.target=null}}}const sn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let yu=1234567;const ps=Math.PI/180,er=180/Math.PI;function Tn(){const s=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(sn[s&255]+sn[s>>8&255]+sn[s>>16&255]+sn[s>>24&255]+"-"+sn[e&255]+sn[e>>8&255]+"-"+sn[e>>16&15|64]+sn[e>>24&255]+"-"+sn[t&63|128]+sn[t>>8&255]+"-"+sn[t>>16&255]+sn[t>>24&255]+sn[n&255]+sn[n>>8&255]+sn[n>>16&255]+sn[n>>24&255]).toLowerCase()}function Ft(s,e,t){return Math.max(e,Math.min(t,s))}function fh(s,e){return(s%e+e)%e}function Tv(s,e,t,n,i){return n+(s-e)*(i-n)/(t-e)}function Av(s,e,t){return s!==e?(t-s)/(e-s):0}function Ar(s,e,t){return(1-t)*s+t*e}function Cv(s,e,t,n){return Ar(s,e,1-Math.exp(-t*n))}function Rv(s,e=1){return e-Math.abs(fh(s,e*2)-e)}function Pv(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*(3-2*s))}function Lv(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*s*(s*(s*6-15)+10))}function Iv(s,e){return s+Math.floor(Math.random()*(e-s+1))}function Dv(s,e){return s+Math.random()*(e-s)}function Uv(s){return s*(.5-Math.random())}function Nv(s){s!==void 0&&(yu=s);let e=yu+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function Ov(s){return s*ps}function kv(s){return s*er}function kc(s){return(s&s-1)===0&&s!==0}function gm(s){return Math.pow(2,Math.ceil(Math.log(s)/Math.LN2))}function So(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function Fv(s,e,t,n,i){const r=Math.cos,a=Math.sin,o=r(t/2),l=a(t/2),c=r((e+n)/2),h=a((e+n)/2),u=r((e-n)/2),f=a((e-n)/2),d=r((n-e)/2),p=a((n-e)/2);switch(i){case"XYX":s.set(o*h,l*u,l*f,o*c);break;case"YZY":s.set(l*f,o*h,l*u,o*c);break;case"ZXZ":s.set(l*u,l*f,o*h,o*c);break;case"XZX":s.set(o*h,l*p,l*d,o*c);break;case"YXY":s.set(l*d,o*h,l*p,o*c);break;case"ZYZ":s.set(l*p,l*d,o*h,o*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function En(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return s/4294967295;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int32Array:return Math.max(s/2147483647,-1);case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function ht(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return Math.round(s*4294967295);case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int32Array:return Math.round(s*2147483647);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}const Bv={DEG2RAD:ps,RAD2DEG:er,generateUUID:Tn,clamp:Ft,euclideanModulo:fh,mapLinear:Tv,inverseLerp:Av,lerp:Ar,damp:Cv,pingpong:Rv,smoothstep:Pv,smootherstep:Lv,randInt:Iv,randFloat:Dv,randFloatSpread:Uv,seededRandom:Nv,degToRad:Ov,radToDeg:kv,isPowerOfTwo:kc,ceilPowerOfTwo:gm,floorPowerOfTwo:So,setQuaternionFromProperEuler:Fv,normalize:ht,denormalize:En};class ne{constructor(e=0,t=0){ne.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Ft(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,a=this.y-e.y;return this.x=r*n-a*i+e.x,this.y=r*i+a*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class ct{constructor(e,t,n,i,r,a,o,l,c){ct.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,r,a,o,l,c)}set(e,t,n,i,r,a,o,l,c){const h=this.elements;return h[0]=e,h[1]=i,h[2]=o,h[3]=t,h[4]=r,h[5]=l,h[6]=n,h[7]=a,h[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,a=n[0],o=n[3],l=n[6],c=n[1],h=n[4],u=n[7],f=n[2],d=n[5],p=n[8],m=i[0],_=i[3],g=i[6],y=i[1],v=i[4],x=i[7],M=i[2],w=i[5],T=i[8];return r[0]=a*m+o*y+l*M,r[3]=a*_+o*v+l*w,r[6]=a*g+o*x+l*T,r[1]=c*m+h*y+u*M,r[4]=c*_+h*v+u*w,r[7]=c*g+h*x+u*T,r[2]=f*m+d*y+p*M,r[5]=f*_+d*v+p*w,r[8]=f*g+d*x+p*T,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],o=e[5],l=e[6],c=e[7],h=e[8];return t*a*h-t*o*c-n*r*h+n*o*l+i*r*c-i*a*l}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],o=e[5],l=e[6],c=e[7],h=e[8],u=h*a-o*c,f=o*l-h*r,d=c*r-a*l,p=t*u+n*f+i*d;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const m=1/p;return e[0]=u*m,e[1]=(i*c-h*n)*m,e[2]=(o*n-i*a)*m,e[3]=f*m,e[4]=(h*t-i*l)*m,e[5]=(i*r-o*t)*m,e[6]=d*m,e[7]=(n*l-c*t)*m,e[8]=(a*t-n*r)*m,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,r,a,o){const l=Math.cos(r),c=Math.sin(r);return this.set(n*l,n*c,-n*(l*a+c*o)+a+e,-i*c,i*l,-i*(-c*a+l*o)+o+t,0,0,1),this}scale(e,t){return this.premultiply(vl.makeScale(e,t)),this}rotate(e){return this.premultiply(vl.makeRotation(-e)),this}translate(e,t){return this.premultiply(vl.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const vl=new ct;function _m(s){for(let e=s.length-1;e>=0;--e)if(s[e]>=65535)return!0;return!1}const zv={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Ys(s,e){return new zv[s](e)}function Xr(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}const xu={};function Cr(s){s in xu||(xu[s]=!0,console.warn(s))}function Js(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function yl(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}const Vv=new ct().fromArray([.8224621,.0331941,.0170827,.177538,.9668058,.0723974,-1e-7,1e-7,.9105199]),Hv=new ct().fromArray([1.2249401,-.0420569,-.0196376,-.2249404,1.0420571,-.0786361,1e-7,0,1.0982735]);function Gv(s){return s.convertSRGBToLinear().applyMatrix3(Hv)}function Wv(s){return s.applyMatrix3(Vv).convertLinearToSRGB()}const Xv={[Fn]:s=>s,[at]:s=>s.convertSRGBToLinear(),[uh]:Gv},$v={[Fn]:s=>s,[at]:s=>s.convertLinearToSRGB(),[uh]:Wv},Rn={enabled:!0,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(s){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!s},get workingColorSpace(){return Fn},set workingColorSpace(s){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(s,e,t){if(this.enabled===!1||e===t||!e||!t)return s;const n=Xv[e],i=$v[t];if(n===void 0||i===void 0)throw new Error(`Unsupported color space conversion, "${e}" to "${t}".`);return i(n(s))},fromWorkingColorSpace:function(s,e){return this.convert(s,this.workingColorSpace,e)},toWorkingColorSpace:function(s,e){return this.convert(s,e,this.workingColorSpace)}};let bs;class dh{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{bs===void 0&&(bs=Xr("canvas")),bs.width=e.width,bs.height=e.height;const n=bs.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=bs}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Xr("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),r=i.data;for(let a=0;a<r.length;a++)r[a]=Js(r[a]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(Js(t[n]/255)*255):t[n]=Js(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let Yv=0;class us{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:Yv++}),this.uuid=Tn(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let r;if(Array.isArray(i)){r=[];for(let a=0,o=i.length;a<o;a++)i[a].isDataTexture?r.push(xl(i[a].image)):r.push(xl(i[a]))}else r=xl(i);n.url=r}return t||(e.images[this.uuid]=n),n}}function xl(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?dh.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let qv=0;class Gt extends ni{constructor(e=Gt.DEFAULT_IMAGE,t=Gt.DEFAULT_MAPPING,n=an,i=an,r=Ht,a=Ni,o=wn,l=pi,c=Gt.DEFAULT_ANISOTROPY,h=Pi){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:qv++}),this.uuid=Tn(),this.name="",this.source=new us(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=a,this.anisotropy=c,this.format=o,this.internalFormat=null,this.type=l,this.offset=new ne(0,0),this.repeat=new ne(1,1),this.center=new ne(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new ct,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,typeof h=="string"?this.colorSpace=h:(Cr("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=h===Ri?at:Pi),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Lo)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Fr:e.x=e.x-Math.floor(e.x);break;case an:e.x=e.x<0?0:1;break;case Br:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Fr:e.y=e.y-Math.floor(e.y);break;case an:e.y=e.y<0?0:1;break;case Br:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return Cr("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===at?Ri:ch}set encoding(e){Cr("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=e===Ri?at:Pi}}Gt.DEFAULT_IMAGE=null;Gt.DEFAULT_MAPPING=Lo;Gt.DEFAULT_ANISOTROPY=1;class Tt{constructor(e=0,t=0,n=0,i=1){Tt.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*i+a[12]*r,this.y=a[1]*t+a[5]*n+a[9]*i+a[13]*r,this.z=a[2]*t+a[6]*n+a[10]*i+a[14]*r,this.w=a[3]*t+a[7]*n+a[11]*i+a[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,r;const l=e.elements,c=l[0],h=l[4],u=l[8],f=l[1],d=l[5],p=l[9],m=l[2],_=l[6],g=l[10];if(Math.abs(h-f)<.01&&Math.abs(u-m)<.01&&Math.abs(p-_)<.01){if(Math.abs(h+f)<.1&&Math.abs(u+m)<.1&&Math.abs(p+_)<.1&&Math.abs(c+d+g-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const v=(c+1)/2,x=(d+1)/2,M=(g+1)/2,w=(h+f)/4,T=(u+m)/4,I=(p+_)/4;return v>x&&v>M?v<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(v),i=w/n,r=T/n):x>M?x<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(x),n=w/i,r=I/i):M<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(M),n=T/r,i=I/r),this.set(n,i,r,t),this}let y=Math.sqrt((_-p)*(_-p)+(u-m)*(u-m)+(f-h)*(f-h));return Math.abs(y)<.001&&(y=1),this.x=(_-p)/y,this.y=(u-m)/y,this.z=(f-h)/y,this.w=Math.acos((c+d+g-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Yt extends ni{constructor(e=1,t=1,n={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Tt(0,0,e,t),this.scissorTest=!1,this.viewport=new Tt(0,0,e,t);const i={width:e,height:t,depth:1};n.encoding!==void 0&&(Cr("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),n.colorSpace=n.encoding===Ri?at:Pi),this.texture=new Gt(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:Ht,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new us(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Uo extends Gt{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Vt,this.minFilter=Vt,this.wrapR=an,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Zv extends Yt{constructor(e=1,t=1,n=1){super(e,t),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new Uo(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class ph extends Gt{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Vt,this.minFilter=Vt,this.wrapR=an,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class jv extends Yt{constructor(e=1,t=1,n=1){super(e,t),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new ph(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Jv extends Yt{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLMultipleRenderTargets=!0;const r=this.texture;this.texture=[];for(let a=0;a<n;a++)this.texture[a]=r.clone(),this.texture[a].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,r=this.texture.length;i<r;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}class on{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,r,a,o){let l=n[i+0],c=n[i+1],h=n[i+2],u=n[i+3];const f=r[a+0],d=r[a+1],p=r[a+2],m=r[a+3];if(o===0){e[t+0]=l,e[t+1]=c,e[t+2]=h,e[t+3]=u;return}if(o===1){e[t+0]=f,e[t+1]=d,e[t+2]=p,e[t+3]=m;return}if(u!==m||l!==f||c!==d||h!==p){let _=1-o;const g=l*f+c*d+h*p+u*m,y=g>=0?1:-1,v=1-g*g;if(v>Number.EPSILON){const M=Math.sqrt(v),w=Math.atan2(M,g*y);_=Math.sin(_*w)/M,o=Math.sin(o*w)/M}const x=o*y;if(l=l*_+f*x,c=c*_+d*x,h=h*_+p*x,u=u*_+m*x,_===1-o){const M=1/Math.sqrt(l*l+c*c+h*h+u*u);l*=M,c*=M,h*=M,u*=M}}e[t]=l,e[t+1]=c,e[t+2]=h,e[t+3]=u}static multiplyQuaternionsFlat(e,t,n,i,r,a){const o=n[i],l=n[i+1],c=n[i+2],h=n[i+3],u=r[a],f=r[a+1],d=r[a+2],p=r[a+3];return e[t]=o*p+h*u+l*d-c*f,e[t+1]=l*p+h*f+c*u-o*d,e[t+2]=c*p+h*d+o*f-l*u,e[t+3]=h*p-o*u-l*f-c*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const n=e._x,i=e._y,r=e._z,a=e._order,o=Math.cos,l=Math.sin,c=o(n/2),h=o(i/2),u=o(r/2),f=l(n/2),d=l(i/2),p=l(r/2);switch(a){case"XYZ":this._x=f*h*u+c*d*p,this._y=c*d*u-f*h*p,this._z=c*h*p+f*d*u,this._w=c*h*u-f*d*p;break;case"YXZ":this._x=f*h*u+c*d*p,this._y=c*d*u-f*h*p,this._z=c*h*p-f*d*u,this._w=c*h*u+f*d*p;break;case"ZXY":this._x=f*h*u-c*d*p,this._y=c*d*u+f*h*p,this._z=c*h*p+f*d*u,this._w=c*h*u-f*d*p;break;case"ZYX":this._x=f*h*u-c*d*p,this._y=c*d*u+f*h*p,this._z=c*h*p-f*d*u,this._w=c*h*u+f*d*p;break;case"YZX":this._x=f*h*u+c*d*p,this._y=c*d*u+f*h*p,this._z=c*h*p-f*d*u,this._w=c*h*u-f*d*p;break;case"XZY":this._x=f*h*u-c*d*p,this._y=c*d*u-f*h*p,this._z=c*h*p+f*d*u,this._w=c*h*u+f*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],r=t[8],a=t[1],o=t[5],l=t[9],c=t[2],h=t[6],u=t[10],f=n+o+u;if(f>0){const d=.5/Math.sqrt(f+1);this._w=.25/d,this._x=(h-l)*d,this._y=(r-c)*d,this._z=(a-i)*d}else if(n>o&&n>u){const d=2*Math.sqrt(1+n-o-u);this._w=(h-l)/d,this._x=.25*d,this._y=(i+a)/d,this._z=(r+c)/d}else if(o>u){const d=2*Math.sqrt(1+o-n-u);this._w=(r-c)/d,this._x=(i+a)/d,this._y=.25*d,this._z=(l+h)/d}else{const d=2*Math.sqrt(1+u-n-o);this._w=(a-i)/d,this._x=(r+c)/d,this._y=(l+h)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Ft(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,r=e._z,a=e._w,o=t._x,l=t._y,c=t._z,h=t._w;return this._x=n*h+a*o+i*c-r*l,this._y=i*h+a*l+r*o-n*c,this._z=r*h+a*c+n*l-i*o,this._w=a*h-n*o-i*l-r*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,r=this._z,a=this._w;let o=a*e._w+n*e._x+i*e._y+r*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=n,this._y=i,this._z=r,this;const l=1-o*o;if(l<=Number.EPSILON){const d=1-t;return this._w=d*a+t*this._w,this._x=d*n+t*this._x,this._y=d*i+t*this._y,this._z=d*r+t*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),h=Math.atan2(c,o),u=Math.sin((1-t)*h)/c,f=Math.sin(t*h)/c;return this._w=a*u+this._w*f,this._x=n*u+this._x*f,this._y=i*u+this._y*f,this._z=r*u+this._z*f,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(r),n*Math.cos(r),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class E{constructor(e=0,t=0,n=0){E.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Mu.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Mu.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=e.elements,a=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*a,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*a,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*a,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,r=e.x,a=e.y,o=e.z,l=e.w,c=l*t+a*i-o*n,h=l*n+o*t-r*i,u=l*i+r*n-a*t,f=-r*t-a*n-o*i;return this.x=c*l+f*-r+h*-o-u*-a,this.y=h*l+f*-a+u*-r-c*-o,this.z=u*l+f*-o+c*-a-h*-r,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,r=e.z,a=t.x,o=t.y,l=t.z;return this.x=i*l-r*o,this.y=r*a-n*l,this.z=n*o-i*a,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Ml.copy(this).projectOnVector(e),this.sub(Ml)}reflect(e){return this.sub(Ml.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Ft(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Ml=new E,Mu=new on;class ii{constructor(e=new E(1/0,1/0,1/0),t=new E(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(ai.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(ai.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=ai.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){if(e.updateWorldMatrix(!1,!1),e.boundingBox!==void 0)e.boundingBox===null&&e.computeBoundingBox(),Ss.copy(e.boundingBox),Ss.applyMatrix4(e.matrixWorld),this.union(Ss);else{const i=e.geometry;if(i!==void 0)if(t&&i.attributes!==void 0&&i.attributes.position!==void 0){const r=i.attributes.position;for(let a=0,o=r.count;a<o;a++)ai.fromBufferAttribute(r,a).applyMatrix4(e.matrixWorld),this.expandByPoint(ai)}else i.boundingBox===null&&i.computeBoundingBox(),Ss.copy(i.boundingBox),Ss.applyMatrix4(e.matrixWorld),this.union(Ss)}const n=e.children;for(let i=0,r=n.length;i<r;i++)this.expandByObject(n[i],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,ai),ai.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(ur),pa.subVectors(this.max,ur),ws.subVectors(e.a,ur),Es.subVectors(e.b,ur),Ts.subVectors(e.c,ur),vi.subVectors(Es,ws),yi.subVectors(Ts,Es),Zi.subVectors(ws,Ts);let t=[0,-vi.z,vi.y,0,-yi.z,yi.y,0,-Zi.z,Zi.y,vi.z,0,-vi.x,yi.z,0,-yi.x,Zi.z,0,-Zi.x,-vi.y,vi.x,0,-yi.y,yi.x,0,-Zi.y,Zi.x,0];return!bl(t,ws,Es,Ts,pa)||(t=[1,0,0,0,1,0,0,0,1],!bl(t,ws,Es,Ts,pa))?!1:(ma.crossVectors(vi,yi),t=[ma.x,ma.y,ma.z],bl(t,ws,Es,Ts,pa))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,ai).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(ai).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(ri[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),ri[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),ri[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),ri[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),ri[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),ri[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),ri[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),ri[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(ri),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const ri=[new E,new E,new E,new E,new E,new E,new E,new E],ai=new E,Ss=new ii,ws=new E,Es=new E,Ts=new E,vi=new E,yi=new E,Zi=new E,ur=new E,pa=new E,ma=new E,ji=new E;function bl(s,e,t,n,i){for(let r=0,a=s.length-3;r<=a;r+=3){ji.fromArray(s,r);const o=i.x*Math.abs(ji.x)+i.y*Math.abs(ji.y)+i.z*Math.abs(ji.z),l=e.dot(ji),c=t.dot(ji),h=n.dot(ji);if(Math.max(-Math.max(l,c,h),Math.min(l,c,h))>o)return!1}return!0}const Kv=new ii,fr=new E,Sl=new E;class zn{constructor(e=new E,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):Kv.setFromPoints(e).getCenter(n);let i=0;for(let r=0,a=e.length;r<a;r++)i=Math.max(i,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;fr.subVectors(e,this.center);const t=fr.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(fr,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Sl.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(fr.copy(e.center).add(Sl)),this.expandByPoint(fr.copy(e.center).sub(Sl))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const oi=new E,wl=new E,ga=new E,xi=new E,El=new E,_a=new E,Tl=new E;class rr{constructor(e=new E,t=new E(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,oi)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=oi.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(oi.copy(this.origin).addScaledVector(this.direction,t),oi.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){wl.copy(e).add(t).multiplyScalar(.5),ga.copy(t).sub(e).normalize(),xi.copy(this.origin).sub(wl);const r=e.distanceTo(t)*.5,a=-this.direction.dot(ga),o=xi.dot(this.direction),l=-xi.dot(ga),c=xi.lengthSq(),h=Math.abs(1-a*a);let u,f,d,p;if(h>0)if(u=a*l-o,f=a*o-l,p=r*h,u>=0)if(f>=-p)if(f<=p){const m=1/h;u*=m,f*=m,d=u*(u+a*f+2*o)+f*(a*u+f+2*l)+c}else f=r,u=Math.max(0,-(a*f+o)),d=-u*u+f*(f+2*l)+c;else f=-r,u=Math.max(0,-(a*f+o)),d=-u*u+f*(f+2*l)+c;else f<=-p?(u=Math.max(0,-(-a*r+o)),f=u>0?-r:Math.min(Math.max(-r,-l),r),d=-u*u+f*(f+2*l)+c):f<=p?(u=0,f=Math.min(Math.max(-r,-l),r),d=f*(f+2*l)+c):(u=Math.max(0,-(a*r+o)),f=u>0?r:Math.min(Math.max(-r,-l),r),d=-u*u+f*(f+2*l)+c);else f=a>0?-r:r,u=Math.max(0,-(a*f+o)),d=-u*u+f*(f+2*l)+c;return n&&n.copy(this.origin).addScaledVector(this.direction,u),i&&i.copy(wl).addScaledVector(ga,f),d}intersectSphere(e,t){oi.subVectors(e.center,this.origin);const n=oi.dot(this.direction),i=oi.dot(oi)-n*n,r=e.radius*e.radius;if(i>r)return null;const a=Math.sqrt(r-i),o=n-a,l=n+a;return l<0?null:o<0?this.at(l,t):this.at(o,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,r,a,o,l;const c=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,f=this.origin;return c>=0?(n=(e.min.x-f.x)*c,i=(e.max.x-f.x)*c):(n=(e.max.x-f.x)*c,i=(e.min.x-f.x)*c),h>=0?(r=(e.min.y-f.y)*h,a=(e.max.y-f.y)*h):(r=(e.max.y-f.y)*h,a=(e.min.y-f.y)*h),n>a||r>i||((r>n||isNaN(n))&&(n=r),(a<i||isNaN(i))&&(i=a),u>=0?(o=(e.min.z-f.z)*u,l=(e.max.z-f.z)*u):(o=(e.max.z-f.z)*u,l=(e.min.z-f.z)*u),n>l||o>i)||((o>n||n!==n)&&(n=o),(l<i||i!==i)&&(i=l),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,oi)!==null}intersectTriangle(e,t,n,i,r){El.subVectors(t,e),_a.subVectors(n,e),Tl.crossVectors(El,_a);let a=this.direction.dot(Tl),o;if(a>0){if(i)return null;o=1}else if(a<0)o=-1,a=-a;else return null;xi.subVectors(this.origin,e);const l=o*this.direction.dot(_a.crossVectors(xi,_a));if(l<0)return null;const c=o*this.direction.dot(El.cross(xi));if(c<0||l+c>a)return null;const h=-o*xi.dot(Tl);return h<0?null:this.at(h/a,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class nt{constructor(e,t,n,i,r,a,o,l,c,h,u,f,d,p,m,_){nt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,r,a,o,l,c,h,u,f,d,p,m,_)}set(e,t,n,i,r,a,o,l,c,h,u,f,d,p,m,_){const g=this.elements;return g[0]=e,g[4]=t,g[8]=n,g[12]=i,g[1]=r,g[5]=a,g[9]=o,g[13]=l,g[2]=c,g[6]=h,g[10]=u,g[14]=f,g[3]=d,g[7]=p,g[11]=m,g[15]=_,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new nt().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/As.setFromMatrixColumn(e,0).length(),r=1/As.setFromMatrixColumn(e,1).length(),a=1/As.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,r=e.z,a=Math.cos(n),o=Math.sin(n),l=Math.cos(i),c=Math.sin(i),h=Math.cos(r),u=Math.sin(r);if(e.order==="XYZ"){const f=a*h,d=a*u,p=o*h,m=o*u;t[0]=l*h,t[4]=-l*u,t[8]=c,t[1]=d+p*c,t[5]=f-m*c,t[9]=-o*l,t[2]=m-f*c,t[6]=p+d*c,t[10]=a*l}else if(e.order==="YXZ"){const f=l*h,d=l*u,p=c*h,m=c*u;t[0]=f+m*o,t[4]=p*o-d,t[8]=a*c,t[1]=a*u,t[5]=a*h,t[9]=-o,t[2]=d*o-p,t[6]=m+f*o,t[10]=a*l}else if(e.order==="ZXY"){const f=l*h,d=l*u,p=c*h,m=c*u;t[0]=f-m*o,t[4]=-a*u,t[8]=p+d*o,t[1]=d+p*o,t[5]=a*h,t[9]=m-f*o,t[2]=-a*c,t[6]=o,t[10]=a*l}else if(e.order==="ZYX"){const f=a*h,d=a*u,p=o*h,m=o*u;t[0]=l*h,t[4]=p*c-d,t[8]=f*c+m,t[1]=l*u,t[5]=m*c+f,t[9]=d*c-p,t[2]=-c,t[6]=o*l,t[10]=a*l}else if(e.order==="YZX"){const f=a*l,d=a*c,p=o*l,m=o*c;t[0]=l*h,t[4]=m-f*u,t[8]=p*u+d,t[1]=u,t[5]=a*h,t[9]=-o*h,t[2]=-c*h,t[6]=d*u+p,t[10]=f-m*u}else if(e.order==="XZY"){const f=a*l,d=a*c,p=o*l,m=o*c;t[0]=l*h,t[4]=-u,t[8]=c*h,t[1]=f*u+m,t[5]=a*h,t[9]=d*u-p,t[2]=p*u-d,t[6]=o*h,t[10]=m*u+f}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Qv,e,ey)}lookAt(e,t,n){const i=this.elements;return Mn.subVectors(e,t),Mn.lengthSq()===0&&(Mn.z=1),Mn.normalize(),Mi.crossVectors(n,Mn),Mi.lengthSq()===0&&(Math.abs(n.z)===1?Mn.x+=1e-4:Mn.z+=1e-4,Mn.normalize(),Mi.crossVectors(n,Mn)),Mi.normalize(),va.crossVectors(Mn,Mi),i[0]=Mi.x,i[4]=va.x,i[8]=Mn.x,i[1]=Mi.y,i[5]=va.y,i[9]=Mn.y,i[2]=Mi.z,i[6]=va.z,i[10]=Mn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,a=n[0],o=n[4],l=n[8],c=n[12],h=n[1],u=n[5],f=n[9],d=n[13],p=n[2],m=n[6],_=n[10],g=n[14],y=n[3],v=n[7],x=n[11],M=n[15],w=i[0],T=i[4],I=i[8],S=i[12],C=i[1],V=i[5],X=i[9],F=i[13],B=i[2],N=i[6],Y=i[10],O=i[14],Z=i[3],q=i[7],Q=i[11],H=i[15];return r[0]=a*w+o*C+l*B+c*Z,r[4]=a*T+o*V+l*N+c*q,r[8]=a*I+o*X+l*Y+c*Q,r[12]=a*S+o*F+l*O+c*H,r[1]=h*w+u*C+f*B+d*Z,r[5]=h*T+u*V+f*N+d*q,r[9]=h*I+u*X+f*Y+d*Q,r[13]=h*S+u*F+f*O+d*H,r[2]=p*w+m*C+_*B+g*Z,r[6]=p*T+m*V+_*N+g*q,r[10]=p*I+m*X+_*Y+g*Q,r[14]=p*S+m*F+_*O+g*H,r[3]=y*w+v*C+x*B+M*Z,r[7]=y*T+v*V+x*N+M*q,r[11]=y*I+v*X+x*Y+M*Q,r[15]=y*S+v*F+x*O+M*H,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],a=e[1],o=e[5],l=e[9],c=e[13],h=e[2],u=e[6],f=e[10],d=e[14],p=e[3],m=e[7],_=e[11],g=e[15];return p*(+r*l*u-i*c*u-r*o*f+n*c*f+i*o*d-n*l*d)+m*(+t*l*d-t*c*f+r*a*f-i*a*d+i*c*h-r*l*h)+_*(+t*c*u-t*o*d-r*a*u+n*a*d+r*o*h-n*c*h)+g*(-i*o*h-t*l*u+t*o*f+i*a*u-n*a*f+n*l*h)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],o=e[5],l=e[6],c=e[7],h=e[8],u=e[9],f=e[10],d=e[11],p=e[12],m=e[13],_=e[14],g=e[15],y=u*_*c-m*f*c+m*l*d-o*_*d-u*l*g+o*f*g,v=p*f*c-h*_*c-p*l*d+a*_*d+h*l*g-a*f*g,x=h*m*c-p*u*c+p*o*d-a*m*d-h*o*g+a*u*g,M=p*u*l-h*m*l-p*o*f+a*m*f+h*o*_-a*u*_,w=t*y+n*v+i*x+r*M;if(w===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const T=1/w;return e[0]=y*T,e[1]=(m*f*r-u*_*r-m*i*d+n*_*d+u*i*g-n*f*g)*T,e[2]=(o*_*r-m*l*r+m*i*c-n*_*c-o*i*g+n*l*g)*T,e[3]=(u*l*r-o*f*r-u*i*c+n*f*c+o*i*d-n*l*d)*T,e[4]=v*T,e[5]=(h*_*r-p*f*r+p*i*d-t*_*d-h*i*g+t*f*g)*T,e[6]=(p*l*r-a*_*r-p*i*c+t*_*c+a*i*g-t*l*g)*T,e[7]=(a*f*r-h*l*r+h*i*c-t*f*c-a*i*d+t*l*d)*T,e[8]=x*T,e[9]=(p*u*r-h*m*r-p*n*d+t*m*d+h*n*g-t*u*g)*T,e[10]=(a*m*r-p*o*r+p*n*c-t*m*c-a*n*g+t*o*g)*T,e[11]=(h*o*r-a*u*r-h*n*c+t*u*c+a*n*d-t*o*d)*T,e[12]=M*T,e[13]=(h*m*i-p*u*i+p*n*f-t*m*f-h*n*_+t*u*_)*T,e[14]=(p*o*i-a*m*i-p*n*l+t*m*l+a*n*_-t*o*_)*T,e[15]=(a*u*i-h*o*i+h*n*l-t*u*l-a*n*f+t*o*f)*T,this}scale(e){const t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),r=1-n,a=e.x,o=e.y,l=e.z,c=r*a,h=r*o;return this.set(c*a+n,c*o-i*l,c*l+i*o,0,c*o+i*l,h*o+n,h*l-i*a,0,c*l-i*o,h*l+i*a,r*l*l+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,r,a){return this.set(1,n,r,0,e,1,a,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,r=t._x,a=t._y,o=t._z,l=t._w,c=r+r,h=a+a,u=o+o,f=r*c,d=r*h,p=r*u,m=a*h,_=a*u,g=o*u,y=l*c,v=l*h,x=l*u,M=n.x,w=n.y,T=n.z;return i[0]=(1-(m+g))*M,i[1]=(d+x)*M,i[2]=(p-v)*M,i[3]=0,i[4]=(d-x)*w,i[5]=(1-(f+g))*w,i[6]=(_+y)*w,i[7]=0,i[8]=(p+v)*T,i[9]=(_-y)*T,i[10]=(1-(f+m))*T,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let r=As.set(i[0],i[1],i[2]).length();const a=As.set(i[4],i[5],i[6]).length(),o=As.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],Dn.copy(this);const c=1/r,h=1/a,u=1/o;return Dn.elements[0]*=c,Dn.elements[1]*=c,Dn.elements[2]*=c,Dn.elements[4]*=h,Dn.elements[5]*=h,Dn.elements[6]*=h,Dn.elements[8]*=u,Dn.elements[9]*=u,Dn.elements[10]*=u,t.setFromRotationMatrix(Dn),n.x=r,n.y=a,n.z=o,this}makePerspective(e,t,n,i,r,a,o=Jn){const l=this.elements,c=2*r/(t-e),h=2*r/(n-i),u=(t+e)/(t-e),f=(n+i)/(n-i);let d,p;if(o===Jn)d=-(a+r)/(a-r),p=-2*a*r/(a-r);else if(o===Wr)d=-a/(a-r),p=-a*r/(a-r);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);return l[0]=c,l[4]=0,l[8]=u,l[12]=0,l[1]=0,l[5]=h,l[9]=f,l[13]=0,l[2]=0,l[6]=0,l[10]=d,l[14]=p,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,n,i,r,a,o=Jn){const l=this.elements,c=1/(t-e),h=1/(n-i),u=1/(a-r),f=(t+e)*c,d=(n+i)*h;let p,m;if(o===Jn)p=(a+r)*u,m=-2*u;else if(o===Wr)p=r*u,m=-1*u;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);return l[0]=2*c,l[4]=0,l[8]=0,l[12]=-f,l[1]=0,l[5]=2*h,l[9]=0,l[13]=-d,l[2]=0,l[6]=0,l[10]=m,l[14]=-p,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const As=new E,Dn=new nt,Qv=new E(0,0,0),ey=new E(1,1,1),Mi=new E,va=new E,Mn=new E,bu=new nt,Su=new on;class ia{constructor(e=0,t=0,n=0,i=ia.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,r=i[0],a=i[4],o=i[8],l=i[1],c=i[5],h=i[9],u=i[2],f=i[6],d=i[10];switch(t){case"XYZ":this._y=Math.asin(Ft(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-h,d),this._z=Math.atan2(-a,r)):(this._x=Math.atan2(f,c),this._z=0);break;case"YXZ":this._x=Math.asin(-Ft(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(o,d),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-u,r),this._z=0);break;case"ZXY":this._x=Math.asin(Ft(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-u,d),this._z=Math.atan2(-a,c)):(this._y=0,this._z=Math.atan2(l,r));break;case"ZYX":this._y=Math.asin(-Ft(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(f,d),this._z=Math.atan2(l,r)):(this._x=0,this._z=Math.atan2(-a,c));break;case"YZX":this._z=Math.asin(Ft(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,c),this._y=Math.atan2(-u,r)):(this._x=0,this._y=Math.atan2(o,d));break;case"XZY":this._z=Math.asin(-Ft(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(f,c),this._y=Math.atan2(o,r)):(this._x=Math.atan2(-h,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return bu.makeRotationFromQuaternion(e),this.setFromRotationMatrix(bu,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Su.setFromEuler(this),this.setFromQuaternion(Su,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}ia.DEFAULT_ORDER="XYZ";class No{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let ty=0;const wu=new E,Cs=new on,li=new nt,ya=new E,dr=new E,ny=new E,iy=new on,Eu=new E(1,0,0),Tu=new E(0,1,0),Au=new E(0,0,1),sy={type:"added"},Cu={type:"removed"};class vt extends ni{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:ty++}),this.uuid=Tn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=vt.DEFAULT_UP.clone();const e=new E,t=new ia,n=new on,i=new E(1,1,1);function r(){n.setFromEuler(t,!1)}function a(){t.setFromQuaternion(n,void 0,!1)}t._onChange(r),n._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new nt},normalMatrix:{value:new ct}}),this.matrix=new nt,this.matrixWorld=new nt,this.matrixAutoUpdate=vt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=vt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new No,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Cs.setFromAxisAngle(e,t),this.quaternion.multiply(Cs),this}rotateOnWorldAxis(e,t){return Cs.setFromAxisAngle(e,t),this.quaternion.premultiply(Cs),this}rotateX(e){return this.rotateOnAxis(Eu,e)}rotateY(e){return this.rotateOnAxis(Tu,e)}rotateZ(e){return this.rotateOnAxis(Au,e)}translateOnAxis(e,t){return wu.copy(e).applyQuaternion(this.quaternion),this.position.add(wu.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Eu,e)}translateY(e){return this.translateOnAxis(Tu,e)}translateZ(e){return this.translateOnAxis(Au,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(li.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?ya.copy(e):ya.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),dr.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?li.lookAt(dr,ya,this.up):li.lookAt(ya,dr,this.up),this.quaternion.setFromRotationMatrix(li),i&&(li.extractRotation(i.matrixWorld),Cs.setFromRotationMatrix(li),this.quaternion.premultiply(Cs.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(sy)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Cu)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(Cu)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),li.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),li.multiply(e.parent.matrixWorld)),e.applyMatrix4(li),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const a=this.children[n].getObjectByProperty(e,t);if(a!==void 0)return a}}getObjectsByProperty(e,t){let n=[];this[e]===t&&n.push(this);for(let i=0,r=this.children.length;i<r;i++){const a=this.children[i].getObjectsByProperty(e,t);a.length>0&&(n=n.concat(a))}return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(dr,e,ny),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(dr,iy,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++){const r=t[n];(r.matrixWorldAutoUpdate===!0||e===!0)&&r.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let r=0,a=i.length;r<a;r++){const o=i[r];o.matrixWorldAutoUpdate===!0&&o.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function r(o,l){return o[l.uuid]===void 0&&(o[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const l=o.shapes;if(Array.isArray(l))for(let c=0,h=l.length;c<h;c++){const u=l[c];r(e.shapes,u)}else r(e.shapes,l)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let l=0,c=this.material.length;l<c;l++)o.push(r(e.materials,this.material[l]));i.material=o}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let o=0;o<this.children.length;o++)i.children.push(this.children[o].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let o=0;o<this.animations.length;o++){const l=this.animations[o];i.animations.push(r(e.animations,l))}}if(t){const o=a(e.geometries),l=a(e.materials),c=a(e.textures),h=a(e.images),u=a(e.shapes),f=a(e.skeletons),d=a(e.animations),p=a(e.nodes);o.length>0&&(n.geometries=o),l.length>0&&(n.materials=l),c.length>0&&(n.textures=c),h.length>0&&(n.images=h),u.length>0&&(n.shapes=u),f.length>0&&(n.skeletons=f),d.length>0&&(n.animations=d),p.length>0&&(n.nodes=p)}return n.object=i,n;function a(o){const l=[];for(const c in o){const h=o[c];delete h.metadata,l.push(h)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}vt.DEFAULT_UP=new E(0,1,0);vt.DEFAULT_MATRIX_AUTO_UPDATE=!0;vt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Un=new E,ci=new E,Al=new E,hi=new E,Rs=new E,Ps=new E,Ru=new E,Cl=new E,Rl=new E,Pl=new E;let xa=!1;class _n{constructor(e=new E,t=new E,n=new E){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),Un.subVectors(e,t),i.cross(Un);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,n,i,r){Un.subVectors(i,t),ci.subVectors(n,t),Al.subVectors(e,t);const a=Un.dot(Un),o=Un.dot(ci),l=Un.dot(Al),c=ci.dot(ci),h=ci.dot(Al),u=a*c-o*o;if(u===0)return r.set(-2,-1,-1);const f=1/u,d=(c*l-o*h)*f,p=(a*h-o*l)*f;return r.set(1-d-p,p,d)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,hi),hi.x>=0&&hi.y>=0&&hi.x+hi.y<=1}static getUV(e,t,n,i,r,a,o,l){return xa===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),xa=!0),this.getInterpolation(e,t,n,i,r,a,o,l)}static getInterpolation(e,t,n,i,r,a,o,l){return this.getBarycoord(e,t,n,i,hi),l.setScalar(0),l.addScaledVector(r,hi.x),l.addScaledVector(a,hi.y),l.addScaledVector(o,hi.z),l}static isFrontFacing(e,t,n,i){return Un.subVectors(n,t),ci.subVectors(e,t),Un.cross(ci).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Un.subVectors(this.c,this.b),ci.subVectors(this.a,this.b),Un.cross(ci).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return _n.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return _n.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,r){return xa===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),xa=!0),_n.getInterpolation(e,this.a,this.b,this.c,t,n,i,r)}getInterpolation(e,t,n,i,r){return _n.getInterpolation(e,this.a,this.b,this.c,t,n,i,r)}containsPoint(e){return _n.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return _n.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,r=this.c;let a,o;Rs.subVectors(i,n),Ps.subVectors(r,n),Cl.subVectors(e,n);const l=Rs.dot(Cl),c=Ps.dot(Cl);if(l<=0&&c<=0)return t.copy(n);Rl.subVectors(e,i);const h=Rs.dot(Rl),u=Ps.dot(Rl);if(h>=0&&u<=h)return t.copy(i);const f=l*u-h*c;if(f<=0&&l>=0&&h<=0)return a=l/(l-h),t.copy(n).addScaledVector(Rs,a);Pl.subVectors(e,r);const d=Rs.dot(Pl),p=Ps.dot(Pl);if(p>=0&&d<=p)return t.copy(r);const m=d*c-l*p;if(m<=0&&c>=0&&p<=0)return o=c/(c-p),t.copy(n).addScaledVector(Ps,o);const _=h*p-d*u;if(_<=0&&u-h>=0&&d-p>=0)return Ru.subVectors(r,i),o=(u-h)/(u-h+(d-p)),t.copy(i).addScaledVector(Ru,o);const g=1/(_+m+f);return a=m*g,o=f*g,t.copy(n).addScaledVector(Rs,a).addScaledVector(Ps,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let ry=0;class ln extends ni{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:ry++}),this.uuid=Tn(),this.name="",this.type="Material",this.blending=ds,this.side=mi,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=Qc,this.blendDst=eh,this.blendEquation=Ei,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=xo,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=om,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=co,this.stencilZFail=co,this.stencilZPass=co,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==ds&&(n.blending=this.blending),this.side!==mi&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=this.alphaHash),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.forceSinglePass===!0&&(n.forceSinglePass=this.forceSinglePass),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(r){const a=[];for(const o in r){const l=r[o];delete l.metadata,a.push(l)}return a}if(t){const r=i(e.textures),a=i(e.images);r.length>0&&(n.textures=r),a.length>0&&(n.images=a)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}const vm={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Nn={h:0,s:0,l:0},Ma={h:0,s:0,l:0};function Ll(s,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?s+(e-s)*6*t:t<1/2?e:t<2/3?s+(e-s)*6*(2/3-t):s}class be{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=at){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Rn.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=Rn.workingColorSpace){return this.r=e,this.g=t,this.b=n,Rn.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=Rn.workingColorSpace){if(e=fh(e,1),t=Ft(t,0,1),n=Ft(n,0,1),t===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+t):n+t-n*t,a=2*n-r;this.r=Ll(a,r,e+1/3),this.g=Ll(a,r,e),this.b=Ll(a,r,e-1/3)}return Rn.toWorkingColorSpace(this,i),this}setStyle(e,t=at){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let r;const a=i[1],o=i[2];switch(a){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,t);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,t);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=i[1],a=r.length;if(a===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,t);if(a===6)return this.setHex(parseInt(r,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=at){const n=vm[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Js(e.r),this.g=Js(e.g),this.b=Js(e.b),this}copyLinearToSRGB(e){return this.r=yl(e.r),this.g=yl(e.g),this.b=yl(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=at){return Rn.fromWorkingColorSpace(rn.copy(this),e),Math.round(Ft(rn.r*255,0,255))*65536+Math.round(Ft(rn.g*255,0,255))*256+Math.round(Ft(rn.b*255,0,255))}getHexString(e=at){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Rn.workingColorSpace){Rn.fromWorkingColorSpace(rn.copy(this),t);const n=rn.r,i=rn.g,r=rn.b,a=Math.max(n,i,r),o=Math.min(n,i,r);let l,c;const h=(o+a)/2;if(o===a)l=0,c=0;else{const u=a-o;switch(c=h<=.5?u/(a+o):u/(2-a-o),a){case n:l=(i-r)/u+(i<r?6:0);break;case i:l=(r-n)/u+2;break;case r:l=(n-i)/u+4;break}l/=6}return e.h=l,e.s=c,e.l=h,e}getRGB(e,t=Rn.workingColorSpace){return Rn.fromWorkingColorSpace(rn.copy(this),t),e.r=rn.r,e.g=rn.g,e.b=rn.b,e}getStyle(e=at){Rn.fromWorkingColorSpace(rn.copy(this),e);const t=rn.r,n=rn.g,i=rn.b;return e!==at?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(Nn),Nn.h+=e,Nn.s+=t,Nn.l+=n,this.setHSL(Nn.h,Nn.s,Nn.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(Nn),e.getHSL(Ma);const n=Ar(Nn.h,Ma.h,t),i=Ar(Nn.s,Ma.s,t),r=Ar(Nn.l,Ma.l,t);return this.setHSL(n,i,r),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,r=e.elements;return this.r=r[0]*t+r[3]*n+r[6]*i,this.g=r[1]*t+r[4]*n+r[7]*i,this.b=r[2]*t+r[5]*n+r[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const rn=new be;be.NAMES=vm;class Qt extends ln{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new be(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=na,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const fi=ay();function ay(){const s=new ArrayBuffer(4),e=new Float32Array(s),t=new Uint32Array(s),n=new Uint32Array(512),i=new Uint32Array(512);for(let l=0;l<256;++l){const c=l-127;c<-27?(n[l]=0,n[l|256]=32768,i[l]=24,i[l|256]=24):c<-14?(n[l]=1024>>-c-14,n[l|256]=1024>>-c-14|32768,i[l]=-c-1,i[l|256]=-c-1):c<=15?(n[l]=c+15<<10,n[l|256]=c+15<<10|32768,i[l]=13,i[l|256]=13):c<128?(n[l]=31744,n[l|256]=64512,i[l]=24,i[l|256]=24):(n[l]=31744,n[l|256]=64512,i[l]=13,i[l|256]=13)}const r=new Uint32Array(2048),a=new Uint32Array(64),o=new Uint32Array(64);for(let l=1;l<1024;++l){let c=l<<13,h=0;for(;!(c&8388608);)c<<=1,h-=8388608;c&=-8388609,h+=947912704,r[l]=c|h}for(let l=1024;l<2048;++l)r[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)a[l]=l<<23;a[31]=1199570944,a[32]=2147483648;for(let l=33;l<63;++l)a[l]=2147483648+(l-32<<23);a[63]=3347054592;for(let l=1;l<64;++l)l!==32&&(o[l]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:r,exponentTable:a,offsetTable:o}}function gn(s){Math.abs(s)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),s=Ft(s,-65504,65504),fi.floatView[0]=s;const e=fi.uint32View[0],t=e>>23&511;return fi.baseTable[t]+((e&8388607)>>fi.shiftTable[t])}function Sr(s){const e=s>>10;return fi.uint32View[0]=fi.mantissaTable[fi.offsetTable[e]+(s&1023)]+fi.exponentTable[e],fi.floatView[0]}const oy={toHalfFloat:gn,fromHalfFloat:Sr},Xt=new E,ba=new ne;class At{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=Gr,this.updateRange={offset:0,count:-1},this.gpuType=jn,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)ba.fromBufferAttribute(this,t),ba.applyMatrix3(e),this.setXY(t,ba.x,ba.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)Xt.fromBufferAttribute(this,t),Xt.applyMatrix3(e),this.setXYZ(t,Xt.x,Xt.y,Xt.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)Xt.fromBufferAttribute(this,t),Xt.applyMatrix4(e),this.setXYZ(t,Xt.x,Xt.y,Xt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Xt.fromBufferAttribute(this,t),Xt.applyNormalMatrix(e),this.setXYZ(t,Xt.x,Xt.y,Xt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Xt.fromBufferAttribute(this,t),Xt.transformDirection(e),this.setXYZ(t,Xt.x,Xt.y,Xt.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=En(t,this.array)),t}setX(e,t){return this.normalized&&(t=ht(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=En(t,this.array)),t}setY(e,t){return this.normalized&&(t=ht(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=En(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ht(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=En(t,this.array)),t}setW(e,t){return this.normalized&&(t=ht(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=ht(t,this.array),n=ht(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=ht(t,this.array),n=ht(n,this.array),i=ht(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=ht(t,this.array),n=ht(n,this.array),i=ht(i,this.array),r=ht(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Gr&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}}class ly extends At{constructor(e,t,n){super(new Int8Array(e),t,n)}}class cy extends At{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class hy extends At{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class uy extends At{constructor(e,t,n){super(new Int16Array(e),t,n)}}class mh extends At{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class fy extends At{constructor(e,t,n){super(new Int32Array(e),t,n)}}class Oo extends At{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class dy extends At{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=Sr(this.array[e*this.itemSize]);return this.normalized&&(t=En(t,this.array)),t}setX(e,t){return this.normalized&&(t=ht(t,this.array)),this.array[e*this.itemSize]=gn(t),this}getY(e){let t=Sr(this.array[e*this.itemSize+1]);return this.normalized&&(t=En(t,this.array)),t}setY(e,t){return this.normalized&&(t=ht(t,this.array)),this.array[e*this.itemSize+1]=gn(t),this}getZ(e){let t=Sr(this.array[e*this.itemSize+2]);return this.normalized&&(t=En(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ht(t,this.array)),this.array[e*this.itemSize+2]=gn(t),this}getW(e){let t=Sr(this.array[e*this.itemSize+3]);return this.normalized&&(t=En(t,this.array)),t}setW(e,t){return this.normalized&&(t=ht(t,this.array)),this.array[e*this.itemSize+3]=gn(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=ht(t,this.array),n=ht(n,this.array)),this.array[e+0]=gn(t),this.array[e+1]=gn(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=ht(t,this.array),n=ht(n,this.array),i=ht(i,this.array)),this.array[e+0]=gn(t),this.array[e+1]=gn(n),this.array[e+2]=gn(i),this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=ht(t,this.array),n=ht(n,this.array),i=ht(i,this.array),r=ht(r,this.array)),this.array[e+0]=gn(t),this.array[e+1]=gn(n),this.array[e+2]=gn(i),this.array[e+3]=gn(r),this}}class We extends At{constructor(e,t,n){super(new Float32Array(e),t,n)}}class py extends At{constructor(e,t,n){super(new Float64Array(e),t,n)}}let my=0;const An=new nt,Il=new vt,Ls=new E,bn=new ii,pr=new ii,Kt=new E;class st extends ni{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:my++}),this.uuid=Tn(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(_m(e)?Oo:mh)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new ct().getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return An.makeRotationFromQuaternion(e),this.applyMatrix4(An),this}rotateX(e){return An.makeRotationX(e),this.applyMatrix4(An),this}rotateY(e){return An.makeRotationY(e),this.applyMatrix4(An),this}rotateZ(e){return An.makeRotationZ(e),this.applyMatrix4(An),this}translate(e,t,n){return An.makeTranslation(e,t,n),this.applyMatrix4(An),this}scale(e,t,n){return An.makeScale(e,t,n),this.applyMatrix4(An),this}lookAt(e){return Il.lookAt(e),Il.updateMatrix(),this.applyMatrix4(Il.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ls).negate(),this.translate(Ls.x,Ls.y,Ls.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const r=e[n];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new We(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new ii);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new E(-1/0,-1/0,-1/0),new E(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const r=t[n];bn.setFromBufferAttribute(r),this.morphTargetsRelative?(Kt.addVectors(this.boundingBox.min,bn.min),this.boundingBox.expandByPoint(Kt),Kt.addVectors(this.boundingBox.max,bn.max),this.boundingBox.expandByPoint(Kt)):(this.boundingBox.expandByPoint(bn.min),this.boundingBox.expandByPoint(bn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new zn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new E,1/0);return}if(e){const n=this.boundingSphere.center;if(bn.setFromBufferAttribute(e),t)for(let r=0,a=t.length;r<a;r++){const o=t[r];pr.setFromBufferAttribute(o),this.morphTargetsRelative?(Kt.addVectors(bn.min,pr.min),bn.expandByPoint(Kt),Kt.addVectors(bn.max,pr.max),bn.expandByPoint(Kt)):(bn.expandByPoint(pr.min),bn.expandByPoint(pr.max))}bn.getCenter(n);let i=0;for(let r=0,a=e.count;r<a;r++)Kt.fromBufferAttribute(e,r),i=Math.max(i,n.distanceToSquared(Kt));if(t)for(let r=0,a=t.length;r<a;r++){const o=t[r],l=this.morphTargetsRelative;for(let c=0,h=o.count;c<h;c++)Kt.fromBufferAttribute(o,c),l&&(Ls.fromBufferAttribute(e,c),Kt.add(Ls)),i=Math.max(i,n.distanceToSquared(Kt))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,i=t.position.array,r=t.normal.array,a=t.uv.array,o=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new At(new Float32Array(4*o),4));const l=this.getAttribute("tangent").array,c=[],h=[];for(let C=0;C<o;C++)c[C]=new E,h[C]=new E;const u=new E,f=new E,d=new E,p=new ne,m=new ne,_=new ne,g=new E,y=new E;function v(C,V,X){u.fromArray(i,C*3),f.fromArray(i,V*3),d.fromArray(i,X*3),p.fromArray(a,C*2),m.fromArray(a,V*2),_.fromArray(a,X*2),f.sub(u),d.sub(u),m.sub(p),_.sub(p);const F=1/(m.x*_.y-_.x*m.y);isFinite(F)&&(g.copy(f).multiplyScalar(_.y).addScaledVector(d,-m.y).multiplyScalar(F),y.copy(d).multiplyScalar(m.x).addScaledVector(f,-_.x).multiplyScalar(F),c[C].add(g),c[V].add(g),c[X].add(g),h[C].add(y),h[V].add(y),h[X].add(y))}let x=this.groups;x.length===0&&(x=[{start:0,count:n.length}]);for(let C=0,V=x.length;C<V;++C){const X=x[C],F=X.start,B=X.count;for(let N=F,Y=F+B;N<Y;N+=3)v(n[N+0],n[N+1],n[N+2])}const M=new E,w=new E,T=new E,I=new E;function S(C){T.fromArray(r,C*3),I.copy(T);const V=c[C];M.copy(V),M.sub(T.multiplyScalar(T.dot(V))).normalize(),w.crossVectors(I,V);const F=w.dot(h[C])<0?-1:1;l[C*4]=M.x,l[C*4+1]=M.y,l[C*4+2]=M.z,l[C*4+3]=F}for(let C=0,V=x.length;C<V;++C){const X=x[C],F=X.start,B=X.count;for(let N=F,Y=F+B;N<Y;N+=3)S(n[N+0]),S(n[N+1]),S(n[N+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new At(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let f=0,d=n.count;f<d;f++)n.setXYZ(f,0,0,0);const i=new E,r=new E,a=new E,o=new E,l=new E,c=new E,h=new E,u=new E;if(e)for(let f=0,d=e.count;f<d;f+=3){const p=e.getX(f+0),m=e.getX(f+1),_=e.getX(f+2);i.fromBufferAttribute(t,p),r.fromBufferAttribute(t,m),a.fromBufferAttribute(t,_),h.subVectors(a,r),u.subVectors(i,r),h.cross(u),o.fromBufferAttribute(n,p),l.fromBufferAttribute(n,m),c.fromBufferAttribute(n,_),o.add(h),l.add(h),c.add(h),n.setXYZ(p,o.x,o.y,o.z),n.setXYZ(m,l.x,l.y,l.z),n.setXYZ(_,c.x,c.y,c.z)}else for(let f=0,d=t.count;f<d;f+=3)i.fromBufferAttribute(t,f+0),r.fromBufferAttribute(t,f+1),a.fromBufferAttribute(t,f+2),h.subVectors(a,r),u.subVectors(i,r),h.cross(u),n.setXYZ(f+0,h.x,h.y,h.z),n.setXYZ(f+1,h.x,h.y,h.z),n.setXYZ(f+2,h.x,h.y,h.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)Kt.fromBufferAttribute(e,t),Kt.normalize(),e.setXYZ(t,Kt.x,Kt.y,Kt.z)}toNonIndexed(){function e(o,l){const c=o.array,h=o.itemSize,u=o.normalized,f=new c.constructor(l.length*h);let d=0,p=0;for(let m=0,_=l.length;m<_;m++){o.isInterleavedBufferAttribute?d=l[m]*o.data.stride+o.offset:d=l[m]*h;for(let g=0;g<h;g++)f[p++]=c[d++]}return new At(f,h,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new st,n=this.index.array,i=this.attributes;for(const o in i){const l=i[o],c=e(l,n);t.setAttribute(o,c)}const r=this.morphAttributes;for(const o in r){const l=[],c=r[o];for(let h=0,u=c.length;h<u;h++){const f=c[h],d=e(f,n);l.push(d)}t.morphAttributes[o]=l}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let o=0,l=a.length;o<l;o++){const c=a[o];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const l in n){const c=n[l];e.data.attributes[l]=c.toJSON(e.data)}const i={};let r=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],h=[];for(let u=0,f=c.length;u<f;u++){const d=c[u];h.push(d.toJSON(e.data))}h.length>0&&(i[l]=h,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return o!==null&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const c in i){const h=i[c];this.setAttribute(c,h.clone(t))}const r=e.morphAttributes;for(const c in r){const h=[],u=r[c];for(let f=0,d=u.length;f<d;f++)h.push(u[f].clone(t));this.morphAttributes[c]=h}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let c=0,h=a.length;c<h;c++){const u=a[c];this.addGroup(u.start,u.count,u.materialIndex)}const o=e.boundingBox;o!==null&&(this.boundingBox=o.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Pu=new nt,Ji=new rr,Sa=new zn,Lu=new E,Is=new E,Ds=new E,Us=new E,Dl=new E,wa=new E,Ea=new ne,Ta=new ne,Aa=new ne,Iu=new E,Du=new E,Uu=new E,Ca=new E,Ra=new E;class Rt extends vt{constructor(e=new st,t=new Qt){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,r=n.morphAttributes.position,a=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const o=this.morphTargetInfluences;if(r&&o){wa.set(0,0,0);for(let l=0,c=r.length;l<c;l++){const h=o[l],u=r[l];h!==0&&(Dl.fromBufferAttribute(u,e),a?wa.addScaledVector(Dl,h):wa.addScaledVector(Dl.sub(t),h))}t.add(wa)}return t}raycast(e,t){const n=this.geometry,i=this.material,r=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),Sa.copy(n.boundingSphere),Sa.applyMatrix4(r),Ji.copy(e.ray).recast(e.near),!(Sa.containsPoint(Ji.origin)===!1&&(Ji.intersectSphere(Sa,Lu)===null||Ji.origin.distanceToSquared(Lu)>(e.far-e.near)**2))&&(Pu.copy(r).invert(),Ji.copy(e.ray).applyMatrix4(Pu),!(n.boundingBox!==null&&Ji.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,Ji)))}_computeIntersections(e,t,n){let i;const r=this.geometry,a=this.material,o=r.index,l=r.attributes.position,c=r.attributes.uv,h=r.attributes.uv1,u=r.attributes.normal,f=r.groups,d=r.drawRange;if(o!==null)if(Array.isArray(a))for(let p=0,m=f.length;p<m;p++){const _=f[p],g=a[_.materialIndex],y=Math.max(_.start,d.start),v=Math.min(o.count,Math.min(_.start+_.count,d.start+d.count));for(let x=y,M=v;x<M;x+=3){const w=o.getX(x),T=o.getX(x+1),I=o.getX(x+2);i=Pa(this,g,e,n,c,h,u,w,T,I),i&&(i.faceIndex=Math.floor(x/3),i.face.materialIndex=_.materialIndex,t.push(i))}}else{const p=Math.max(0,d.start),m=Math.min(o.count,d.start+d.count);for(let _=p,g=m;_<g;_+=3){const y=o.getX(_),v=o.getX(_+1),x=o.getX(_+2);i=Pa(this,a,e,n,c,h,u,y,v,x),i&&(i.faceIndex=Math.floor(_/3),t.push(i))}}else if(l!==void 0)if(Array.isArray(a))for(let p=0,m=f.length;p<m;p++){const _=f[p],g=a[_.materialIndex],y=Math.max(_.start,d.start),v=Math.min(l.count,Math.min(_.start+_.count,d.start+d.count));for(let x=y,M=v;x<M;x+=3){const w=x,T=x+1,I=x+2;i=Pa(this,g,e,n,c,h,u,w,T,I),i&&(i.faceIndex=Math.floor(x/3),i.face.materialIndex=_.materialIndex,t.push(i))}}else{const p=Math.max(0,d.start),m=Math.min(l.count,d.start+d.count);for(let _=p,g=m;_<g;_+=3){const y=_,v=_+1,x=_+2;i=Pa(this,a,e,n,c,h,u,y,v,x),i&&(i.faceIndex=Math.floor(_/3),t.push(i))}}}}function gy(s,e,t,n,i,r,a,o){let l;if(e.side===pn?l=n.intersectTriangle(a,r,i,!0,o):l=n.intersectTriangle(i,r,a,e.side===mi,o),l===null)return null;Ra.copy(o),Ra.applyMatrix4(s.matrixWorld);const c=t.ray.origin.distanceTo(Ra);return c<t.near||c>t.far?null:{distance:c,point:Ra.clone(),object:s}}function Pa(s,e,t,n,i,r,a,o,l,c){s.getVertexPosition(o,Is),s.getVertexPosition(l,Ds),s.getVertexPosition(c,Us);const h=gy(s,e,t,n,Is,Ds,Us,Ca);if(h){i&&(Ea.fromBufferAttribute(i,o),Ta.fromBufferAttribute(i,l),Aa.fromBufferAttribute(i,c),h.uv=_n.getInterpolation(Ca,Is,Ds,Us,Ea,Ta,Aa,new ne)),r&&(Ea.fromBufferAttribute(r,o),Ta.fromBufferAttribute(r,l),Aa.fromBufferAttribute(r,c),h.uv1=_n.getInterpolation(Ca,Is,Ds,Us,Ea,Ta,Aa,new ne),h.uv2=h.uv1),a&&(Iu.fromBufferAttribute(a,o),Du.fromBufferAttribute(a,l),Uu.fromBufferAttribute(a,c),h.normal=_n.getInterpolation(Ca,Is,Ds,Us,Iu,Du,Uu,new E),h.normal.dot(n.direction)>0&&h.normal.multiplyScalar(-1));const u={a:o,b:l,c,normal:new E,materialIndex:0};_n.getNormal(Is,Ds,Us,u.normal),h.face=u}return h}class Wi extends st{constructor(e=1,t=1,n=1,i=1,r=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:a};const o=this;i=Math.floor(i),r=Math.floor(r),a=Math.floor(a);const l=[],c=[],h=[],u=[];let f=0,d=0;p("z","y","x",-1,-1,n,t,e,a,r,0),p("z","y","x",1,-1,n,t,-e,a,r,1),p("x","z","y",1,1,e,n,t,i,a,2),p("x","z","y",1,-1,e,n,-t,i,a,3),p("x","y","z",1,-1,e,t,n,i,r,4),p("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(l),this.setAttribute("position",new We(c,3)),this.setAttribute("normal",new We(h,3)),this.setAttribute("uv",new We(u,2));function p(m,_,g,y,v,x,M,w,T,I,S){const C=x/T,V=M/I,X=x/2,F=M/2,B=w/2,N=T+1,Y=I+1;let O=0,Z=0;const q=new E;for(let Q=0;Q<Y;Q++){const H=Q*V-F;for(let ee=0;ee<N;ee++){const _e=ee*C-X;q[m]=_e*y,q[_]=H*v,q[g]=B,c.push(q.x,q.y,q.z),q[m]=0,q[_]=0,q[g]=w>0?1:-1,h.push(q.x,q.y,q.z),u.push(ee/T),u.push(1-Q/I),O+=1}}for(let Q=0;Q<I;Q++)for(let H=0;H<T;H++){const ee=f+H+N*Q,_e=f+H+N*(Q+1),ge=f+(H+1)+N*(Q+1),Se=f+(H+1)+N*Q;l.push(ee,_e,Se),l.push(_e,ge,Se),Z+=6}o.addGroup(d,Z,S),d+=Z,f+=O}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Wi(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function tr(s){const e={};for(const t in s){e[t]={};for(const n in s[t]){const i=s[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function dn(s){const e={};for(let t=0;t<s.length;t++){const n=tr(s[t]);for(const i in n)e[i]=n[i]}return e}function _y(s){const e=[];for(let t=0;t<s.length;t++)e.push(s[t].clone());return e}function ym(s){return s.getRenderTarget()===null?s.outputColorSpace:Fn}const ko={clone:tr,merge:dn};var vy=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,yy=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class tn extends ln{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=vy,this.fragmentShader=yy,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=tr(e.uniforms),this.uniformsGroups=_y(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const a=this.uniforms[i].value;a&&a.isTexture?t.uniforms[i]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?t.uniforms[i]={type:"c",value:a.getHex()}:a&&a.isVector2?t.uniforms[i]={type:"v2",value:a.toArray()}:a&&a.isVector3?t.uniforms[i]={type:"v3",value:a.toArray()}:a&&a.isVector4?t.uniforms[i]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?t.uniforms[i]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?t.uniforms[i]={type:"m4",value:a.toArray()}:t.uniforms[i]={value:a}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Fo extends vt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new nt,this.projectionMatrix=new nt,this.projectionMatrixInverse=new nt,this.coordinateSystem=Jn}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class en extends Fo{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=er*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(ps*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return er*2*Math.atan(Math.tan(ps*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,r,a){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(ps*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i;const a=this.view;if(this.view!==null&&this.view.enabled){const l=a.fullWidth,c=a.fullHeight;r+=a.offsetX*i/l,t-=a.offsetY*n/c,i*=a.width/l,n*=a.height/c}const o=this.filmOffset;o!==0&&(r+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Ns=-90,Os=1;class xm extends vt{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null;const i=new en(Ns,Os,e,t);i.layers=this.layers,this.add(i);const r=new en(Ns,Os,e,t);r.layers=this.layers,this.add(r);const a=new en(Ns,Os,e,t);a.layers=this.layers,this.add(a);const o=new en(Ns,Os,e,t);o.layers=this.layers,this.add(o);const l=new en(Ns,Os,e,t);l.layers=this.layers,this.add(l);const c=new en(Ns,Os,e,t);c.layers=this.layers,this.add(c)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,r,a,o,l]=t;for(const c of t)this.remove(c);if(e===Jn)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),o.up.set(0,1,0),o.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(e===Wr)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),o.up.set(0,-1,0),o.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const c of t)this.add(c),c.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[i,r,a,o,l,c]=this.children,h=e.getRenderTarget(),u=e.toneMapping,f=e.xr.enabled;e.toneMapping=Qn,e.xr.enabled=!1;const d=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,r),e.setRenderTarget(n,2),e.render(t,a),e.setRenderTarget(n,3),e.render(t,o),e.setRenderTarget(n,4),e.render(t,l),n.texture.generateMipmaps=d,e.setRenderTarget(n,5),e.render(t,c),e.setRenderTarget(h),e.toneMapping=u,e.xr.enabled=f,n.texture.needsPMREMUpdate=!0}}class sa extends Gt{constructor(e,t,n,i,r,a,o,l,c,h){e=e!==void 0?e:[],t=t!==void 0?t:Di,super(e,t,n,i,r,a,o,l,c,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class Mm extends Yt{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];t.encoding!==void 0&&(Cr("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),t.colorSpace=t.encoding===Ri?at:Pi),this.texture=new sa(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:Ht}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Wi(5,5,5),r=new tn({name:"CubemapFromEquirect",uniforms:tr(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:pn,blending:Ln});r.uniforms.tEquirect.value=t;const a=new Rt(i,r),o=t.minFilter;return t.minFilter===Ni&&(t.minFilter=Ht),new xm(1,10,this).update(e,a),t.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,n,i){const r=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,n,i);e.setRenderTarget(r)}}const Ul=new E,xy=new E,My=new ct;class Si{constructor(e=new E(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Ul.subVectors(n,t).cross(xy.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(Ul),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:t.copy(e.start).addScaledVector(n,r)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||My.getNormalMatrix(e),i=this.coplanarPoint(Ul).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Ki=new zn,La=new E;class Bo{constructor(e=new Si,t=new Si,n=new Si,i=new Si,r=new Si,a=new Si){this.planes=[e,t,n,i,r,a]}set(e,t,n,i,r,a){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(n),o[3].copy(i),o[4].copy(r),o[5].copy(a),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=Jn){const n=this.planes,i=e.elements,r=i[0],a=i[1],o=i[2],l=i[3],c=i[4],h=i[5],u=i[6],f=i[7],d=i[8],p=i[9],m=i[10],_=i[11],g=i[12],y=i[13],v=i[14],x=i[15];if(n[0].setComponents(l-r,f-c,_-d,x-g).normalize(),n[1].setComponents(l+r,f+c,_+d,x+g).normalize(),n[2].setComponents(l+a,f+h,_+p,x+y).normalize(),n[3].setComponents(l-a,f-h,_-p,x-y).normalize(),n[4].setComponents(l-o,f-u,_-m,x-v).normalize(),t===Jn)n[5].setComponents(l+o,f+u,_+m,x+v).normalize();else if(t===Wr)n[5].setComponents(o,u,m,v).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Ki.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),Ki.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Ki)}intersectsSprite(e){return Ki.center.set(0,0,0),Ki.radius=.7071067811865476,Ki.applyMatrix4(e.matrixWorld),this.intersectsSphere(Ki)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(La.x=i.normal.x>0?e.max.x:e.min.x,La.y=i.normal.y>0?e.max.y:e.min.y,La.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(La)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function bm(){let s=null,e=!1,t=null,n=null;function i(r,a){t(r,a),n=s.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=s.requestAnimationFrame(i),e=!0)},stop:function(){s.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(r){t=r},setContext:function(r){s=r}}}function by(s,e){const t=e.isWebGL2,n=new WeakMap;function i(c,h){const u=c.array,f=c.usage,d=s.createBuffer();s.bindBuffer(h,d),s.bufferData(h,u,f),c.onUploadCallback();let p;if(u instanceof Float32Array)p=s.FLOAT;else if(u instanceof Uint16Array)if(c.isFloat16BufferAttribute)if(t)p=s.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else p=s.UNSIGNED_SHORT;else if(u instanceof Int16Array)p=s.SHORT;else if(u instanceof Uint32Array)p=s.UNSIGNED_INT;else if(u instanceof Int32Array)p=s.INT;else if(u instanceof Int8Array)p=s.BYTE;else if(u instanceof Uint8Array)p=s.UNSIGNED_BYTE;else if(u instanceof Uint8ClampedArray)p=s.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+u);return{buffer:d,type:p,bytesPerElement:u.BYTES_PER_ELEMENT,version:c.version}}function r(c,h,u){const f=h.array,d=h.updateRange;s.bindBuffer(u,c),d.count===-1?s.bufferSubData(u,0,f):(t?s.bufferSubData(u,d.offset*f.BYTES_PER_ELEMENT,f,d.offset,d.count):s.bufferSubData(u,d.offset*f.BYTES_PER_ELEMENT,f.subarray(d.offset,d.offset+d.count)),d.count=-1),h.onUploadCallback()}function a(c){return c.isInterleavedBufferAttribute&&(c=c.data),n.get(c)}function o(c){c.isInterleavedBufferAttribute&&(c=c.data);const h=n.get(c);h&&(s.deleteBuffer(h.buffer),n.delete(c))}function l(c,h){if(c.isGLBufferAttribute){const f=n.get(c);(!f||f.version<c.version)&&n.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const u=n.get(c);u===void 0?n.set(c,i(c,h)):u.version<c.version&&(r(u.buffer,c,h),u.version=c.version)}return{get:a,remove:o,update:l}}class ar extends st{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const r=e/2,a=t/2,o=Math.floor(n),l=Math.floor(i),c=o+1,h=l+1,u=e/o,f=t/l,d=[],p=[],m=[],_=[];for(let g=0;g<h;g++){const y=g*f-a;for(let v=0;v<c;v++){const x=v*u-r;p.push(x,-y,0),m.push(0,0,1),_.push(v/o),_.push(1-g/l)}}for(let g=0;g<l;g++)for(let y=0;y<o;y++){const v=y+c*g,x=y+c*(g+1),M=y+1+c*(g+1),w=y+1+c*g;d.push(v,x,w),d.push(x,M,w)}this.setIndex(d),this.setAttribute("position",new We(p,3)),this.setAttribute("normal",new We(m,3)),this.setAttribute("uv",new We(_,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ar(e.width,e.height,e.widthSegments,e.heightSegments)}}var Sy=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,wy=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,Ey=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,Ty=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Ay=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,Cy=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,Ry=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,Py=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Ly=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,Iy=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,Dy=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,Uy=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,Ny=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Oy=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,ky=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Fy=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,By=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,zy=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,Vy=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,Hy=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,Gy=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,Wy=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,Xy=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,$y=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,Yy=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,qy=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,Zy=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,jy=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Jy="gl_FragColor = linearToOutputTexel( gl_FragColor );",Ky=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,Qy=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,ex=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,tx=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,nx=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,ix=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,sx=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,rx=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,ax=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,ox=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,lx=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,cx=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,hx=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,ux=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,fx=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,dx=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,px=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,mx=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,gx=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,_x=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,vx=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,yx=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	anisotropyV /= material.anisotropy;
	material.anisotropy = saturate( material.anisotropy );
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;
#endif`,xx=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,Mx=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,bx=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometry.viewDir, geometry.normal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,Sx=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,wx=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,Ex=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Tx=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,Ax=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,Cx=`#ifdef USE_MAP
	diffuseColor *= texture2D( map, vMapUv );
#endif`,Rx=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,Px=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Lx=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Ix=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Dx=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Ux=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,Nx=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,Ox=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,kx=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,Fx=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 geometryNormal = normal;`,Bx=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,zx=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Vx=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Hx=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,Gx=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,Wx=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,Xx=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,$x=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,Yx=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,qx=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,Zx=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,jx=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Jx=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Kx=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Qx=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,e1=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,t1=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,n1=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,i1=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,s1=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,r1=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,a1=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,o1=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,l1=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,c1=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,h1=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,u1=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,f1=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,d1=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,p1=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,m1=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,g1=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,_1=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,v1=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,y1=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const x1=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,M1=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,b1=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,S1=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,w1=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,E1=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,T1=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,A1=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,C1=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,R1=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,P1=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,L1=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,I1=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,D1=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,U1=`#include <common>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,N1=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,O1=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,k1=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,F1=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,B1=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,z1=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,V1=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,H1=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,G1=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,W1=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,X1=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,$1=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Y1=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,q1=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Z1=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,j1=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,J1=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,K1=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Q1=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,ot={alphahash_fragment:Sy,alphahash_pars_fragment:wy,alphamap_fragment:Ey,alphamap_pars_fragment:Ty,alphatest_fragment:Ay,alphatest_pars_fragment:Cy,aomap_fragment:Ry,aomap_pars_fragment:Py,begin_vertex:Ly,beginnormal_vertex:Iy,bsdfs:Dy,iridescence_fragment:Uy,bumpmap_pars_fragment:Ny,clipping_planes_fragment:Oy,clipping_planes_pars_fragment:ky,clipping_planes_pars_vertex:Fy,clipping_planes_vertex:By,color_fragment:zy,color_pars_fragment:Vy,color_pars_vertex:Hy,color_vertex:Gy,common:Wy,cube_uv_reflection_fragment:Xy,defaultnormal_vertex:$y,displacementmap_pars_vertex:Yy,displacementmap_vertex:qy,emissivemap_fragment:Zy,emissivemap_pars_fragment:jy,colorspace_fragment:Jy,colorspace_pars_fragment:Ky,envmap_fragment:Qy,envmap_common_pars_fragment:ex,envmap_pars_fragment:tx,envmap_pars_vertex:nx,envmap_physical_pars_fragment:px,envmap_vertex:ix,fog_vertex:sx,fog_pars_vertex:rx,fog_fragment:ax,fog_pars_fragment:ox,gradientmap_pars_fragment:lx,lightmap_fragment:cx,lightmap_pars_fragment:hx,lights_lambert_fragment:ux,lights_lambert_pars_fragment:fx,lights_pars_begin:dx,lights_toon_fragment:mx,lights_toon_pars_fragment:gx,lights_phong_fragment:_x,lights_phong_pars_fragment:vx,lights_physical_fragment:yx,lights_physical_pars_fragment:xx,lights_fragment_begin:Mx,lights_fragment_maps:bx,lights_fragment_end:Sx,logdepthbuf_fragment:wx,logdepthbuf_pars_fragment:Ex,logdepthbuf_pars_vertex:Tx,logdepthbuf_vertex:Ax,map_fragment:Cx,map_pars_fragment:Rx,map_particle_fragment:Px,map_particle_pars_fragment:Lx,metalnessmap_fragment:Ix,metalnessmap_pars_fragment:Dx,morphcolor_vertex:Ux,morphnormal_vertex:Nx,morphtarget_pars_vertex:Ox,morphtarget_vertex:kx,normal_fragment_begin:Fx,normal_fragment_maps:Bx,normal_pars_fragment:zx,normal_pars_vertex:Vx,normal_vertex:Hx,normalmap_pars_fragment:Gx,clearcoat_normal_fragment_begin:Wx,clearcoat_normal_fragment_maps:Xx,clearcoat_pars_fragment:$x,iridescence_pars_fragment:Yx,opaque_fragment:qx,packing:Zx,premultiplied_alpha_fragment:jx,project_vertex:Jx,dithering_fragment:Kx,dithering_pars_fragment:Qx,roughnessmap_fragment:e1,roughnessmap_pars_fragment:t1,shadowmap_pars_fragment:n1,shadowmap_pars_vertex:i1,shadowmap_vertex:s1,shadowmask_pars_fragment:r1,skinbase_vertex:a1,skinning_pars_vertex:o1,skinning_vertex:l1,skinnormal_vertex:c1,specularmap_fragment:h1,specularmap_pars_fragment:u1,tonemapping_fragment:f1,tonemapping_pars_fragment:d1,transmission_fragment:p1,transmission_pars_fragment:m1,uv_pars_fragment:g1,uv_pars_vertex:_1,uv_vertex:v1,worldpos_vertex:y1,background_vert:x1,background_frag:M1,backgroundCube_vert:b1,backgroundCube_frag:S1,cube_vert:w1,cube_frag:E1,depth_vert:T1,depth_frag:A1,distanceRGBA_vert:C1,distanceRGBA_frag:R1,equirect_vert:P1,equirect_frag:L1,linedashed_vert:I1,linedashed_frag:D1,meshbasic_vert:U1,meshbasic_frag:N1,meshlambert_vert:O1,meshlambert_frag:k1,meshmatcap_vert:F1,meshmatcap_frag:B1,meshnormal_vert:z1,meshnormal_frag:V1,meshphong_vert:H1,meshphong_frag:G1,meshphysical_vert:W1,meshphysical_frag:X1,meshtoon_vert:$1,meshtoon_frag:Y1,points_vert:q1,points_frag:Z1,shadow_vert:j1,shadow_frag:J1,sprite_vert:K1,sprite_frag:Q1},we={common:{diffuse:{value:new be(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new ct},alphaMap:{value:null},alphaMapTransform:{value:new ct},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new ct}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new ct}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new ct}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new ct},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new ct},normalScale:{value:new ne(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new ct},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new ct}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new ct}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new ct}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new be(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new be(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new ct},alphaTest:{value:0},uvTransform:{value:new ct}},sprite:{diffuse:{value:new be(16777215)},opacity:{value:1},center:{value:new ne(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new ct},alphaMap:{value:null},alphaMapTransform:{value:new ct},alphaTest:{value:0}}},On={basic:{uniforms:dn([we.common,we.specularmap,we.envmap,we.aomap,we.lightmap,we.fog]),vertexShader:ot.meshbasic_vert,fragmentShader:ot.meshbasic_frag},lambert:{uniforms:dn([we.common,we.specularmap,we.envmap,we.aomap,we.lightmap,we.emissivemap,we.bumpmap,we.normalmap,we.displacementmap,we.fog,we.lights,{emissive:{value:new be(0)}}]),vertexShader:ot.meshlambert_vert,fragmentShader:ot.meshlambert_frag},phong:{uniforms:dn([we.common,we.specularmap,we.envmap,we.aomap,we.lightmap,we.emissivemap,we.bumpmap,we.normalmap,we.displacementmap,we.fog,we.lights,{emissive:{value:new be(0)},specular:{value:new be(1118481)},shininess:{value:30}}]),vertexShader:ot.meshphong_vert,fragmentShader:ot.meshphong_frag},standard:{uniforms:dn([we.common,we.envmap,we.aomap,we.lightmap,we.emissivemap,we.bumpmap,we.normalmap,we.displacementmap,we.roughnessmap,we.metalnessmap,we.fog,we.lights,{emissive:{value:new be(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ot.meshphysical_vert,fragmentShader:ot.meshphysical_frag},toon:{uniforms:dn([we.common,we.aomap,we.lightmap,we.emissivemap,we.bumpmap,we.normalmap,we.displacementmap,we.gradientmap,we.fog,we.lights,{emissive:{value:new be(0)}}]),vertexShader:ot.meshtoon_vert,fragmentShader:ot.meshtoon_frag},matcap:{uniforms:dn([we.common,we.bumpmap,we.normalmap,we.displacementmap,we.fog,{matcap:{value:null}}]),vertexShader:ot.meshmatcap_vert,fragmentShader:ot.meshmatcap_frag},points:{uniforms:dn([we.points,we.fog]),vertexShader:ot.points_vert,fragmentShader:ot.points_frag},dashed:{uniforms:dn([we.common,we.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ot.linedashed_vert,fragmentShader:ot.linedashed_frag},depth:{uniforms:dn([we.common,we.displacementmap]),vertexShader:ot.depth_vert,fragmentShader:ot.depth_frag},normal:{uniforms:dn([we.common,we.bumpmap,we.normalmap,we.displacementmap,{opacity:{value:1}}]),vertexShader:ot.meshnormal_vert,fragmentShader:ot.meshnormal_frag},sprite:{uniforms:dn([we.sprite,we.fog]),vertexShader:ot.sprite_vert,fragmentShader:ot.sprite_frag},background:{uniforms:{uvTransform:{value:new ct},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:ot.background_vert,fragmentShader:ot.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:ot.backgroundCube_vert,fragmentShader:ot.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:ot.cube_vert,fragmentShader:ot.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ot.equirect_vert,fragmentShader:ot.equirect_frag},distanceRGBA:{uniforms:dn([we.common,we.displacementmap,{referencePosition:{value:new E},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ot.distanceRGBA_vert,fragmentShader:ot.distanceRGBA_frag},shadow:{uniforms:dn([we.lights,we.fog,{color:{value:new be(0)},opacity:{value:1}}]),vertexShader:ot.shadow_vert,fragmentShader:ot.shadow_frag}};On.physical={uniforms:dn([On.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new ct},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new ct},clearcoatNormalScale:{value:new ne(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new ct},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new ct},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new ct},sheen:{value:0},sheenColor:{value:new be(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new ct},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new ct},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new ct},transmissionSamplerSize:{value:new ne},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new ct},attenuationDistance:{value:0},attenuationColor:{value:new be(0)},specularColor:{value:new be(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new ct},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new ct},anisotropyVector:{value:new ne},anisotropyMap:{value:null},anisotropyMapTransform:{value:new ct}}]),vertexShader:ot.meshphysical_vert,fragmentShader:ot.meshphysical_frag};const Ia={r:0,b:0,g:0};function eM(s,e,t,n,i,r,a){const o=new be(0);let l=r===!0?0:1,c,h,u=null,f=0,d=null;function p(_,g){let y=!1,v=g.isScene===!0?g.background:null;switch(v&&v.isTexture&&(v=(g.backgroundBlurriness>0?t:e).get(v)),v===null?m(o,l):v&&v.isColor&&(m(v,1),y=!0),s.xr.getEnvironmentBlendMode()){case"opaque":y=!0;break;case"additive":n.buffers.color.setClear(0,0,0,1,a),y=!0;break;case"alpha-blend":n.buffers.color.setClear(0,0,0,0,a),y=!0;break}(s.autoClear||y)&&s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil),v&&(v.isCubeTexture||v.mapping===sr)?(h===void 0&&(h=new Rt(new Wi(1,1,1),new tn({name:"BackgroundCubeMaterial",uniforms:tr(On.backgroundCube.uniforms),vertexShader:On.backgroundCube.vertexShader,fragmentShader:On.backgroundCube.fragmentShader,side:pn,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(w,T,I){this.matrixWorld.copyPosition(I.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(h)),h.material.uniforms.envMap.value=v,h.material.uniforms.flipEnvMap.value=v.isCubeTexture&&v.isRenderTargetTexture===!1?-1:1,h.material.uniforms.backgroundBlurriness.value=g.backgroundBlurriness,h.material.uniforms.backgroundIntensity.value=g.backgroundIntensity,h.material.toneMapped=v.colorSpace!==at,(u!==v||f!==v.version||d!==s.toneMapping)&&(h.material.needsUpdate=!0,u=v,f=v.version,d=s.toneMapping),h.layers.enableAll(),_.unshift(h,h.geometry,h.material,0,0,null)):v&&v.isTexture&&(c===void 0&&(c=new Rt(new ar(2,2),new tn({name:"BackgroundMaterial",uniforms:tr(On.background.uniforms),vertexShader:On.background.vertexShader,fragmentShader:On.background.fragmentShader,side:mi,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(c)),c.material.uniforms.t2D.value=v,c.material.uniforms.backgroundIntensity.value=g.backgroundIntensity,c.material.toneMapped=v.colorSpace!==at,v.matrixAutoUpdate===!0&&v.updateMatrix(),c.material.uniforms.uvTransform.value.copy(v.matrix),(u!==v||f!==v.version||d!==s.toneMapping)&&(c.material.needsUpdate=!0,u=v,f=v.version,d=s.toneMapping),c.layers.enableAll(),_.unshift(c,c.geometry,c.material,0,0,null))}function m(_,g){_.getRGB(Ia,ym(s)),n.buffers.color.setClear(Ia.r,Ia.g,Ia.b,g,a)}return{getClearColor:function(){return o},setClearColor:function(_,g=1){o.set(_),l=g,m(o,l)},getClearAlpha:function(){return l},setClearAlpha:function(_){l=_,m(o,l)},render:p}}function tM(s,e,t,n){const i=s.getParameter(s.MAX_VERTEX_ATTRIBS),r=n.isWebGL2?null:e.get("OES_vertex_array_object"),a=n.isWebGL2||r!==null,o={},l=_(null);let c=l,h=!1;function u(B,N,Y,O,Z){let q=!1;if(a){const Q=m(O,Y,N);c!==Q&&(c=Q,d(c.object)),q=g(B,O,Y,Z),q&&y(B,O,Y,Z)}else{const Q=N.wireframe===!0;(c.geometry!==O.id||c.program!==Y.id||c.wireframe!==Q)&&(c.geometry=O.id,c.program=Y.id,c.wireframe=Q,q=!0)}Z!==null&&t.update(Z,s.ELEMENT_ARRAY_BUFFER),(q||h)&&(h=!1,I(B,N,Y,O),Z!==null&&s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,t.get(Z).buffer))}function f(){return n.isWebGL2?s.createVertexArray():r.createVertexArrayOES()}function d(B){return n.isWebGL2?s.bindVertexArray(B):r.bindVertexArrayOES(B)}function p(B){return n.isWebGL2?s.deleteVertexArray(B):r.deleteVertexArrayOES(B)}function m(B,N,Y){const O=Y.wireframe===!0;let Z=o[B.id];Z===void 0&&(Z={},o[B.id]=Z);let q=Z[N.id];q===void 0&&(q={},Z[N.id]=q);let Q=q[O];return Q===void 0&&(Q=_(f()),q[O]=Q),Q}function _(B){const N=[],Y=[],O=[];for(let Z=0;Z<i;Z++)N[Z]=0,Y[Z]=0,O[Z]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:N,enabledAttributes:Y,attributeDivisors:O,object:B,attributes:{},index:null}}function g(B,N,Y,O){const Z=c.attributes,q=N.attributes;let Q=0;const H=Y.getAttributes();for(const ee in H)if(H[ee].location>=0){const ge=Z[ee];let Se=q[ee];if(Se===void 0&&(ee==="instanceMatrix"&&B.instanceMatrix&&(Se=B.instanceMatrix),ee==="instanceColor"&&B.instanceColor&&(Se=B.instanceColor)),ge===void 0||ge.attribute!==Se||Se&&ge.data!==Se.data)return!0;Q++}return c.attributesNum!==Q||c.index!==O}function y(B,N,Y,O){const Z={},q=N.attributes;let Q=0;const H=Y.getAttributes();for(const ee in H)if(H[ee].location>=0){let ge=q[ee];ge===void 0&&(ee==="instanceMatrix"&&B.instanceMatrix&&(ge=B.instanceMatrix),ee==="instanceColor"&&B.instanceColor&&(ge=B.instanceColor));const Se={};Se.attribute=ge,ge&&ge.data&&(Se.data=ge.data),Z[ee]=Se,Q++}c.attributes=Z,c.attributesNum=Q,c.index=O}function v(){const B=c.newAttributes;for(let N=0,Y=B.length;N<Y;N++)B[N]=0}function x(B){M(B,0)}function M(B,N){const Y=c.newAttributes,O=c.enabledAttributes,Z=c.attributeDivisors;Y[B]=1,O[B]===0&&(s.enableVertexAttribArray(B),O[B]=1),Z[B]!==N&&((n.isWebGL2?s:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](B,N),Z[B]=N)}function w(){const B=c.newAttributes,N=c.enabledAttributes;for(let Y=0,O=N.length;Y<O;Y++)N[Y]!==B[Y]&&(s.disableVertexAttribArray(Y),N[Y]=0)}function T(B,N,Y,O,Z,q,Q){Q===!0?s.vertexAttribIPointer(B,N,Y,Z,q):s.vertexAttribPointer(B,N,Y,O,Z,q)}function I(B,N,Y,O){if(n.isWebGL2===!1&&(B.isInstancedMesh||O.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;v();const Z=O.attributes,q=Y.getAttributes(),Q=N.defaultAttributeValues;for(const H in q){const ee=q[H];if(ee.location>=0){let _e=Z[H];if(_e===void 0&&(H==="instanceMatrix"&&B.instanceMatrix&&(_e=B.instanceMatrix),H==="instanceColor"&&B.instanceColor&&(_e=B.instanceColor)),_e!==void 0){const ge=_e.normalized,Se=_e.itemSize,Fe=t.get(_e);if(Fe===void 0)continue;const $e=Fe.buffer,Xe=Fe.type,ut=Fe.bytesPerElement,gt=n.isWebGL2===!0&&(Xe===s.INT||Xe===s.UNSIGNED_INT||_e.gpuType===nh);if(_e.isInterleavedBufferAttribute){const je=_e.data,U=je.stride,ve=_e.offset;if(je.isInstancedInterleavedBuffer){for(let le=0;le<ee.locationSize;le++)M(ee.location+le,je.meshPerAttribute);B.isInstancedMesh!==!0&&O._maxInstanceCount===void 0&&(O._maxInstanceCount=je.meshPerAttribute*je.count)}else for(let le=0;le<ee.locationSize;le++)x(ee.location+le);s.bindBuffer(s.ARRAY_BUFFER,$e);for(let le=0;le<ee.locationSize;le++)T(ee.location+le,Se/ee.locationSize,Xe,ge,U*ut,(ve+Se/ee.locationSize*le)*ut,gt)}else{if(_e.isInstancedBufferAttribute){for(let je=0;je<ee.locationSize;je++)M(ee.location+je,_e.meshPerAttribute);B.isInstancedMesh!==!0&&O._maxInstanceCount===void 0&&(O._maxInstanceCount=_e.meshPerAttribute*_e.count)}else for(let je=0;je<ee.locationSize;je++)x(ee.location+je);s.bindBuffer(s.ARRAY_BUFFER,$e);for(let je=0;je<ee.locationSize;je++)T(ee.location+je,Se/ee.locationSize,Xe,ge,Se*ut,Se/ee.locationSize*je*ut,gt)}}else if(Q!==void 0){const ge=Q[H];if(ge!==void 0)switch(ge.length){case 2:s.vertexAttrib2fv(ee.location,ge);break;case 3:s.vertexAttrib3fv(ee.location,ge);break;case 4:s.vertexAttrib4fv(ee.location,ge);break;default:s.vertexAttrib1fv(ee.location,ge)}}}}w()}function S(){X();for(const B in o){const N=o[B];for(const Y in N){const O=N[Y];for(const Z in O)p(O[Z].object),delete O[Z];delete N[Y]}delete o[B]}}function C(B){if(o[B.id]===void 0)return;const N=o[B.id];for(const Y in N){const O=N[Y];for(const Z in O)p(O[Z].object),delete O[Z];delete N[Y]}delete o[B.id]}function V(B){for(const N in o){const Y=o[N];if(Y[B.id]===void 0)continue;const O=Y[B.id];for(const Z in O)p(O[Z].object),delete O[Z];delete Y[B.id]}}function X(){F(),h=!0,c!==l&&(c=l,d(c.object))}function F(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:u,reset:X,resetDefaultState:F,dispose:S,releaseStatesOfGeometry:C,releaseStatesOfProgram:V,initAttributes:v,enableAttribute:x,disableUnusedAttributes:w}}function nM(s,e,t,n){const i=n.isWebGL2;let r;function a(c){r=c}function o(c,h){s.drawArrays(r,c,h),t.update(h,r,1)}function l(c,h,u){if(u===0)return;let f,d;if(i)f=s,d="drawArraysInstanced";else if(f=e.get("ANGLE_instanced_arrays"),d="drawArraysInstancedANGLE",f===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f[d](r,c,h,u),t.update(h,r,u)}this.setMode=a,this.render=o,this.renderInstances=l}function iM(s,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const T=e.get("EXT_texture_filter_anisotropic");n=s.getParameter(T.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function r(T){if(T==="highp"){if(s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.HIGH_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.HIGH_FLOAT).precision>0)return"highp";T="mediump"}return T==="mediump"&&s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.MEDIUM_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const a=typeof WebGL2RenderingContext<"u"&&s.constructor.name==="WebGL2RenderingContext";let o=t.precision!==void 0?t.precision:"highp";const l=r(o);l!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",l,"instead."),o=l);const c=a||e.has("WEBGL_draw_buffers"),h=t.logarithmicDepthBuffer===!0,u=s.getParameter(s.MAX_TEXTURE_IMAGE_UNITS),f=s.getParameter(s.MAX_VERTEX_TEXTURE_IMAGE_UNITS),d=s.getParameter(s.MAX_TEXTURE_SIZE),p=s.getParameter(s.MAX_CUBE_MAP_TEXTURE_SIZE),m=s.getParameter(s.MAX_VERTEX_ATTRIBS),_=s.getParameter(s.MAX_VERTEX_UNIFORM_VECTORS),g=s.getParameter(s.MAX_VARYING_VECTORS),y=s.getParameter(s.MAX_FRAGMENT_UNIFORM_VECTORS),v=f>0,x=a||e.has("OES_texture_float"),M=v&&x,w=a?s.getParameter(s.MAX_SAMPLES):0;return{isWebGL2:a,drawBuffers:c,getMaxAnisotropy:i,getMaxPrecision:r,precision:o,logarithmicDepthBuffer:h,maxTextures:u,maxVertexTextures:f,maxTextureSize:d,maxCubemapSize:p,maxAttributes:m,maxVertexUniforms:_,maxVaryings:g,maxFragmentUniforms:y,vertexTextures:v,floatFragmentTextures:x,floatVertexTextures:M,maxSamples:w}}function sM(s){const e=this;let t=null,n=0,i=!1,r=!1;const a=new Si,o=new ct,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(u,f){const d=u.length!==0||f||n!==0||i;return i=f,n=u.length,d},this.beginShadows=function(){r=!0,h(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(u,f){t=h(u,f,0)},this.setState=function(u,f,d){const p=u.clippingPlanes,m=u.clipIntersection,_=u.clipShadows,g=s.get(u);if(!i||p===null||p.length===0||r&&!_)r?h(null):c();else{const y=r?0:n,v=y*4;let x=g.clippingState||null;l.value=x,x=h(p,f,v,d);for(let M=0;M!==v;++M)x[M]=t[M];g.clippingState=x,this.numIntersection=m?this.numPlanes:0,this.numPlanes+=y}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function h(u,f,d,p){const m=u!==null?u.length:0;let _=null;if(m!==0){if(_=l.value,p!==!0||_===null){const g=d+m*4,y=f.matrixWorldInverse;o.getNormalMatrix(y),(_===null||_.length<g)&&(_=new Float32Array(g));for(let v=0,x=d;v!==m;++v,x+=4)a.copy(u[v]).applyMatrix4(y,o),a.normal.toArray(_,x),_[x+3]=a.constant}l.value=_,l.needsUpdate=!0}return e.numPlanes=m,e.numIntersection=0,_}}function rM(s){let e=new WeakMap;function t(a,o){return o===Or?a.mapping=Di:o===kr&&(a.mapping=Ui),a}function n(a){if(a&&a.isTexture&&a.isRenderTargetTexture===!1){const o=a.mapping;if(o===Or||o===kr)if(e.has(a)){const l=e.get(a).texture;return t(l,a.mapping)}else{const l=a.image;if(l&&l.height>0){const c=new Mm(l.height/2);return c.fromEquirectangularTexture(s,a),e.set(a,c),a.addEventListener("dispose",i),t(c.texture,a.mapping)}else return null}}return a}function i(a){const o=a.target;o.removeEventListener("dispose",i);const l=e.get(o);l!==void 0&&(e.delete(o),l.dispose())}function r(){e=new WeakMap}return{get:n,dispose:r}}class Oi extends Fo{constructor(e=-1,t=1,n=1,i=-1,r=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=r,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,r,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-e,a=n+e,o=i+t,l=i-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=c*this.view.offsetX,a=r+c*this.view.width,o-=h*this.view.offsetY,l=o-h*this.view.height}this.projectionMatrix.makeOrthographic(r,a,o,l,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const qs=4,Nu=[.125,.215,.35,.446,.526,.582],ls=20,Nl=new Oi,Ou=new be;let Ol=null;const os=(1+Math.sqrt(5))/2,ks=1/os,ku=[new E(1,1,1),new E(-1,1,1),new E(1,1,-1),new E(-1,1,-1),new E(0,os,ks),new E(0,os,-ks),new E(ks,0,os),new E(-ks,0,os),new E(os,ks,0),new E(-os,ks,0)];class Fc{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){Ol=this._renderer.getRenderTarget(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(e,n,i,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=zu(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Bu(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Ol),e.scissorTest=!1,Da(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Di||e.mapping===Ui?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Ol=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:Ht,minFilter:Ht,generateMipmaps:!1,type:Sn,format:wn,colorSpace:Fn,depthBuffer:!1},i=Fu(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Fu(e,t,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=aM(r)),this._blurMaterial=oM(r,e,t)}return i}_compileMaterial(e){const t=new Rt(this._lodPlanes[0],e);this._renderer.compile(t,Nl)}_sceneToCubeUV(e,t,n,i){const o=new en(90,1,t,n),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],h=this._renderer,u=h.autoClear,f=h.toneMapping;h.getClearColor(Ou),h.toneMapping=Qn,h.autoClear=!1;const d=new Qt({name:"PMREM.Background",side:pn,depthWrite:!1,depthTest:!1}),p=new Rt(new Wi,d);let m=!1;const _=e.background;_?_.isColor&&(d.color.copy(_),e.background=null,m=!0):(d.color.copy(Ou),m=!0);for(let g=0;g<6;g++){const y=g%3;y===0?(o.up.set(0,l[g],0),o.lookAt(c[g],0,0)):y===1?(o.up.set(0,0,l[g]),o.lookAt(0,c[g],0)):(o.up.set(0,l[g],0),o.lookAt(0,0,c[g]));const v=this._cubeSize;Da(i,y*v,g>2?v:0,v,v),h.setRenderTarget(i),m&&h.render(p,o),h.render(e,o)}p.geometry.dispose(),p.material.dispose(),h.toneMapping=f,h.autoClear=u,e.background=_}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===Di||e.mapping===Ui;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=zu()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Bu());const r=i?this._cubemapMaterial:this._equirectMaterial,a=new Rt(this._lodPlanes[0],r),o=r.uniforms;o.envMap.value=e;const l=this._cubeSize;Da(t,0,0,3*l,2*l),n.setRenderTarget(t),n.render(a,Nl)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const r=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),a=ku[(i-1)%ku.length];this._blur(e,i-1,i,r,a)}t.autoClear=n}_blur(e,t,n,i,r){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,i,"latitudinal",r),this._halfBlur(a,e,n,n,i,"longitudinal",r)}_halfBlur(e,t,n,i,r,a,o){const l=this._renderer,c=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,u=new Rt(this._lodPlanes[i],c),f=c.uniforms,d=this._sizeLods[n]-1,p=isFinite(r)?Math.PI/(2*d):2*Math.PI/(2*ls-1),m=r/p,_=isFinite(r)?1+Math.floor(h*m):ls;_>ls&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${_} samples when the maximum is set to ${ls}`);const g=[];let y=0;for(let T=0;T<ls;++T){const I=T/m,S=Math.exp(-I*I/2);g.push(S),T===0?y+=S:T<_&&(y+=2*S)}for(let T=0;T<g.length;T++)g[T]=g[T]/y;f.envMap.value=e.texture,f.samples.value=_,f.weights.value=g,f.latitudinal.value=a==="latitudinal",o&&(f.poleAxis.value=o);const{_lodMax:v}=this;f.dTheta.value=p,f.mipInt.value=v-n;const x=this._sizeLods[i],M=3*x*(i>v-qs?i-v+qs:0),w=4*(this._cubeSize-x);Da(t,M,w,3*x,2*x),l.setRenderTarget(t),l.render(u,Nl)}}function aM(s){const e=[],t=[],n=[];let i=s;const r=s-qs+1+Nu.length;for(let a=0;a<r;a++){const o=Math.pow(2,i);t.push(o);let l=1/o;a>s-qs?l=Nu[a-s+qs-1]:a===0&&(l=0),n.push(l);const c=1/(o-2),h=-c,u=1+c,f=[h,h,u,h,u,u,h,h,u,u,h,u],d=6,p=6,m=3,_=2,g=1,y=new Float32Array(m*p*d),v=new Float32Array(_*p*d),x=new Float32Array(g*p*d);for(let w=0;w<d;w++){const T=w%3*2/3-1,I=w>2?0:-1,S=[T,I,0,T+2/3,I,0,T+2/3,I+1,0,T,I,0,T+2/3,I+1,0,T,I+1,0];y.set(S,m*p*w),v.set(f,_*p*w);const C=[w,w,w,w,w,w];x.set(C,g*p*w)}const M=new st;M.setAttribute("position",new At(y,m)),M.setAttribute("uv",new At(v,_)),M.setAttribute("faceIndex",new At(x,g)),e.push(M),i>qs&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function Fu(s,e,t){const n=new Yt(s,e,t);return n.texture.mapping=sr,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Da(s,e,t,n,i){s.viewport.set(e,t,n,i),s.scissor.set(e,t,n,i)}function oM(s,e,t){const n=new Float32Array(ls),i=new E(0,1,0);return new tn({name:"SphericalGaussianBlur",defines:{n:ls,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:gh(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Ln,depthTest:!1,depthWrite:!1})}function Bu(){return new tn({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:gh(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Ln,depthTest:!1,depthWrite:!1})}function zu(){return new tn({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:gh(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Ln,depthTest:!1,depthWrite:!1})}function gh(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function lM(s){let e=new WeakMap,t=null;function n(o){if(o&&o.isTexture){const l=o.mapping,c=l===Or||l===kr,h=l===Di||l===Ui;if(c||h)if(o.isRenderTargetTexture&&o.needsPMREMUpdate===!0){o.needsPMREMUpdate=!1;let u=e.get(o);return t===null&&(t=new Fc(s)),u=c?t.fromEquirectangular(o,u):t.fromCubemap(o,u),e.set(o,u),u.texture}else{if(e.has(o))return e.get(o).texture;{const u=o.image;if(c&&u&&u.height>0||h&&u&&i(u)){t===null&&(t=new Fc(s));const f=c?t.fromEquirectangular(o):t.fromCubemap(o);return e.set(o,f),o.addEventListener("dispose",r),f.texture}else return null}}}return o}function i(o){let l=0;const c=6;for(let h=0;h<c;h++)o[h]!==void 0&&l++;return l===c}function r(o){const l=o.target;l.removeEventListener("dispose",r);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function a(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:a}}function cM(s){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=s.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function hM(s,e,t,n){const i={},r=new WeakMap;function a(u){const f=u.target;f.index!==null&&e.remove(f.index);for(const p in f.attributes)e.remove(f.attributes[p]);for(const p in f.morphAttributes){const m=f.morphAttributes[p];for(let _=0,g=m.length;_<g;_++)e.remove(m[_])}f.removeEventListener("dispose",a),delete i[f.id];const d=r.get(f);d&&(e.remove(d),r.delete(f)),n.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,t.memory.geometries--}function o(u,f){return i[f.id]===!0||(f.addEventListener("dispose",a),i[f.id]=!0,t.memory.geometries++),f}function l(u){const f=u.attributes;for(const p in f)e.update(f[p],s.ARRAY_BUFFER);const d=u.morphAttributes;for(const p in d){const m=d[p];for(let _=0,g=m.length;_<g;_++)e.update(m[_],s.ARRAY_BUFFER)}}function c(u){const f=[],d=u.index,p=u.attributes.position;let m=0;if(d!==null){const y=d.array;m=d.version;for(let v=0,x=y.length;v<x;v+=3){const M=y[v+0],w=y[v+1],T=y[v+2];f.push(M,w,w,T,T,M)}}else{const y=p.array;m=p.version;for(let v=0,x=y.length/3-1;v<x;v+=3){const M=v+0,w=v+1,T=v+2;f.push(M,w,w,T,T,M)}}const _=new(_m(f)?Oo:mh)(f,1);_.version=m;const g=r.get(u);g&&e.remove(g),r.set(u,_)}function h(u){const f=r.get(u);if(f){const d=u.index;d!==null&&f.version<d.version&&c(u)}else c(u);return r.get(u)}return{get:o,update:l,getWireframeAttribute:h}}function uM(s,e,t,n){const i=n.isWebGL2;let r;function a(f){r=f}let o,l;function c(f){o=f.type,l=f.bytesPerElement}function h(f,d){s.drawElements(r,d,o,f*l),t.update(d,r,1)}function u(f,d,p){if(p===0)return;let m,_;if(i)m=s,_="drawElementsInstanced";else if(m=e.get("ANGLE_instanced_arrays"),_="drawElementsInstancedANGLE",m===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}m[_](r,d,o,f*l,p),t.update(d,r,p)}this.setMode=a,this.setIndex=c,this.render=h,this.renderInstances=u}function fM(s){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,a,o){switch(t.calls++,a){case s.TRIANGLES:t.triangles+=o*(r/3);break;case s.LINES:t.lines+=o*(r/2);break;case s.LINE_STRIP:t.lines+=o*(r-1);break;case s.LINE_LOOP:t.lines+=o*r;break;case s.POINTS:t.points+=o*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function dM(s,e){return s[0]-e[0]}function pM(s,e){return Math.abs(e[1])-Math.abs(s[1])}function mM(s,e,t){const n={},i=new Float32Array(8),r=new WeakMap,a=new Tt,o=[];for(let c=0;c<8;c++)o[c]=[c,0];function l(c,h,u){const f=c.morphTargetInfluences;if(e.isWebGL2===!0){const d=h.morphAttributes.position||h.morphAttributes.normal||h.morphAttributes.color,p=d!==void 0?d.length:0;let m=r.get(h);if(m===void 0||m.count!==p){let B=function(){X.dispose(),r.delete(h),h.removeEventListener("dispose",B)};m!==void 0&&m.texture.dispose();const y=h.morphAttributes.position!==void 0,v=h.morphAttributes.normal!==void 0,x=h.morphAttributes.color!==void 0,M=h.morphAttributes.position||[],w=h.morphAttributes.normal||[],T=h.morphAttributes.color||[];let I=0;y===!0&&(I=1),v===!0&&(I=2),x===!0&&(I=3);let S=h.attributes.position.count*I,C=1;S>e.maxTextureSize&&(C=Math.ceil(S/e.maxTextureSize),S=e.maxTextureSize);const V=new Float32Array(S*C*4*p),X=new Uo(V,S,C,p);X.type=jn,X.needsUpdate=!0;const F=I*4;for(let N=0;N<p;N++){const Y=M[N],O=w[N],Z=T[N],q=S*C*4*N;for(let Q=0;Q<Y.count;Q++){const H=Q*F;y===!0&&(a.fromBufferAttribute(Y,Q),V[q+H+0]=a.x,V[q+H+1]=a.y,V[q+H+2]=a.z,V[q+H+3]=0),v===!0&&(a.fromBufferAttribute(O,Q),V[q+H+4]=a.x,V[q+H+5]=a.y,V[q+H+6]=a.z,V[q+H+7]=0),x===!0&&(a.fromBufferAttribute(Z,Q),V[q+H+8]=a.x,V[q+H+9]=a.y,V[q+H+10]=a.z,V[q+H+11]=Z.itemSize===4?a.w:1)}}m={count:p,texture:X,size:new ne(S,C)},r.set(h,m),h.addEventListener("dispose",B)}let _=0;for(let y=0;y<f.length;y++)_+=f[y];const g=h.morphTargetsRelative?1:1-_;u.getUniforms().setValue(s,"morphTargetBaseInfluence",g),u.getUniforms().setValue(s,"morphTargetInfluences",f),u.getUniforms().setValue(s,"morphTargetsTexture",m.texture,t),u.getUniforms().setValue(s,"morphTargetsTextureSize",m.size)}else{const d=f===void 0?0:f.length;let p=n[h.id];if(p===void 0||p.length!==d){p=[];for(let v=0;v<d;v++)p[v]=[v,0];n[h.id]=p}for(let v=0;v<d;v++){const x=p[v];x[0]=v,x[1]=f[v]}p.sort(pM);for(let v=0;v<8;v++)v<d&&p[v][1]?(o[v][0]=p[v][0],o[v][1]=p[v][1]):(o[v][0]=Number.MAX_SAFE_INTEGER,o[v][1]=0);o.sort(dM);const m=h.morphAttributes.position,_=h.morphAttributes.normal;let g=0;for(let v=0;v<8;v++){const x=o[v],M=x[0],w=x[1];M!==Number.MAX_SAFE_INTEGER&&w?(m&&h.getAttribute("morphTarget"+v)!==m[M]&&h.setAttribute("morphTarget"+v,m[M]),_&&h.getAttribute("morphNormal"+v)!==_[M]&&h.setAttribute("morphNormal"+v,_[M]),i[v]=w,g+=w):(m&&h.hasAttribute("morphTarget"+v)===!0&&h.deleteAttribute("morphTarget"+v),_&&h.hasAttribute("morphNormal"+v)===!0&&h.deleteAttribute("morphNormal"+v),i[v]=0)}const y=h.morphTargetsRelative?1:1-g;u.getUniforms().setValue(s,"morphTargetBaseInfluence",y),u.getUniforms().setValue(s,"morphTargetInfluences",i)}}return{update:l}}function gM(s,e,t,n){let i=new WeakMap;function r(l){const c=n.render.frame,h=l.geometry,u=e.get(l,h);if(i.get(u)!==c&&(e.update(u),i.set(u,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",o)===!1&&l.addEventListener("dispose",o),i.get(l)!==c&&(t.update(l.instanceMatrix,s.ARRAY_BUFFER),l.instanceColor!==null&&t.update(l.instanceColor,s.ARRAY_BUFFER),i.set(l,c))),l.isSkinnedMesh){const f=l.skeleton;i.get(f)!==c&&(f.update(),i.set(f,c))}return u}function a(){i=new WeakMap}function o(l){const c=l.target;c.removeEventListener("dispose",o),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:r,dispose:a}}const Sm=new Gt,wm=new Uo,Em=new ph,Tm=new sa,Vu=[],Hu=[],Gu=new Float32Array(16),Wu=new Float32Array(9),Xu=new Float32Array(4);function or(s,e,t){const n=s[0];if(n<=0||n>0)return s;const i=e*t;let r=Vu[i];if(r===void 0&&(r=new Float32Array(i),Vu[i]=r),e!==0){n.toArray(r,0);for(let a=1,o=0;a!==e;++a)o+=t,s[a].toArray(r,o)}return r}function qt(s,e){if(s.length!==e.length)return!1;for(let t=0,n=s.length;t<n;t++)if(s[t]!==e[t])return!1;return!0}function Zt(s,e){for(let t=0,n=e.length;t<n;t++)s[t]=e[t]}function zo(s,e){let t=Hu[e];t===void 0&&(t=new Int32Array(e),Hu[e]=t);for(let n=0;n!==e;++n)t[n]=s.allocateTextureUnit();return t}function _M(s,e){const t=this.cache;t[0]!==e&&(s.uniform1f(this.addr,e),t[0]=e)}function vM(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(qt(t,e))return;s.uniform2fv(this.addr,e),Zt(t,e)}}function yM(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(s.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(qt(t,e))return;s.uniform3fv(this.addr,e),Zt(t,e)}}function xM(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(qt(t,e))return;s.uniform4fv(this.addr,e),Zt(t,e)}}function MM(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(qt(t,e))return;s.uniformMatrix2fv(this.addr,!1,e),Zt(t,e)}else{if(qt(t,n))return;Xu.set(n),s.uniformMatrix2fv(this.addr,!1,Xu),Zt(t,n)}}function bM(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(qt(t,e))return;s.uniformMatrix3fv(this.addr,!1,e),Zt(t,e)}else{if(qt(t,n))return;Wu.set(n),s.uniformMatrix3fv(this.addr,!1,Wu),Zt(t,n)}}function SM(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(qt(t,e))return;s.uniformMatrix4fv(this.addr,!1,e),Zt(t,e)}else{if(qt(t,n))return;Gu.set(n),s.uniformMatrix4fv(this.addr,!1,Gu),Zt(t,n)}}function wM(s,e){const t=this.cache;t[0]!==e&&(s.uniform1i(this.addr,e),t[0]=e)}function EM(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(qt(t,e))return;s.uniform2iv(this.addr,e),Zt(t,e)}}function TM(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(qt(t,e))return;s.uniform3iv(this.addr,e),Zt(t,e)}}function AM(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(qt(t,e))return;s.uniform4iv(this.addr,e),Zt(t,e)}}function CM(s,e){const t=this.cache;t[0]!==e&&(s.uniform1ui(this.addr,e),t[0]=e)}function RM(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(qt(t,e))return;s.uniform2uiv(this.addr,e),Zt(t,e)}}function PM(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(qt(t,e))return;s.uniform3uiv(this.addr,e),Zt(t,e)}}function LM(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(qt(t,e))return;s.uniform4uiv(this.addr,e),Zt(t,e)}}function IM(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture2D(e||Sm,i)}function DM(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||Em,i)}function UM(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||Tm,i)}function NM(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||wm,i)}function OM(s){switch(s){case 5126:return _M;case 35664:return vM;case 35665:return yM;case 35666:return xM;case 35674:return MM;case 35675:return bM;case 35676:return SM;case 5124:case 35670:return wM;case 35667:case 35671:return EM;case 35668:case 35672:return TM;case 35669:case 35673:return AM;case 5125:return CM;case 36294:return RM;case 36295:return PM;case 36296:return LM;case 35678:case 36198:case 36298:case 36306:case 35682:return IM;case 35679:case 36299:case 36307:return DM;case 35680:case 36300:case 36308:case 36293:return UM;case 36289:case 36303:case 36311:case 36292:return NM}}function kM(s,e){s.uniform1fv(this.addr,e)}function FM(s,e){const t=or(e,this.size,2);s.uniform2fv(this.addr,t)}function BM(s,e){const t=or(e,this.size,3);s.uniform3fv(this.addr,t)}function zM(s,e){const t=or(e,this.size,4);s.uniform4fv(this.addr,t)}function VM(s,e){const t=or(e,this.size,4);s.uniformMatrix2fv(this.addr,!1,t)}function HM(s,e){const t=or(e,this.size,9);s.uniformMatrix3fv(this.addr,!1,t)}function GM(s,e){const t=or(e,this.size,16);s.uniformMatrix4fv(this.addr,!1,t)}function WM(s,e){s.uniform1iv(this.addr,e)}function XM(s,e){s.uniform2iv(this.addr,e)}function $M(s,e){s.uniform3iv(this.addr,e)}function YM(s,e){s.uniform4iv(this.addr,e)}function qM(s,e){s.uniform1uiv(this.addr,e)}function ZM(s,e){s.uniform2uiv(this.addr,e)}function jM(s,e){s.uniform3uiv(this.addr,e)}function JM(s,e){s.uniform4uiv(this.addr,e)}function KM(s,e,t){const n=this.cache,i=e.length,r=zo(t,i);qt(n,r)||(s.uniform1iv(this.addr,r),Zt(n,r));for(let a=0;a!==i;++a)t.setTexture2D(e[a]||Sm,r[a])}function QM(s,e,t){const n=this.cache,i=e.length,r=zo(t,i);qt(n,r)||(s.uniform1iv(this.addr,r),Zt(n,r));for(let a=0;a!==i;++a)t.setTexture3D(e[a]||Em,r[a])}function eb(s,e,t){const n=this.cache,i=e.length,r=zo(t,i);qt(n,r)||(s.uniform1iv(this.addr,r),Zt(n,r));for(let a=0;a!==i;++a)t.setTextureCube(e[a]||Tm,r[a])}function tb(s,e,t){const n=this.cache,i=e.length,r=zo(t,i);qt(n,r)||(s.uniform1iv(this.addr,r),Zt(n,r));for(let a=0;a!==i;++a)t.setTexture2DArray(e[a]||wm,r[a])}function nb(s){switch(s){case 5126:return kM;case 35664:return FM;case 35665:return BM;case 35666:return zM;case 35674:return VM;case 35675:return HM;case 35676:return GM;case 5124:case 35670:return WM;case 35667:case 35671:return XM;case 35668:case 35672:return $M;case 35669:case 35673:return YM;case 5125:return qM;case 36294:return ZM;case 36295:return jM;case 36296:return JM;case 35678:case 36198:case 36298:case 36306:case 35682:return KM;case 35679:case 36299:case 36307:return QM;case 35680:case 36300:case 36308:case 36293:return eb;case 36289:case 36303:case 36311:case 36292:return tb}}class ib{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=OM(t.type)}}class sb{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=nb(t.type)}}class rb{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let r=0,a=i.length;r!==a;++r){const o=i[r];o.setValue(e,t[o.id],n)}}}const kl=/(\w+)(\])?(\[|\.)?/g;function $u(s,e){s.seq.push(e),s.map[e.id]=e}function ab(s,e,t){const n=s.name,i=n.length;for(kl.lastIndex=0;;){const r=kl.exec(n),a=kl.lastIndex;let o=r[1];const l=r[2]==="]",c=r[3];if(l&&(o=o|0),c===void 0||c==="["&&a+2===i){$u(t,c===void 0?new ib(o,s,e):new sb(o,s,e));break}else{let u=t.map[o];u===void 0&&(u=new rb(o),$u(t,u)),t=u}}}class ho{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const r=e.getActiveUniform(t,i),a=e.getUniformLocation(t,r.name);ab(r,a,this)}}setValue(e,t,n,i){const r=this.map[t];r!==void 0&&r.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let r=0,a=t.length;r!==a;++r){const o=t[r],l=n[o.id];l.needsUpdate!==!1&&o.setValue(e,l.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,r=e.length;i!==r;++i){const a=e[i];a.id in t&&n.push(a)}return n}}function Yu(s,e,t){const n=s.createShader(e);return s.shaderSource(n,t),s.compileShader(n),n}let ob=0;function lb(s,e){const t=s.split(`
`),n=[],i=Math.max(e-6,0),r=Math.min(e+6,t.length);for(let a=i;a<r;a++){const o=a+1;n.push(`${o===e?">":" "} ${o}: ${t[a]}`)}return n.join(`
`)}function cb(s){switch(s){case Fn:return["Linear","( value )"];case at:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",s),["Linear","( value )"]}}function qu(s,e,t){const n=s.getShaderParameter(e,s.COMPILE_STATUS),i=s.getShaderInfoLog(e).trim();if(n&&i==="")return"";const r=/ERROR: 0:(\d+)/.exec(i);if(r){const a=parseInt(r[1]);return t.toUpperCase()+`

`+i+`

`+lb(s.getShaderSource(e),a)}else return i}function hb(s,e){const t=cb(e);return"vec4 "+s+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function ub(s,e){let t;switch(e){case Hp:t="Linear";break;case Gp:t="Reinhard";break;case Wp:t="OptimizedCineon";break;case Xp:t="ACESFilmic";break;case $p:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+s+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function fb(s){return[s.extensionDerivatives||s.envMapCubeUVHeight||s.bumpMap||s.normalMapTangentSpace||s.clearcoatNormalMap||s.flatShading||s.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(s.extensionFragDepth||s.logarithmicDepthBuffer)&&s.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",s.extensionDrawBuffers&&s.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(s.extensionShaderTextureLOD||s.envMap||s.transmission)&&s.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(wr).join(`
`)}function db(s){const e=[];for(const t in s){const n=s[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function pb(s,e){const t={},n=s.getProgramParameter(e,s.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const r=s.getActiveAttrib(e,i),a=r.name;let o=1;r.type===s.FLOAT_MAT2&&(o=2),r.type===s.FLOAT_MAT3&&(o=3),r.type===s.FLOAT_MAT4&&(o=4),t[a]={type:r.type,location:s.getAttribLocation(e,a),locationSize:o}}return t}function wr(s){return s!==""}function Zu(s,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function ju(s,e){return s.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const mb=/^[ \t]*#include +<([\w\d./]+)>/gm;function Bc(s){return s.replace(mb,_b)}const gb=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function _b(s,e){let t=ot[e];if(t===void 0){const n=gb.get(e);if(n!==void 0)t=ot[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return Bc(t)}const vb=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Ju(s){return s.replace(vb,yb)}function yb(s,e,t,n){let i="";for(let r=parseInt(e);r<parseInt(t);r++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return i}function Ku(s){let e="precision "+s.precision+` float;
precision `+s.precision+" int;";return s.precision==="highp"?e+=`
#define HIGH_PRECISION`:s.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function xb(s){let e="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===Kc?e="SHADOWMAP_TYPE_PCF":s.shadowMapType===xp?e="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===$n&&(e="SHADOWMAP_TYPE_VSM"),e}function Mb(s){let e="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case Di:case Ui:e="ENVMAP_TYPE_CUBE";break;case sr:e="ENVMAP_TYPE_CUBE_UV";break}return e}function bb(s){let e="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case Ui:e="ENVMAP_MODE_REFRACTION";break}return e}function Sb(s){let e="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case na:e="ENVMAP_BLENDING_MULTIPLY";break;case zp:e="ENVMAP_BLENDING_MIX";break;case Vp:e="ENVMAP_BLENDING_ADD";break}return e}function wb(s){const e=s.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function Eb(s,e,t,n){const i=s.getContext(),r=t.defines;let a=t.vertexShader,o=t.fragmentShader;const l=xb(t),c=Mb(t),h=bb(t),u=Sb(t),f=wb(t),d=t.isWebGL2?"":fb(t),p=db(r),m=i.createProgram();let _,g,y=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(_=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(wr).join(`
`),_.length>0&&(_+=`
`),g=[d,"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(wr).join(`
`),g.length>0&&(g+=`
`)):(_=[Ku(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(wr).join(`
`),g=[d,Ku(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+h:"",t.envMap?"#define "+u:"",f?"#define CUBEUV_TEXEL_WIDTH "+f.texelWidth:"",f?"#define CUBEUV_TEXEL_HEIGHT "+f.texelHeight:"",f?"#define CUBEUV_MAX_MIP "+f.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Qn?"#define TONE_MAPPING":"",t.toneMapping!==Qn?ot.tonemapping_pars_fragment:"",t.toneMapping!==Qn?ub("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",ot.colorspace_pars_fragment,hb("linearToOutputTexel",t.outputColorSpace),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(wr).join(`
`)),a=Bc(a),a=Zu(a,t),a=ju(a,t),o=Bc(o),o=Zu(o,t),o=ju(o,t),a=Ju(a),o=Ju(o),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(y=`#version 300 es
`,_=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+_,g=["#define varying in",t.glslVersion===Oc?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Oc?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+g);const v=y+_+a,x=y+g+o,M=Yu(i,i.VERTEX_SHADER,v),w=Yu(i,i.FRAGMENT_SHADER,x);if(i.attachShader(m,M),i.attachShader(m,w),t.index0AttributeName!==void 0?i.bindAttribLocation(m,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(m,0,"position"),i.linkProgram(m),s.debug.checkShaderErrors){const S=i.getProgramInfoLog(m).trim(),C=i.getShaderInfoLog(M).trim(),V=i.getShaderInfoLog(w).trim();let X=!0,F=!0;if(i.getProgramParameter(m,i.LINK_STATUS)===!1)if(X=!1,typeof s.debug.onShaderError=="function")s.debug.onShaderError(i,m,M,w);else{const B=qu(i,M,"vertex"),N=qu(i,w,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(m,i.VALIDATE_STATUS)+`

Program Info Log: `+S+`
`+B+`
`+N)}else S!==""?console.warn("THREE.WebGLProgram: Program Info Log:",S):(C===""||V==="")&&(F=!1);F&&(this.diagnostics={runnable:X,programLog:S,vertexShader:{log:C,prefix:_},fragmentShader:{log:V,prefix:g}})}i.deleteShader(M),i.deleteShader(w);let T;this.getUniforms=function(){return T===void 0&&(T=new ho(i,m)),T};let I;return this.getAttributes=function(){return I===void 0&&(I=pb(i,m)),I},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(m),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=ob++,this.cacheKey=e,this.usedTimes=1,this.program=m,this.vertexShader=M,this.fragmentShader=w,this}let Tb=0;class Ab{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),r=this._getShaderStage(n),a=this._getShaderCacheForMaterial(e);return a.has(i)===!1&&(a.add(i),i.usedTimes++),a.has(r)===!1&&(a.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new Cb(e),t.set(e,n)),n}}class Cb{constructor(e){this.id=Tb++,this.code=e,this.usedTimes=0}}function Rb(s,e,t,n,i,r,a){const o=new No,l=new Ab,c=[],h=i.isWebGL2,u=i.logarithmicDepthBuffer,f=i.vertexTextures;let d=i.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function m(S){return S===0?"uv":`uv${S}`}function _(S,C,V,X,F){const B=X.fog,N=F.geometry,Y=S.isMeshStandardMaterial?X.environment:null,O=(S.isMeshStandardMaterial?t:e).get(S.envMap||Y),Z=O&&O.mapping===sr?O.image.height:null,q=p[S.type];S.precision!==null&&(d=i.getMaxPrecision(S.precision),d!==S.precision&&console.warn("THREE.WebGLProgram.getParameters:",S.precision,"not supported, using",d,"instead."));const Q=N.morphAttributes.position||N.morphAttributes.normal||N.morphAttributes.color,H=Q!==void 0?Q.length:0;let ee=0;N.morphAttributes.position!==void 0&&(ee=1),N.morphAttributes.normal!==void 0&&(ee=2),N.morphAttributes.color!==void 0&&(ee=3);let _e,ge,Se,Fe;if(q){const Wn=On[q];_e=Wn.vertexShader,ge=Wn.fragmentShader}else _e=S.vertexShader,ge=S.fragmentShader,l.update(S),Se=l.getVertexShaderID(S),Fe=l.getFragmentShaderID(S);const $e=s.getRenderTarget(),Xe=F.isInstancedMesh===!0,ut=!!S.map,gt=!!S.matcap,je=!!O,U=!!S.aoMap,ve=!!S.lightMap,le=!!S.bumpMap,fe=!!S.normalMap,se=!!S.displacementMap,Ye=!!S.emissiveMap,De=!!S.metalnessMap,ye=!!S.roughnessMap,xe=S.anisotropy>0,Be=S.clearcoat>0,dt=S.iridescence>0,L=S.sheen>0,A=S.transmission>0,ie=xe&&!!S.anisotropyMap,me=Be&&!!S.clearcoatMap,pe=Be&&!!S.clearcoatNormalMap,D=Be&&!!S.clearcoatRoughnessMap,ue=dt&&!!S.iridescenceMap,de=dt&&!!S.iridescenceThicknessMap,J=L&&!!S.sheenColorMap,ke=L&&!!S.sheenRoughnessMap,qe=!!S.specularMap,Ve=!!S.specularColorMap,ze=!!S.specularIntensityMap,He=A&&!!S.transmissionMap,et=A&&!!S.thicknessMap,pt=!!S.gradientMap,z=!!S.alphaMap,Ee=S.alphaTest>0,te=!!S.alphaHash,Me=!!S.extensions,Pe=!!N.attributes.uv1,xt=!!N.attributes.uv2,It=!!N.attributes.uv3;return{isWebGL2:h,shaderID:q,shaderType:S.type,shaderName:S.name,vertexShader:_e,fragmentShader:ge,defines:S.defines,customVertexShaderID:Se,customFragmentShaderID:Fe,isRawShaderMaterial:S.isRawShaderMaterial===!0,glslVersion:S.glslVersion,precision:d,instancing:Xe,instancingColor:Xe&&F.instanceColor!==null,supportsVertexTextures:f,outputColorSpace:$e===null?s.outputColorSpace:$e.isXRRenderTarget===!0?$e.texture.colorSpace:Fn,map:ut,matcap:gt,envMap:je,envMapMode:je&&O.mapping,envMapCubeUVHeight:Z,aoMap:U,lightMap:ve,bumpMap:le,normalMap:fe,displacementMap:f&&se,emissiveMap:Ye,normalMapObjectSpace:fe&&S.normalMapType===am,normalMapTangentSpace:fe&&S.normalMapType===Gi,metalnessMap:De,roughnessMap:ye,anisotropy:xe,anisotropyMap:ie,clearcoat:Be,clearcoatMap:me,clearcoatNormalMap:pe,clearcoatRoughnessMap:D,iridescence:dt,iridescenceMap:ue,iridescenceThicknessMap:de,sheen:L,sheenColorMap:J,sheenRoughnessMap:ke,specularMap:qe,specularColorMap:Ve,specularIntensityMap:ze,transmission:A,transmissionMap:He,thicknessMap:et,gradientMap:pt,opaque:S.transparent===!1&&S.blending===ds,alphaMap:z,alphaTest:Ee,alphaHash:te,combine:S.combine,mapUv:ut&&m(S.map.channel),aoMapUv:U&&m(S.aoMap.channel),lightMapUv:ve&&m(S.lightMap.channel),bumpMapUv:le&&m(S.bumpMap.channel),normalMapUv:fe&&m(S.normalMap.channel),displacementMapUv:se&&m(S.displacementMap.channel),emissiveMapUv:Ye&&m(S.emissiveMap.channel),metalnessMapUv:De&&m(S.metalnessMap.channel),roughnessMapUv:ye&&m(S.roughnessMap.channel),anisotropyMapUv:ie&&m(S.anisotropyMap.channel),clearcoatMapUv:me&&m(S.clearcoatMap.channel),clearcoatNormalMapUv:pe&&m(S.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:D&&m(S.clearcoatRoughnessMap.channel),iridescenceMapUv:ue&&m(S.iridescenceMap.channel),iridescenceThicknessMapUv:de&&m(S.iridescenceThicknessMap.channel),sheenColorMapUv:J&&m(S.sheenColorMap.channel),sheenRoughnessMapUv:ke&&m(S.sheenRoughnessMap.channel),specularMapUv:qe&&m(S.specularMap.channel),specularColorMapUv:Ve&&m(S.specularColorMap.channel),specularIntensityMapUv:ze&&m(S.specularIntensityMap.channel),transmissionMapUv:He&&m(S.transmissionMap.channel),thicknessMapUv:et&&m(S.thicknessMap.channel),alphaMapUv:z&&m(S.alphaMap.channel),vertexTangents:!!N.attributes.tangent&&(fe||xe),vertexColors:S.vertexColors,vertexAlphas:S.vertexColors===!0&&!!N.attributes.color&&N.attributes.color.itemSize===4,vertexUv1s:Pe,vertexUv2s:xt,vertexUv3s:It,pointsUvs:F.isPoints===!0&&!!N.attributes.uv&&(ut||z),fog:!!B,useFog:S.fog===!0,fogExp2:B&&B.isFogExp2,flatShading:S.flatShading===!0,sizeAttenuation:S.sizeAttenuation===!0,logarithmicDepthBuffer:u,skinning:F.isSkinnedMesh===!0,morphTargets:N.morphAttributes.position!==void 0,morphNormals:N.morphAttributes.normal!==void 0,morphColors:N.morphAttributes.color!==void 0,morphTargetsCount:H,morphTextureStride:ee,numDirLights:C.directional.length,numPointLights:C.point.length,numSpotLights:C.spot.length,numSpotLightMaps:C.spotLightMap.length,numRectAreaLights:C.rectArea.length,numHemiLights:C.hemi.length,numDirLightShadows:C.directionalShadowMap.length,numPointLightShadows:C.pointShadowMap.length,numSpotLightShadows:C.spotShadowMap.length,numSpotLightShadowsWithMaps:C.numSpotLightShadowsWithMaps,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:S.dithering,shadowMapEnabled:s.shadowMap.enabled&&V.length>0,shadowMapType:s.shadowMap.type,toneMapping:S.toneMapped?s.toneMapping:Qn,useLegacyLights:s.useLegacyLights,premultipliedAlpha:S.premultipliedAlpha,doubleSided:S.side===vn,flipSided:S.side===pn,useDepthPacking:S.depthPacking>=0,depthPacking:S.depthPacking||0,index0AttributeName:S.index0AttributeName,extensionDerivatives:Me&&S.extensions.derivatives===!0,extensionFragDepth:Me&&S.extensions.fragDepth===!0,extensionDrawBuffers:Me&&S.extensions.drawBuffers===!0,extensionShaderTextureLOD:Me&&S.extensions.shaderTextureLOD===!0,rendererExtensionFragDepth:h||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:h||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:h||n.has("EXT_shader_texture_lod"),customProgramCacheKey:S.customProgramCacheKey()}}function g(S){const C=[];if(S.shaderID?C.push(S.shaderID):(C.push(S.customVertexShaderID),C.push(S.customFragmentShaderID)),S.defines!==void 0)for(const V in S.defines)C.push(V),C.push(S.defines[V]);return S.isRawShaderMaterial===!1&&(y(C,S),v(C,S),C.push(s.outputColorSpace)),C.push(S.customProgramCacheKey),C.join()}function y(S,C){S.push(C.precision),S.push(C.outputColorSpace),S.push(C.envMapMode),S.push(C.envMapCubeUVHeight),S.push(C.mapUv),S.push(C.alphaMapUv),S.push(C.lightMapUv),S.push(C.aoMapUv),S.push(C.bumpMapUv),S.push(C.normalMapUv),S.push(C.displacementMapUv),S.push(C.emissiveMapUv),S.push(C.metalnessMapUv),S.push(C.roughnessMapUv),S.push(C.anisotropyMapUv),S.push(C.clearcoatMapUv),S.push(C.clearcoatNormalMapUv),S.push(C.clearcoatRoughnessMapUv),S.push(C.iridescenceMapUv),S.push(C.iridescenceThicknessMapUv),S.push(C.sheenColorMapUv),S.push(C.sheenRoughnessMapUv),S.push(C.specularMapUv),S.push(C.specularColorMapUv),S.push(C.specularIntensityMapUv),S.push(C.transmissionMapUv),S.push(C.thicknessMapUv),S.push(C.combine),S.push(C.fogExp2),S.push(C.sizeAttenuation),S.push(C.morphTargetsCount),S.push(C.morphAttributeCount),S.push(C.numDirLights),S.push(C.numPointLights),S.push(C.numSpotLights),S.push(C.numSpotLightMaps),S.push(C.numHemiLights),S.push(C.numRectAreaLights),S.push(C.numDirLightShadows),S.push(C.numPointLightShadows),S.push(C.numSpotLightShadows),S.push(C.numSpotLightShadowsWithMaps),S.push(C.shadowMapType),S.push(C.toneMapping),S.push(C.numClippingPlanes),S.push(C.numClipIntersection),S.push(C.depthPacking)}function v(S,C){o.disableAll(),C.isWebGL2&&o.enable(0),C.supportsVertexTextures&&o.enable(1),C.instancing&&o.enable(2),C.instancingColor&&o.enable(3),C.matcap&&o.enable(4),C.envMap&&o.enable(5),C.normalMapObjectSpace&&o.enable(6),C.normalMapTangentSpace&&o.enable(7),C.clearcoat&&o.enable(8),C.iridescence&&o.enable(9),C.alphaTest&&o.enable(10),C.vertexColors&&o.enable(11),C.vertexAlphas&&o.enable(12),C.vertexUv1s&&o.enable(13),C.vertexUv2s&&o.enable(14),C.vertexUv3s&&o.enable(15),C.vertexTangents&&o.enable(16),C.anisotropy&&o.enable(17),S.push(o.mask),o.disableAll(),C.fog&&o.enable(0),C.useFog&&o.enable(1),C.flatShading&&o.enable(2),C.logarithmicDepthBuffer&&o.enable(3),C.skinning&&o.enable(4),C.morphTargets&&o.enable(5),C.morphNormals&&o.enable(6),C.morphColors&&o.enable(7),C.premultipliedAlpha&&o.enable(8),C.shadowMapEnabled&&o.enable(9),C.useLegacyLights&&o.enable(10),C.doubleSided&&o.enable(11),C.flipSided&&o.enable(12),C.useDepthPacking&&o.enable(13),C.dithering&&o.enable(14),C.transmission&&o.enable(15),C.sheen&&o.enable(16),C.opaque&&o.enable(17),C.pointsUvs&&o.enable(18),S.push(o.mask)}function x(S){const C=p[S.type];let V;if(C){const X=On[C];V=ko.clone(X.uniforms)}else V=S.uniforms;return V}function M(S,C){let V;for(let X=0,F=c.length;X<F;X++){const B=c[X];if(B.cacheKey===C){V=B,++V.usedTimes;break}}return V===void 0&&(V=new Eb(s,C,S,r),c.push(V)),V}function w(S){if(--S.usedTimes===0){const C=c.indexOf(S);c[C]=c[c.length-1],c.pop(),S.destroy()}}function T(S){l.remove(S)}function I(){l.dispose()}return{getParameters:_,getProgramCacheKey:g,getUniforms:x,acquireProgram:M,releaseProgram:w,releaseShaderCache:T,programs:c,dispose:I}}function Pb(){let s=new WeakMap;function e(r){let a=s.get(r);return a===void 0&&(a={},s.set(r,a)),a}function t(r){s.delete(r)}function n(r,a,o){s.get(r)[a]=o}function i(){s=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function Lb(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.material.id!==e.material.id?s.material.id-e.material.id:s.z!==e.z?s.z-e.z:s.id-e.id}function Qu(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.z!==e.z?e.z-s.z:s.id-e.id}function ef(){const s=[];let e=0;const t=[],n=[],i=[];function r(){e=0,t.length=0,n.length=0,i.length=0}function a(u,f,d,p,m,_){let g=s[e];return g===void 0?(g={id:u.id,object:u,geometry:f,material:d,groupOrder:p,renderOrder:u.renderOrder,z:m,group:_},s[e]=g):(g.id=u.id,g.object=u,g.geometry=f,g.material=d,g.groupOrder=p,g.renderOrder=u.renderOrder,g.z=m,g.group=_),e++,g}function o(u,f,d,p,m,_){const g=a(u,f,d,p,m,_);d.transmission>0?n.push(g):d.transparent===!0?i.push(g):t.push(g)}function l(u,f,d,p,m,_){const g=a(u,f,d,p,m,_);d.transmission>0?n.unshift(g):d.transparent===!0?i.unshift(g):t.unshift(g)}function c(u,f){t.length>1&&t.sort(u||Lb),n.length>1&&n.sort(f||Qu),i.length>1&&i.sort(f||Qu)}function h(){for(let u=e,f=s.length;u<f;u++){const d=s[u];if(d.id===null)break;d.id=null,d.object=null,d.geometry=null,d.material=null,d.group=null}}return{opaque:t,transmissive:n,transparent:i,init:r,push:o,unshift:l,finish:h,sort:c}}function Ib(){let s=new WeakMap;function e(n,i){const r=s.get(n);let a;return r===void 0?(a=new ef,s.set(n,[a])):i>=r.length?(a=new ef,r.push(a)):a=r[i],a}function t(){s=new WeakMap}return{get:e,dispose:t}}function Db(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new E,color:new be};break;case"SpotLight":t={position:new E,direction:new E,color:new be,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new E,color:new be,distance:0,decay:0};break;case"HemisphereLight":t={direction:new E,skyColor:new be,groundColor:new be};break;case"RectAreaLight":t={color:new be,position:new E,halfWidth:new E,halfHeight:new E};break}return s[e.id]=t,t}}}function Ub(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ne};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ne};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ne,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[e.id]=t,t}}}let Nb=0;function Ob(s,e){return(e.castShadow?2:0)-(s.castShadow?2:0)+(e.map?1:0)-(s.map?1:0)}function kb(s,e){const t=new Db,n=Ub(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let h=0;h<9;h++)i.probe.push(new E);const r=new E,a=new nt,o=new nt;function l(h,u){let f=0,d=0,p=0;for(let V=0;V<9;V++)i.probe[V].set(0,0,0);let m=0,_=0,g=0,y=0,v=0,x=0,M=0,w=0,T=0,I=0;h.sort(Ob);const S=u===!0?Math.PI:1;for(let V=0,X=h.length;V<X;V++){const F=h[V],B=F.color,N=F.intensity,Y=F.distance,O=F.shadow&&F.shadow.map?F.shadow.map.texture:null;if(F.isAmbientLight)f+=B.r*N*S,d+=B.g*N*S,p+=B.b*N*S;else if(F.isLightProbe)for(let Z=0;Z<9;Z++)i.probe[Z].addScaledVector(F.sh.coefficients[Z],N);else if(F.isDirectionalLight){const Z=t.get(F);if(Z.color.copy(F.color).multiplyScalar(F.intensity*S),F.castShadow){const q=F.shadow,Q=n.get(F);Q.shadowBias=q.bias,Q.shadowNormalBias=q.normalBias,Q.shadowRadius=q.radius,Q.shadowMapSize=q.mapSize,i.directionalShadow[m]=Q,i.directionalShadowMap[m]=O,i.directionalShadowMatrix[m]=F.shadow.matrix,x++}i.directional[m]=Z,m++}else if(F.isSpotLight){const Z=t.get(F);Z.position.setFromMatrixPosition(F.matrixWorld),Z.color.copy(B).multiplyScalar(N*S),Z.distance=Y,Z.coneCos=Math.cos(F.angle),Z.penumbraCos=Math.cos(F.angle*(1-F.penumbra)),Z.decay=F.decay,i.spot[g]=Z;const q=F.shadow;if(F.map&&(i.spotLightMap[T]=F.map,T++,q.updateMatrices(F),F.castShadow&&I++),i.spotLightMatrix[g]=q.matrix,F.castShadow){const Q=n.get(F);Q.shadowBias=q.bias,Q.shadowNormalBias=q.normalBias,Q.shadowRadius=q.radius,Q.shadowMapSize=q.mapSize,i.spotShadow[g]=Q,i.spotShadowMap[g]=O,w++}g++}else if(F.isRectAreaLight){const Z=t.get(F);Z.color.copy(B).multiplyScalar(N),Z.halfWidth.set(F.width*.5,0,0),Z.halfHeight.set(0,F.height*.5,0),i.rectArea[y]=Z,y++}else if(F.isPointLight){const Z=t.get(F);if(Z.color.copy(F.color).multiplyScalar(F.intensity*S),Z.distance=F.distance,Z.decay=F.decay,F.castShadow){const q=F.shadow,Q=n.get(F);Q.shadowBias=q.bias,Q.shadowNormalBias=q.normalBias,Q.shadowRadius=q.radius,Q.shadowMapSize=q.mapSize,Q.shadowCameraNear=q.camera.near,Q.shadowCameraFar=q.camera.far,i.pointShadow[_]=Q,i.pointShadowMap[_]=O,i.pointShadowMatrix[_]=F.shadow.matrix,M++}i.point[_]=Z,_++}else if(F.isHemisphereLight){const Z=t.get(F);Z.skyColor.copy(F.color).multiplyScalar(N*S),Z.groundColor.copy(F.groundColor).multiplyScalar(N*S),i.hemi[v]=Z,v++}}y>0&&(e.isWebGL2||s.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=we.LTC_FLOAT_1,i.rectAreaLTC2=we.LTC_FLOAT_2):s.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=we.LTC_HALF_1,i.rectAreaLTC2=we.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=f,i.ambient[1]=d,i.ambient[2]=p;const C=i.hash;(C.directionalLength!==m||C.pointLength!==_||C.spotLength!==g||C.rectAreaLength!==y||C.hemiLength!==v||C.numDirectionalShadows!==x||C.numPointShadows!==M||C.numSpotShadows!==w||C.numSpotMaps!==T)&&(i.directional.length=m,i.spot.length=g,i.rectArea.length=y,i.point.length=_,i.hemi.length=v,i.directionalShadow.length=x,i.directionalShadowMap.length=x,i.pointShadow.length=M,i.pointShadowMap.length=M,i.spotShadow.length=w,i.spotShadowMap.length=w,i.directionalShadowMatrix.length=x,i.pointShadowMatrix.length=M,i.spotLightMatrix.length=w+T-I,i.spotLightMap.length=T,i.numSpotLightShadowsWithMaps=I,C.directionalLength=m,C.pointLength=_,C.spotLength=g,C.rectAreaLength=y,C.hemiLength=v,C.numDirectionalShadows=x,C.numPointShadows=M,C.numSpotShadows=w,C.numSpotMaps=T,i.version=Nb++)}function c(h,u){let f=0,d=0,p=0,m=0,_=0;const g=u.matrixWorldInverse;for(let y=0,v=h.length;y<v;y++){const x=h[y];if(x.isDirectionalLight){const M=i.directional[f];M.direction.setFromMatrixPosition(x.matrixWorld),r.setFromMatrixPosition(x.target.matrixWorld),M.direction.sub(r),M.direction.transformDirection(g),f++}else if(x.isSpotLight){const M=i.spot[p];M.position.setFromMatrixPosition(x.matrixWorld),M.position.applyMatrix4(g),M.direction.setFromMatrixPosition(x.matrixWorld),r.setFromMatrixPosition(x.target.matrixWorld),M.direction.sub(r),M.direction.transformDirection(g),p++}else if(x.isRectAreaLight){const M=i.rectArea[m];M.position.setFromMatrixPosition(x.matrixWorld),M.position.applyMatrix4(g),o.identity(),a.copy(x.matrixWorld),a.premultiply(g),o.extractRotation(a),M.halfWidth.set(x.width*.5,0,0),M.halfHeight.set(0,x.height*.5,0),M.halfWidth.applyMatrix4(o),M.halfHeight.applyMatrix4(o),m++}else if(x.isPointLight){const M=i.point[d];M.position.setFromMatrixPosition(x.matrixWorld),M.position.applyMatrix4(g),d++}else if(x.isHemisphereLight){const M=i.hemi[_];M.direction.setFromMatrixPosition(x.matrixWorld),M.direction.transformDirection(g),_++}}}return{setup:l,setupView:c,state:i}}function tf(s,e){const t=new kb(s,e),n=[],i=[];function r(){n.length=0,i.length=0}function a(u){n.push(u)}function o(u){i.push(u)}function l(u){t.setup(n,u)}function c(u){t.setupView(n,u)}return{init:r,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:l,setupLightsView:c,pushLight:a,pushShadow:o}}function Fb(s,e){let t=new WeakMap;function n(r,a=0){const o=t.get(r);let l;return o===void 0?(l=new tf(s,e),t.set(r,[l])):a>=o.length?(l=new tf(s,e),o.push(l)):l=o[a],l}function i(){t=new WeakMap}return{get:n,dispose:i}}class Vo extends ln{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=rm,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class _h extends ln{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const Bb=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,zb=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function Vb(s,e,t){let n=new Bo;const i=new ne,r=new ne,a=new Tt,o=new Vo({depthPacking:hh}),l=new _h,c={},h=t.maxTextureSize,u={[mi]:pn,[pn]:mi,[vn]:vn},f=new tn({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ne},radius:{value:4}},vertexShader:Bb,fragmentShader:zb}),d=f.clone();d.defines.HORIZONTAL_PASS=1;const p=new st;p.setAttribute("position",new At(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const m=new Rt(p,f),_=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Kc;let g=this.type;this.render=function(M,w,T){if(_.enabled===!1||_.autoUpdate===!1&&_.needsUpdate===!1||M.length===0)return;const I=s.getRenderTarget(),S=s.getActiveCubeFace(),C=s.getActiveMipmapLevel(),V=s.state;V.setBlending(Ln),V.buffers.color.setClear(1,1,1,1),V.buffers.depth.setTest(!0),V.setScissorTest(!1);const X=g!==$n&&this.type===$n,F=g===$n&&this.type!==$n;for(let B=0,N=M.length;B<N;B++){const Y=M[B],O=Y.shadow;if(O===void 0){console.warn("THREE.WebGLShadowMap:",Y,"has no shadow.");continue}if(O.autoUpdate===!1&&O.needsUpdate===!1)continue;i.copy(O.mapSize);const Z=O.getFrameExtents();if(i.multiply(Z),r.copy(O.mapSize),(i.x>h||i.y>h)&&(i.x>h&&(r.x=Math.floor(h/Z.x),i.x=r.x*Z.x,O.mapSize.x=r.x),i.y>h&&(r.y=Math.floor(h/Z.y),i.y=r.y*Z.y,O.mapSize.y=r.y)),O.map===null||X===!0||F===!0){const Q=this.type!==$n?{minFilter:Vt,magFilter:Vt}:{};O.map!==null&&O.map.dispose(),O.map=new Yt(i.x,i.y,Q),O.map.texture.name=Y.name+".shadowMap",O.camera.updateProjectionMatrix()}s.setRenderTarget(O.map),s.clear();const q=O.getViewportCount();for(let Q=0;Q<q;Q++){const H=O.getViewport(Q);a.set(r.x*H.x,r.y*H.y,r.x*H.z,r.y*H.w),V.viewport(a),O.updateMatrices(Y,Q),n=O.getFrustum(),x(w,T,O.camera,Y,this.type)}O.isPointLightShadow!==!0&&this.type===$n&&y(O,T),O.needsUpdate=!1}g=this.type,_.needsUpdate=!1,s.setRenderTarget(I,S,C)};function y(M,w){const T=e.update(m);f.defines.VSM_SAMPLES!==M.blurSamples&&(f.defines.VSM_SAMPLES=M.blurSamples,d.defines.VSM_SAMPLES=M.blurSamples,f.needsUpdate=!0,d.needsUpdate=!0),M.mapPass===null&&(M.mapPass=new Yt(i.x,i.y)),f.uniforms.shadow_pass.value=M.map.texture,f.uniforms.resolution.value=M.mapSize,f.uniforms.radius.value=M.radius,s.setRenderTarget(M.mapPass),s.clear(),s.renderBufferDirect(w,null,T,f,m,null),d.uniforms.shadow_pass.value=M.mapPass.texture,d.uniforms.resolution.value=M.mapSize,d.uniforms.radius.value=M.radius,s.setRenderTarget(M.map),s.clear(),s.renderBufferDirect(w,null,T,d,m,null)}function v(M,w,T,I){let S=null;const C=T.isPointLight===!0?M.customDistanceMaterial:M.customDepthMaterial;if(C!==void 0)S=C;else if(S=T.isPointLight===!0?l:o,s.localClippingEnabled&&w.clipShadows===!0&&Array.isArray(w.clippingPlanes)&&w.clippingPlanes.length!==0||w.displacementMap&&w.displacementScale!==0||w.alphaMap&&w.alphaTest>0||w.map&&w.alphaTest>0){const V=S.uuid,X=w.uuid;let F=c[V];F===void 0&&(F={},c[V]=F);let B=F[X];B===void 0&&(B=S.clone(),F[X]=B),S=B}if(S.visible=w.visible,S.wireframe=w.wireframe,I===$n?S.side=w.shadowSide!==null?w.shadowSide:w.side:S.side=w.shadowSide!==null?w.shadowSide:u[w.side],S.alphaMap=w.alphaMap,S.alphaTest=w.alphaTest,S.map=w.map,S.clipShadows=w.clipShadows,S.clippingPlanes=w.clippingPlanes,S.clipIntersection=w.clipIntersection,S.displacementMap=w.displacementMap,S.displacementScale=w.displacementScale,S.displacementBias=w.displacementBias,S.wireframeLinewidth=w.wireframeLinewidth,S.linewidth=w.linewidth,T.isPointLight===!0&&S.isMeshDistanceMaterial===!0){const V=s.properties.get(S);V.light=T}return S}function x(M,w,T,I,S){if(M.visible===!1)return;if(M.layers.test(w.layers)&&(M.isMesh||M.isLine||M.isPoints)&&(M.castShadow||M.receiveShadow&&S===$n)&&(!M.frustumCulled||n.intersectsObject(M))){M.modelViewMatrix.multiplyMatrices(T.matrixWorldInverse,M.matrixWorld);const X=e.update(M),F=M.material;if(Array.isArray(F)){const B=X.groups;for(let N=0,Y=B.length;N<Y;N++){const O=B[N],Z=F[O.materialIndex];if(Z&&Z.visible){const q=v(M,Z,I,S);s.renderBufferDirect(T,null,X,q,M,O)}}}else if(F.visible){const B=v(M,F,I,S);s.renderBufferDirect(T,null,X,B,M,null)}}const V=M.children;for(let X=0,F=V.length;X<F;X++)x(V[X],w,T,I,S)}}function Hb(s,e,t){const n=t.isWebGL2;function i(){let z=!1;const Ee=new Tt;let te=null;const Me=new Tt(0,0,0,0);return{setMask:function(Pe){te!==Pe&&!z&&(s.colorMask(Pe,Pe,Pe,Pe),te=Pe)},setLocked:function(Pe){z=Pe},setClear:function(Pe,xt,It,jt,Wn){Wn===!0&&(Pe*=jt,xt*=jt,It*=jt),Ee.set(Pe,xt,It,jt),Me.equals(Ee)===!1&&(s.clearColor(Pe,xt,It,jt),Me.copy(Ee))},reset:function(){z=!1,te=null,Me.set(-1,0,0,0)}}}function r(){let z=!1,Ee=null,te=null,Me=null;return{setTest:function(Pe){Pe?$e(s.DEPTH_TEST):Xe(s.DEPTH_TEST)},setMask:function(Pe){Ee!==Pe&&!z&&(s.depthMask(Pe),Ee=Pe)},setFunc:function(Pe){if(te!==Pe){switch(Pe){case Dp:s.depthFunc(s.NEVER);break;case Up:s.depthFunc(s.ALWAYS);break;case Np:s.depthFunc(s.LESS);break;case xo:s.depthFunc(s.LEQUAL);break;case Op:s.depthFunc(s.EQUAL);break;case kp:s.depthFunc(s.GEQUAL);break;case Fp:s.depthFunc(s.GREATER);break;case Bp:s.depthFunc(s.NOTEQUAL);break;default:s.depthFunc(s.LEQUAL)}te=Pe}},setLocked:function(Pe){z=Pe},setClear:function(Pe){Me!==Pe&&(s.clearDepth(Pe),Me=Pe)},reset:function(){z=!1,Ee=null,te=null,Me=null}}}function a(){let z=!1,Ee=null,te=null,Me=null,Pe=null,xt=null,It=null,jt=null,Wn=null;return{setTest:function(Nt){z||(Nt?$e(s.STENCIL_TEST):Xe(s.STENCIL_TEST))},setMask:function(Nt){Ee!==Nt&&!z&&(s.stencilMask(Nt),Ee=Nt)},setFunc:function(Nt,Xn,hn){(te!==Nt||Me!==Xn||Pe!==hn)&&(s.stencilFunc(Nt,Xn,hn),te=Nt,Me=Xn,Pe=hn)},setOp:function(Nt,Xn,hn){(xt!==Nt||It!==Xn||jt!==hn)&&(s.stencilOp(Nt,Xn,hn),xt=Nt,It=Xn,jt=hn)},setLocked:function(Nt){z=Nt},setClear:function(Nt){Wn!==Nt&&(s.clearStencil(Nt),Wn=Nt)},reset:function(){z=!1,Ee=null,te=null,Me=null,Pe=null,xt=null,It=null,jt=null,Wn=null}}}const o=new i,l=new r,c=new a,h=new WeakMap,u=new WeakMap;let f={},d={},p=new WeakMap,m=[],_=null,g=!1,y=null,v=null,x=null,M=null,w=null,T=null,I=null,S=!1,C=null,V=null,X=null,F=null,B=null;const N=s.getParameter(s.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let Y=!1,O=0;const Z=s.getParameter(s.VERSION);Z.indexOf("WebGL")!==-1?(O=parseFloat(/^WebGL (\d)/.exec(Z)[1]),Y=O>=1):Z.indexOf("OpenGL ES")!==-1&&(O=parseFloat(/^OpenGL ES (\d)/.exec(Z)[1]),Y=O>=2);let q=null,Q={};const H=s.getParameter(s.SCISSOR_BOX),ee=s.getParameter(s.VIEWPORT),_e=new Tt().fromArray(H),ge=new Tt().fromArray(ee);function Se(z,Ee,te,Me){const Pe=new Uint8Array(4),xt=s.createTexture();s.bindTexture(z,xt),s.texParameteri(z,s.TEXTURE_MIN_FILTER,s.NEAREST),s.texParameteri(z,s.TEXTURE_MAG_FILTER,s.NEAREST);for(let It=0;It<te;It++)n&&(z===s.TEXTURE_3D||z===s.TEXTURE_2D_ARRAY)?s.texImage3D(Ee,0,s.RGBA,1,1,Me,0,s.RGBA,s.UNSIGNED_BYTE,Pe):s.texImage2D(Ee+It,0,s.RGBA,1,1,0,s.RGBA,s.UNSIGNED_BYTE,Pe);return xt}const Fe={};Fe[s.TEXTURE_2D]=Se(s.TEXTURE_2D,s.TEXTURE_2D,1),Fe[s.TEXTURE_CUBE_MAP]=Se(s.TEXTURE_CUBE_MAP,s.TEXTURE_CUBE_MAP_POSITIVE_X,6),n&&(Fe[s.TEXTURE_2D_ARRAY]=Se(s.TEXTURE_2D_ARRAY,s.TEXTURE_2D_ARRAY,1,1),Fe[s.TEXTURE_3D]=Se(s.TEXTURE_3D,s.TEXTURE_3D,1,1)),o.setClear(0,0,0,1),l.setClear(1),c.setClear(0),$e(s.DEPTH_TEST),l.setFunc(xo),se(!1),Ye(lc),$e(s.CULL_FACE),le(Ln);function $e(z){f[z]!==!0&&(s.enable(z),f[z]=!0)}function Xe(z){f[z]!==!1&&(s.disable(z),f[z]=!1)}function ut(z,Ee){return d[z]!==Ee?(s.bindFramebuffer(z,Ee),d[z]=Ee,n&&(z===s.DRAW_FRAMEBUFFER&&(d[s.FRAMEBUFFER]=Ee),z===s.FRAMEBUFFER&&(d[s.DRAW_FRAMEBUFFER]=Ee)),!0):!1}function gt(z,Ee){let te=m,Me=!1;if(z)if(te=p.get(Ee),te===void 0&&(te=[],p.set(Ee,te)),z.isWebGLMultipleRenderTargets){const Pe=z.texture;if(te.length!==Pe.length||te[0]!==s.COLOR_ATTACHMENT0){for(let xt=0,It=Pe.length;xt<It;xt++)te[xt]=s.COLOR_ATTACHMENT0+xt;te.length=Pe.length,Me=!0}}else te[0]!==s.COLOR_ATTACHMENT0&&(te[0]=s.COLOR_ATTACHMENT0,Me=!0);else te[0]!==s.BACK&&(te[0]=s.BACK,Me=!0);Me&&(t.isWebGL2?s.drawBuffers(te):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(te))}function je(z){return _!==z?(s.useProgram(z),_=z,!0):!1}const U={[Ei]:s.FUNC_ADD,[bp]:s.FUNC_SUBTRACT,[Sp]:s.FUNC_REVERSE_SUBTRACT};if(n)U[uc]=s.MIN,U[fc]=s.MAX;else{const z=e.get("EXT_blend_minmax");z!==null&&(U[uc]=z.MIN_EXT,U[fc]=z.MAX_EXT)}const ve={[wp]:s.ZERO,[Ep]:s.ONE,[Tp]:s.SRC_COLOR,[Qc]:s.SRC_ALPHA,[Ip]:s.SRC_ALPHA_SATURATE,[Pp]:s.DST_COLOR,[Cp]:s.DST_ALPHA,[Ap]:s.ONE_MINUS_SRC_COLOR,[eh]:s.ONE_MINUS_SRC_ALPHA,[Lp]:s.ONE_MINUS_DST_COLOR,[Rp]:s.ONE_MINUS_DST_ALPHA};function le(z,Ee,te,Me,Pe,xt,It,jt){if(z===Ln){g===!0&&(Xe(s.BLEND),g=!1);return}if(g===!1&&($e(s.BLEND),g=!0),z!==Mp){if(z!==y||jt!==S){if((v!==Ei||w!==Ei)&&(s.blendEquation(s.FUNC_ADD),v=Ei,w=Ei),jt)switch(z){case ds:s.blendFuncSeparate(s.ONE,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case yo:s.blendFunc(s.ONE,s.ONE);break;case cc:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case hc:s.blendFuncSeparate(s.ZERO,s.SRC_COLOR,s.ZERO,s.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",z);break}else switch(z){case ds:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case yo:s.blendFunc(s.SRC_ALPHA,s.ONE);break;case cc:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case hc:s.blendFunc(s.ZERO,s.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",z);break}x=null,M=null,T=null,I=null,y=z,S=jt}return}Pe=Pe||Ee,xt=xt||te,It=It||Me,(Ee!==v||Pe!==w)&&(s.blendEquationSeparate(U[Ee],U[Pe]),v=Ee,w=Pe),(te!==x||Me!==M||xt!==T||It!==I)&&(s.blendFuncSeparate(ve[te],ve[Me],ve[xt],ve[It]),x=te,M=Me,T=xt,I=It),y=z,S=!1}function fe(z,Ee){z.side===vn?Xe(s.CULL_FACE):$e(s.CULL_FACE);let te=z.side===pn;Ee&&(te=!te),se(te),z.blending===ds&&z.transparent===!1?le(Ln):le(z.blending,z.blendEquation,z.blendSrc,z.blendDst,z.blendEquationAlpha,z.blendSrcAlpha,z.blendDstAlpha,z.premultipliedAlpha),l.setFunc(z.depthFunc),l.setTest(z.depthTest),l.setMask(z.depthWrite),o.setMask(z.colorWrite);const Me=z.stencilWrite;c.setTest(Me),Me&&(c.setMask(z.stencilWriteMask),c.setFunc(z.stencilFunc,z.stencilRef,z.stencilFuncMask),c.setOp(z.stencilFail,z.stencilZFail,z.stencilZPass)),ye(z.polygonOffset,z.polygonOffsetFactor,z.polygonOffsetUnits),z.alphaToCoverage===!0?$e(s.SAMPLE_ALPHA_TO_COVERAGE):Xe(s.SAMPLE_ALPHA_TO_COVERAGE)}function se(z){C!==z&&(z?s.frontFace(s.CW):s.frontFace(s.CCW),C=z)}function Ye(z){z!==vp?($e(s.CULL_FACE),z!==V&&(z===lc?s.cullFace(s.BACK):z===yp?s.cullFace(s.FRONT):s.cullFace(s.FRONT_AND_BACK))):Xe(s.CULL_FACE),V=z}function De(z){z!==X&&(Y&&s.lineWidth(z),X=z)}function ye(z,Ee,te){z?($e(s.POLYGON_OFFSET_FILL),(F!==Ee||B!==te)&&(s.polygonOffset(Ee,te),F=Ee,B=te)):Xe(s.POLYGON_OFFSET_FILL)}function xe(z){z?$e(s.SCISSOR_TEST):Xe(s.SCISSOR_TEST)}function Be(z){z===void 0&&(z=s.TEXTURE0+N-1),q!==z&&(s.activeTexture(z),q=z)}function dt(z,Ee,te){te===void 0&&(q===null?te=s.TEXTURE0+N-1:te=q);let Me=Q[te];Me===void 0&&(Me={type:void 0,texture:void 0},Q[te]=Me),(Me.type!==z||Me.texture!==Ee)&&(q!==te&&(s.activeTexture(te),q=te),s.bindTexture(z,Ee||Fe[z]),Me.type=z,Me.texture=Ee)}function L(){const z=Q[q];z!==void 0&&z.type!==void 0&&(s.bindTexture(z.type,null),z.type=void 0,z.texture=void 0)}function A(){try{s.compressedTexImage2D.apply(s,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function ie(){try{s.compressedTexImage3D.apply(s,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function me(){try{s.texSubImage2D.apply(s,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function pe(){try{s.texSubImage3D.apply(s,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function D(){try{s.compressedTexSubImage2D.apply(s,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function ue(){try{s.compressedTexSubImage3D.apply(s,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function de(){try{s.texStorage2D.apply(s,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function J(){try{s.texStorage3D.apply(s,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function ke(){try{s.texImage2D.apply(s,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function qe(){try{s.texImage3D.apply(s,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function Ve(z){_e.equals(z)===!1&&(s.scissor(z.x,z.y,z.z,z.w),_e.copy(z))}function ze(z){ge.equals(z)===!1&&(s.viewport(z.x,z.y,z.z,z.w),ge.copy(z))}function He(z,Ee){let te=u.get(Ee);te===void 0&&(te=new WeakMap,u.set(Ee,te));let Me=te.get(z);Me===void 0&&(Me=s.getUniformBlockIndex(Ee,z.name),te.set(z,Me))}function et(z,Ee){const Me=u.get(Ee).get(z);h.get(Ee)!==Me&&(s.uniformBlockBinding(Ee,Me,z.__bindingPointIndex),h.set(Ee,Me))}function pt(){s.disable(s.BLEND),s.disable(s.CULL_FACE),s.disable(s.DEPTH_TEST),s.disable(s.POLYGON_OFFSET_FILL),s.disable(s.SCISSOR_TEST),s.disable(s.STENCIL_TEST),s.disable(s.SAMPLE_ALPHA_TO_COVERAGE),s.blendEquation(s.FUNC_ADD),s.blendFunc(s.ONE,s.ZERO),s.blendFuncSeparate(s.ONE,s.ZERO,s.ONE,s.ZERO),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(s.LESS),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(s.ALWAYS,0,4294967295),s.stencilOp(s.KEEP,s.KEEP,s.KEEP),s.clearStencil(0),s.cullFace(s.BACK),s.frontFace(s.CCW),s.polygonOffset(0,0),s.activeTexture(s.TEXTURE0),s.bindFramebuffer(s.FRAMEBUFFER,null),n===!0&&(s.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),s.bindFramebuffer(s.READ_FRAMEBUFFER,null)),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),f={},q=null,Q={},d={},p=new WeakMap,m=[],_=null,g=!1,y=null,v=null,x=null,M=null,w=null,T=null,I=null,S=!1,C=null,V=null,X=null,F=null,B=null,_e.set(0,0,s.canvas.width,s.canvas.height),ge.set(0,0,s.canvas.width,s.canvas.height),o.reset(),l.reset(),c.reset()}return{buffers:{color:o,depth:l,stencil:c},enable:$e,disable:Xe,bindFramebuffer:ut,drawBuffers:gt,useProgram:je,setBlending:le,setMaterial:fe,setFlipSided:se,setCullFace:Ye,setLineWidth:De,setPolygonOffset:ye,setScissorTest:xe,activeTexture:Be,bindTexture:dt,unbindTexture:L,compressedTexImage2D:A,compressedTexImage3D:ie,texImage2D:ke,texImage3D:qe,updateUBOMapping:He,uniformBlockBinding:et,texStorage2D:de,texStorage3D:J,texSubImage2D:me,texSubImage3D:pe,compressedTexSubImage2D:D,compressedTexSubImage3D:ue,scissor:Ve,viewport:ze,reset:pt}}function Gb(s,e,t,n,i,r,a){const o=i.isWebGL2,l=i.maxTextures,c=i.maxCubemapSize,h=i.maxTextureSize,u=i.maxSamples,f=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,d=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),p=new WeakMap;let m;const _=new WeakMap;let g=!1;try{g=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function y(L,A){return g?new OffscreenCanvas(L,A):Xr("canvas")}function v(L,A,ie,me){let pe=1;if((L.width>me||L.height>me)&&(pe=me/Math.max(L.width,L.height)),pe<1||A===!0)if(typeof HTMLImageElement<"u"&&L instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&L instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&L instanceof ImageBitmap){const D=A?So:Math.floor,ue=D(pe*L.width),de=D(pe*L.height);m===void 0&&(m=y(ue,de));const J=ie?y(ue,de):m;return J.width=ue,J.height=de,J.getContext("2d").drawImage(L,0,0,ue,de),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+L.width+"x"+L.height+") to ("+ue+"x"+de+")."),J}else return"data"in L&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+L.width+"x"+L.height+")."),L;return L}function x(L){return kc(L.width)&&kc(L.height)}function M(L){return o?!1:L.wrapS!==an||L.wrapT!==an||L.minFilter!==Vt&&L.minFilter!==Ht}function w(L,A){return L.generateMipmaps&&A&&L.minFilter!==Vt&&L.minFilter!==Ht}function T(L){s.generateMipmap(L)}function I(L,A,ie,me,pe=!1){if(o===!1)return A;if(L!==null){if(s[L]!==void 0)return s[L];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+L+"'")}let D=A;return A===s.RED&&(ie===s.FLOAT&&(D=s.R32F),ie===s.HALF_FLOAT&&(D=s.R16F),ie===s.UNSIGNED_BYTE&&(D=s.R8)),A===s.RG&&(ie===s.FLOAT&&(D=s.RG32F),ie===s.HALF_FLOAT&&(D=s.RG16F),ie===s.UNSIGNED_BYTE&&(D=s.RG8)),A===s.RGBA&&(ie===s.FLOAT&&(D=s.RGBA32F),ie===s.HALF_FLOAT&&(D=s.RGBA16F),ie===s.UNSIGNED_BYTE&&(D=me===at&&pe===!1?s.SRGB8_ALPHA8:s.RGBA8),ie===s.UNSIGNED_SHORT_4_4_4_4&&(D=s.RGBA4),ie===s.UNSIGNED_SHORT_5_5_5_1&&(D=s.RGB5_A1)),(D===s.R16F||D===s.R32F||D===s.RG16F||D===s.RG32F||D===s.RGBA16F||D===s.RGBA32F)&&e.get("EXT_color_buffer_float"),D}function S(L,A,ie){return w(L,ie)===!0||L.isFramebufferTexture&&L.minFilter!==Vt&&L.minFilter!==Ht?Math.log2(Math.max(A.width,A.height))+1:L.mipmaps!==void 0&&L.mipmaps.length>0?L.mipmaps.length:L.isCompressedTexture&&Array.isArray(L.image)?A.mipmaps.length:1}function C(L){return L===Vt||L===Mo||L===Tr?s.NEAREST:s.LINEAR}function V(L){const A=L.target;A.removeEventListener("dispose",V),F(A),A.isVideoTexture&&p.delete(A)}function X(L){const A=L.target;A.removeEventListener("dispose",X),N(A)}function F(L){const A=n.get(L);if(A.__webglInit===void 0)return;const ie=L.source,me=_.get(ie);if(me){const pe=me[A.__cacheKey];pe.usedTimes--,pe.usedTimes===0&&B(L),Object.keys(me).length===0&&_.delete(ie)}n.remove(L)}function B(L){const A=n.get(L);s.deleteTexture(A.__webglTexture);const ie=L.source,me=_.get(ie);delete me[A.__cacheKey],a.memory.textures--}function N(L){const A=L.texture,ie=n.get(L),me=n.get(A);if(me.__webglTexture!==void 0&&(s.deleteTexture(me.__webglTexture),a.memory.textures--),L.depthTexture&&L.depthTexture.dispose(),L.isWebGLCubeRenderTarget)for(let pe=0;pe<6;pe++)s.deleteFramebuffer(ie.__webglFramebuffer[pe]),ie.__webglDepthbuffer&&s.deleteRenderbuffer(ie.__webglDepthbuffer[pe]);else{if(s.deleteFramebuffer(ie.__webglFramebuffer),ie.__webglDepthbuffer&&s.deleteRenderbuffer(ie.__webglDepthbuffer),ie.__webglMultisampledFramebuffer&&s.deleteFramebuffer(ie.__webglMultisampledFramebuffer),ie.__webglColorRenderbuffer)for(let pe=0;pe<ie.__webglColorRenderbuffer.length;pe++)ie.__webglColorRenderbuffer[pe]&&s.deleteRenderbuffer(ie.__webglColorRenderbuffer[pe]);ie.__webglDepthRenderbuffer&&s.deleteRenderbuffer(ie.__webglDepthRenderbuffer)}if(L.isWebGLMultipleRenderTargets)for(let pe=0,D=A.length;pe<D;pe++){const ue=n.get(A[pe]);ue.__webglTexture&&(s.deleteTexture(ue.__webglTexture),a.memory.textures--),n.remove(A[pe])}n.remove(A),n.remove(L)}let Y=0;function O(){Y=0}function Z(){const L=Y;return L>=l&&console.warn("THREE.WebGLTextures: Trying to use "+L+" texture units while this GPU supports only "+l),Y+=1,L}function q(L){const A=[];return A.push(L.wrapS),A.push(L.wrapT),A.push(L.wrapR||0),A.push(L.magFilter),A.push(L.minFilter),A.push(L.anisotropy),A.push(L.internalFormat),A.push(L.format),A.push(L.type),A.push(L.generateMipmaps),A.push(L.premultiplyAlpha),A.push(L.flipY),A.push(L.unpackAlignment),A.push(L.colorSpace),A.join()}function Q(L,A){const ie=n.get(L);if(L.isVideoTexture&&Be(L),L.isRenderTargetTexture===!1&&L.version>0&&ie.__version!==L.version){const me=L.image;if(me===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(me.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{ut(ie,L,A);return}}t.bindTexture(s.TEXTURE_2D,ie.__webglTexture,s.TEXTURE0+A)}function H(L,A){const ie=n.get(L);if(L.version>0&&ie.__version!==L.version){ut(ie,L,A);return}t.bindTexture(s.TEXTURE_2D_ARRAY,ie.__webglTexture,s.TEXTURE0+A)}function ee(L,A){const ie=n.get(L);if(L.version>0&&ie.__version!==L.version){ut(ie,L,A);return}t.bindTexture(s.TEXTURE_3D,ie.__webglTexture,s.TEXTURE0+A)}function _e(L,A){const ie=n.get(L);if(L.version>0&&ie.__version!==L.version){gt(ie,L,A);return}t.bindTexture(s.TEXTURE_CUBE_MAP,ie.__webglTexture,s.TEXTURE0+A)}const ge={[Fr]:s.REPEAT,[an]:s.CLAMP_TO_EDGE,[Br]:s.MIRRORED_REPEAT},Se={[Vt]:s.NEAREST,[Mo]:s.NEAREST_MIPMAP_NEAREST,[Tr]:s.NEAREST_MIPMAP_LINEAR,[Ht]:s.LINEAR,[th]:s.LINEAR_MIPMAP_NEAREST,[Ni]:s.LINEAR_MIPMAP_LINEAR},Fe={[lm]:s.NEVER,[mm]:s.ALWAYS,[cm]:s.LESS,[um]:s.LEQUAL,[hm]:s.EQUAL,[pm]:s.GEQUAL,[fm]:s.GREATER,[dm]:s.NOTEQUAL};function $e(L,A,ie){if(ie?(s.texParameteri(L,s.TEXTURE_WRAP_S,ge[A.wrapS]),s.texParameteri(L,s.TEXTURE_WRAP_T,ge[A.wrapT]),(L===s.TEXTURE_3D||L===s.TEXTURE_2D_ARRAY)&&s.texParameteri(L,s.TEXTURE_WRAP_R,ge[A.wrapR]),s.texParameteri(L,s.TEXTURE_MAG_FILTER,Se[A.magFilter]),s.texParameteri(L,s.TEXTURE_MIN_FILTER,Se[A.minFilter])):(s.texParameteri(L,s.TEXTURE_WRAP_S,s.CLAMP_TO_EDGE),s.texParameteri(L,s.TEXTURE_WRAP_T,s.CLAMP_TO_EDGE),(L===s.TEXTURE_3D||L===s.TEXTURE_2D_ARRAY)&&s.texParameteri(L,s.TEXTURE_WRAP_R,s.CLAMP_TO_EDGE),(A.wrapS!==an||A.wrapT!==an)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),s.texParameteri(L,s.TEXTURE_MAG_FILTER,C(A.magFilter)),s.texParameteri(L,s.TEXTURE_MIN_FILTER,C(A.minFilter)),A.minFilter!==Vt&&A.minFilter!==Ht&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),A.compareFunction&&(s.texParameteri(L,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(L,s.TEXTURE_COMPARE_FUNC,Fe[A.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){const me=e.get("EXT_texture_filter_anisotropic");if(A.magFilter===Vt||A.minFilter!==Tr&&A.minFilter!==Ni||A.type===jn&&e.has("OES_texture_float_linear")===!1||o===!1&&A.type===Sn&&e.has("OES_texture_half_float_linear")===!1)return;(A.anisotropy>1||n.get(A).__currentAnisotropy)&&(s.texParameterf(L,me.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(A.anisotropy,i.getMaxAnisotropy())),n.get(A).__currentAnisotropy=A.anisotropy)}}function Xe(L,A){let ie=!1;L.__webglInit===void 0&&(L.__webglInit=!0,A.addEventListener("dispose",V));const me=A.source;let pe=_.get(me);pe===void 0&&(pe={},_.set(me,pe));const D=q(A);if(D!==L.__cacheKey){pe[D]===void 0&&(pe[D]={texture:s.createTexture(),usedTimes:0},a.memory.textures++,ie=!0),pe[D].usedTimes++;const ue=pe[L.__cacheKey];ue!==void 0&&(pe[L.__cacheKey].usedTimes--,ue.usedTimes===0&&B(A)),L.__cacheKey=D,L.__webglTexture=pe[D].texture}return ie}function ut(L,A,ie){let me=s.TEXTURE_2D;(A.isDataArrayTexture||A.isCompressedArrayTexture)&&(me=s.TEXTURE_2D_ARRAY),A.isData3DTexture&&(me=s.TEXTURE_3D);const pe=Xe(L,A),D=A.source;t.bindTexture(me,L.__webglTexture,s.TEXTURE0+ie);const ue=n.get(D);if(D.version!==ue.__version||pe===!0){t.activeTexture(s.TEXTURE0+ie),s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,A.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,A.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,A.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,s.NONE);const de=M(A)&&x(A.image)===!1;let J=v(A.image,de,!1,h);J=dt(A,J);const ke=x(J)||o,qe=r.convert(A.format,A.colorSpace);let Ve=r.convert(A.type),ze=I(A.internalFormat,qe,Ve,A.colorSpace);$e(me,A,ke);let He;const et=A.mipmaps,pt=o&&A.isVideoTexture!==!0,z=ue.__version===void 0||pe===!0,Ee=S(A,J,ke);if(A.isDepthTexture)ze=s.DEPTH_COMPONENT,o?A.type===jn?ze=s.DEPTH_COMPONENT32F:A.type===di?ze=s.DEPTH_COMPONENT24:A.type===Ai?ze=s.DEPTH24_STENCIL8:ze=s.DEPTH_COMPONENT16:A.type===jn&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),A.format===Ci&&ze===s.DEPTH_COMPONENT&&A.type!==Io&&A.type!==di&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),A.type=di,Ve=r.convert(A.type)),A.format===ms&&ze===s.DEPTH_COMPONENT&&(ze=s.DEPTH_STENCIL,A.type!==Ai&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),A.type=Ai,Ve=r.convert(A.type))),z&&(pt?t.texStorage2D(s.TEXTURE_2D,1,ze,J.width,J.height):t.texImage2D(s.TEXTURE_2D,0,ze,J.width,J.height,0,qe,Ve,null));else if(A.isDataTexture)if(et.length>0&&ke){pt&&z&&t.texStorage2D(s.TEXTURE_2D,Ee,ze,et[0].width,et[0].height);for(let te=0,Me=et.length;te<Me;te++)He=et[te],pt?t.texSubImage2D(s.TEXTURE_2D,te,0,0,He.width,He.height,qe,Ve,He.data):t.texImage2D(s.TEXTURE_2D,te,ze,He.width,He.height,0,qe,Ve,He.data);A.generateMipmaps=!1}else pt?(z&&t.texStorage2D(s.TEXTURE_2D,Ee,ze,J.width,J.height),t.texSubImage2D(s.TEXTURE_2D,0,0,0,J.width,J.height,qe,Ve,J.data)):t.texImage2D(s.TEXTURE_2D,0,ze,J.width,J.height,0,qe,Ve,J.data);else if(A.isCompressedTexture)if(A.isCompressedArrayTexture){pt&&z&&t.texStorage3D(s.TEXTURE_2D_ARRAY,Ee,ze,et[0].width,et[0].height,J.depth);for(let te=0,Me=et.length;te<Me;te++)He=et[te],A.format!==wn?qe!==null?pt?t.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,te,0,0,0,He.width,He.height,J.depth,qe,He.data,0,0):t.compressedTexImage3D(s.TEXTURE_2D_ARRAY,te,ze,He.width,He.height,J.depth,0,He.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):pt?t.texSubImage3D(s.TEXTURE_2D_ARRAY,te,0,0,0,He.width,He.height,J.depth,qe,Ve,He.data):t.texImage3D(s.TEXTURE_2D_ARRAY,te,ze,He.width,He.height,J.depth,0,qe,Ve,He.data)}else{pt&&z&&t.texStorage2D(s.TEXTURE_2D,Ee,ze,et[0].width,et[0].height);for(let te=0,Me=et.length;te<Me;te++)He=et[te],A.format!==wn?qe!==null?pt?t.compressedTexSubImage2D(s.TEXTURE_2D,te,0,0,He.width,He.height,qe,He.data):t.compressedTexImage2D(s.TEXTURE_2D,te,ze,He.width,He.height,0,He.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):pt?t.texSubImage2D(s.TEXTURE_2D,te,0,0,He.width,He.height,qe,Ve,He.data):t.texImage2D(s.TEXTURE_2D,te,ze,He.width,He.height,0,qe,Ve,He.data)}else if(A.isDataArrayTexture)pt?(z&&t.texStorage3D(s.TEXTURE_2D_ARRAY,Ee,ze,J.width,J.height,J.depth),t.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,J.width,J.height,J.depth,qe,Ve,J.data)):t.texImage3D(s.TEXTURE_2D_ARRAY,0,ze,J.width,J.height,J.depth,0,qe,Ve,J.data);else if(A.isData3DTexture)pt?(z&&t.texStorage3D(s.TEXTURE_3D,Ee,ze,J.width,J.height,J.depth),t.texSubImage3D(s.TEXTURE_3D,0,0,0,0,J.width,J.height,J.depth,qe,Ve,J.data)):t.texImage3D(s.TEXTURE_3D,0,ze,J.width,J.height,J.depth,0,qe,Ve,J.data);else if(A.isFramebufferTexture){if(z)if(pt)t.texStorage2D(s.TEXTURE_2D,Ee,ze,J.width,J.height);else{let te=J.width,Me=J.height;for(let Pe=0;Pe<Ee;Pe++)t.texImage2D(s.TEXTURE_2D,Pe,ze,te,Me,0,qe,Ve,null),te>>=1,Me>>=1}}else if(et.length>0&&ke){pt&&z&&t.texStorage2D(s.TEXTURE_2D,Ee,ze,et[0].width,et[0].height);for(let te=0,Me=et.length;te<Me;te++)He=et[te],pt?t.texSubImage2D(s.TEXTURE_2D,te,0,0,qe,Ve,He):t.texImage2D(s.TEXTURE_2D,te,ze,qe,Ve,He);A.generateMipmaps=!1}else pt?(z&&t.texStorage2D(s.TEXTURE_2D,Ee,ze,J.width,J.height),t.texSubImage2D(s.TEXTURE_2D,0,0,0,qe,Ve,J)):t.texImage2D(s.TEXTURE_2D,0,ze,qe,Ve,J);w(A,ke)&&T(me),ue.__version=D.version,A.onUpdate&&A.onUpdate(A)}L.__version=A.version}function gt(L,A,ie){if(A.image.length!==6)return;const me=Xe(L,A),pe=A.source;t.bindTexture(s.TEXTURE_CUBE_MAP,L.__webglTexture,s.TEXTURE0+ie);const D=n.get(pe);if(pe.version!==D.__version||me===!0){t.activeTexture(s.TEXTURE0+ie),s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,A.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,A.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,A.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,s.NONE);const ue=A.isCompressedTexture||A.image[0].isCompressedTexture,de=A.image[0]&&A.image[0].isDataTexture,J=[];for(let te=0;te<6;te++)!ue&&!de?J[te]=v(A.image[te],!1,!0,c):J[te]=de?A.image[te].image:A.image[te],J[te]=dt(A,J[te]);const ke=J[0],qe=x(ke)||o,Ve=r.convert(A.format,A.colorSpace),ze=r.convert(A.type),He=I(A.internalFormat,Ve,ze,A.colorSpace),et=o&&A.isVideoTexture!==!0,pt=D.__version===void 0||me===!0;let z=S(A,ke,qe);$e(s.TEXTURE_CUBE_MAP,A,qe);let Ee;if(ue){et&&pt&&t.texStorage2D(s.TEXTURE_CUBE_MAP,z,He,ke.width,ke.height);for(let te=0;te<6;te++){Ee=J[te].mipmaps;for(let Me=0;Me<Ee.length;Me++){const Pe=Ee[Me];A.format!==wn?Ve!==null?et?t.compressedTexSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+te,Me,0,0,Pe.width,Pe.height,Ve,Pe.data):t.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+te,Me,He,Pe.width,Pe.height,0,Pe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):et?t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+te,Me,0,0,Pe.width,Pe.height,Ve,ze,Pe.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+te,Me,He,Pe.width,Pe.height,0,Ve,ze,Pe.data)}}}else{Ee=A.mipmaps,et&&pt&&(Ee.length>0&&z++,t.texStorage2D(s.TEXTURE_CUBE_MAP,z,He,J[0].width,J[0].height));for(let te=0;te<6;te++)if(de){et?t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+te,0,0,0,J[te].width,J[te].height,Ve,ze,J[te].data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+te,0,He,J[te].width,J[te].height,0,Ve,ze,J[te].data);for(let Me=0;Me<Ee.length;Me++){const xt=Ee[Me].image[te].image;et?t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+te,Me+1,0,0,xt.width,xt.height,Ve,ze,xt.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+te,Me+1,He,xt.width,xt.height,0,Ve,ze,xt.data)}}else{et?t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+te,0,0,0,Ve,ze,J[te]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+te,0,He,Ve,ze,J[te]);for(let Me=0;Me<Ee.length;Me++){const Pe=Ee[Me];et?t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+te,Me+1,0,0,Ve,ze,Pe.image[te]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+te,Me+1,He,Ve,ze,Pe.image[te])}}}w(A,qe)&&T(s.TEXTURE_CUBE_MAP),D.__version=pe.version,A.onUpdate&&A.onUpdate(A)}L.__version=A.version}function je(L,A,ie,me,pe){const D=r.convert(ie.format,ie.colorSpace),ue=r.convert(ie.type),de=I(ie.internalFormat,D,ue,ie.colorSpace);n.get(A).__hasExternalTextures||(pe===s.TEXTURE_3D||pe===s.TEXTURE_2D_ARRAY?t.texImage3D(pe,0,de,A.width,A.height,A.depth,0,D,ue,null):t.texImage2D(pe,0,de,A.width,A.height,0,D,ue,null)),t.bindFramebuffer(s.FRAMEBUFFER,L),xe(A)?f.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,me,pe,n.get(ie).__webglTexture,0,ye(A)):(pe===s.TEXTURE_2D||pe>=s.TEXTURE_CUBE_MAP_POSITIVE_X&&pe<=s.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&s.framebufferTexture2D(s.FRAMEBUFFER,me,pe,n.get(ie).__webglTexture,0),t.bindFramebuffer(s.FRAMEBUFFER,null)}function U(L,A,ie){if(s.bindRenderbuffer(s.RENDERBUFFER,L),A.depthBuffer&&!A.stencilBuffer){let me=s.DEPTH_COMPONENT16;if(ie||xe(A)){const pe=A.depthTexture;pe&&pe.isDepthTexture&&(pe.type===jn?me=s.DEPTH_COMPONENT32F:pe.type===di&&(me=s.DEPTH_COMPONENT24));const D=ye(A);xe(A)?f.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,D,me,A.width,A.height):s.renderbufferStorageMultisample(s.RENDERBUFFER,D,me,A.width,A.height)}else s.renderbufferStorage(s.RENDERBUFFER,me,A.width,A.height);s.framebufferRenderbuffer(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.RENDERBUFFER,L)}else if(A.depthBuffer&&A.stencilBuffer){const me=ye(A);ie&&xe(A)===!1?s.renderbufferStorageMultisample(s.RENDERBUFFER,me,s.DEPTH24_STENCIL8,A.width,A.height):xe(A)?f.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,me,s.DEPTH24_STENCIL8,A.width,A.height):s.renderbufferStorage(s.RENDERBUFFER,s.DEPTH_STENCIL,A.width,A.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.RENDERBUFFER,L)}else{const me=A.isWebGLMultipleRenderTargets===!0?A.texture:[A.texture];for(let pe=0;pe<me.length;pe++){const D=me[pe],ue=r.convert(D.format,D.colorSpace),de=r.convert(D.type),J=I(D.internalFormat,ue,de,D.colorSpace),ke=ye(A);ie&&xe(A)===!1?s.renderbufferStorageMultisample(s.RENDERBUFFER,ke,J,A.width,A.height):xe(A)?f.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,ke,J,A.width,A.height):s.renderbufferStorage(s.RENDERBUFFER,J,A.width,A.height)}}s.bindRenderbuffer(s.RENDERBUFFER,null)}function ve(L,A){if(A&&A.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(s.FRAMEBUFFER,L),!(A.depthTexture&&A.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(A.depthTexture).__webglTexture||A.depthTexture.image.width!==A.width||A.depthTexture.image.height!==A.height)&&(A.depthTexture.image.width=A.width,A.depthTexture.image.height=A.height,A.depthTexture.needsUpdate=!0),Q(A.depthTexture,0);const me=n.get(A.depthTexture).__webglTexture,pe=ye(A);if(A.depthTexture.format===Ci)xe(A)?f.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,me,0,pe):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,me,0);else if(A.depthTexture.format===ms)xe(A)?f.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,me,0,pe):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,me,0);else throw new Error("Unknown depthTexture format")}function le(L){const A=n.get(L),ie=L.isWebGLCubeRenderTarget===!0;if(L.depthTexture&&!A.__autoAllocateDepthBuffer){if(ie)throw new Error("target.depthTexture not supported in Cube render targets");ve(A.__webglFramebuffer,L)}else if(ie){A.__webglDepthbuffer=[];for(let me=0;me<6;me++)t.bindFramebuffer(s.FRAMEBUFFER,A.__webglFramebuffer[me]),A.__webglDepthbuffer[me]=s.createRenderbuffer(),U(A.__webglDepthbuffer[me],L,!1)}else t.bindFramebuffer(s.FRAMEBUFFER,A.__webglFramebuffer),A.__webglDepthbuffer=s.createRenderbuffer(),U(A.__webglDepthbuffer,L,!1);t.bindFramebuffer(s.FRAMEBUFFER,null)}function fe(L,A,ie){const me=n.get(L);A!==void 0&&je(me.__webglFramebuffer,L,L.texture,s.COLOR_ATTACHMENT0,s.TEXTURE_2D),ie!==void 0&&le(L)}function se(L){const A=L.texture,ie=n.get(L),me=n.get(A);L.addEventListener("dispose",X),L.isWebGLMultipleRenderTargets!==!0&&(me.__webglTexture===void 0&&(me.__webglTexture=s.createTexture()),me.__version=A.version,a.memory.textures++);const pe=L.isWebGLCubeRenderTarget===!0,D=L.isWebGLMultipleRenderTargets===!0,ue=x(L)||o;if(pe){ie.__webglFramebuffer=[];for(let de=0;de<6;de++)ie.__webglFramebuffer[de]=s.createFramebuffer()}else{if(ie.__webglFramebuffer=s.createFramebuffer(),D)if(i.drawBuffers){const de=L.texture;for(let J=0,ke=de.length;J<ke;J++){const qe=n.get(de[J]);qe.__webglTexture===void 0&&(qe.__webglTexture=s.createTexture(),a.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(o&&L.samples>0&&xe(L)===!1){const de=D?A:[A];ie.__webglMultisampledFramebuffer=s.createFramebuffer(),ie.__webglColorRenderbuffer=[],t.bindFramebuffer(s.FRAMEBUFFER,ie.__webglMultisampledFramebuffer);for(let J=0;J<de.length;J++){const ke=de[J];ie.__webglColorRenderbuffer[J]=s.createRenderbuffer(),s.bindRenderbuffer(s.RENDERBUFFER,ie.__webglColorRenderbuffer[J]);const qe=r.convert(ke.format,ke.colorSpace),Ve=r.convert(ke.type),ze=I(ke.internalFormat,qe,Ve,ke.colorSpace,L.isXRRenderTarget===!0),He=ye(L);s.renderbufferStorageMultisample(s.RENDERBUFFER,He,ze,L.width,L.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+J,s.RENDERBUFFER,ie.__webglColorRenderbuffer[J])}s.bindRenderbuffer(s.RENDERBUFFER,null),L.depthBuffer&&(ie.__webglDepthRenderbuffer=s.createRenderbuffer(),U(ie.__webglDepthRenderbuffer,L,!0)),t.bindFramebuffer(s.FRAMEBUFFER,null)}}if(pe){t.bindTexture(s.TEXTURE_CUBE_MAP,me.__webglTexture),$e(s.TEXTURE_CUBE_MAP,A,ue);for(let de=0;de<6;de++)je(ie.__webglFramebuffer[de],L,A,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+de);w(A,ue)&&T(s.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(D){const de=L.texture;for(let J=0,ke=de.length;J<ke;J++){const qe=de[J],Ve=n.get(qe);t.bindTexture(s.TEXTURE_2D,Ve.__webglTexture),$e(s.TEXTURE_2D,qe,ue),je(ie.__webglFramebuffer,L,qe,s.COLOR_ATTACHMENT0+J,s.TEXTURE_2D),w(qe,ue)&&T(s.TEXTURE_2D)}t.unbindTexture()}else{let de=s.TEXTURE_2D;(L.isWebGL3DRenderTarget||L.isWebGLArrayRenderTarget)&&(o?de=L.isWebGL3DRenderTarget?s.TEXTURE_3D:s.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(de,me.__webglTexture),$e(de,A,ue),je(ie.__webglFramebuffer,L,A,s.COLOR_ATTACHMENT0,de),w(A,ue)&&T(de),t.unbindTexture()}L.depthBuffer&&le(L)}function Ye(L){const A=x(L)||o,ie=L.isWebGLMultipleRenderTargets===!0?L.texture:[L.texture];for(let me=0,pe=ie.length;me<pe;me++){const D=ie[me];if(w(D,A)){const ue=L.isWebGLCubeRenderTarget?s.TEXTURE_CUBE_MAP:s.TEXTURE_2D,de=n.get(D).__webglTexture;t.bindTexture(ue,de),T(ue),t.unbindTexture()}}}function De(L){if(o&&L.samples>0&&xe(L)===!1){const A=L.isWebGLMultipleRenderTargets?L.texture:[L.texture],ie=L.width,me=L.height;let pe=s.COLOR_BUFFER_BIT;const D=[],ue=L.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,de=n.get(L),J=L.isWebGLMultipleRenderTargets===!0;if(J)for(let ke=0;ke<A.length;ke++)t.bindFramebuffer(s.FRAMEBUFFER,de.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+ke,s.RENDERBUFFER,null),t.bindFramebuffer(s.FRAMEBUFFER,de.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+ke,s.TEXTURE_2D,null,0);t.bindFramebuffer(s.READ_FRAMEBUFFER,de.__webglMultisampledFramebuffer),t.bindFramebuffer(s.DRAW_FRAMEBUFFER,de.__webglFramebuffer);for(let ke=0;ke<A.length;ke++){D.push(s.COLOR_ATTACHMENT0+ke),L.depthBuffer&&D.push(ue);const qe=de.__ignoreDepthValues!==void 0?de.__ignoreDepthValues:!1;if(qe===!1&&(L.depthBuffer&&(pe|=s.DEPTH_BUFFER_BIT),L.stencilBuffer&&(pe|=s.STENCIL_BUFFER_BIT)),J&&s.framebufferRenderbuffer(s.READ_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.RENDERBUFFER,de.__webglColorRenderbuffer[ke]),qe===!0&&(s.invalidateFramebuffer(s.READ_FRAMEBUFFER,[ue]),s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,[ue])),J){const Ve=n.get(A[ke]).__webglTexture;s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,Ve,0)}s.blitFramebuffer(0,0,ie,me,0,0,ie,me,pe,s.NEAREST),d&&s.invalidateFramebuffer(s.READ_FRAMEBUFFER,D)}if(t.bindFramebuffer(s.READ_FRAMEBUFFER,null),t.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),J)for(let ke=0;ke<A.length;ke++){t.bindFramebuffer(s.FRAMEBUFFER,de.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+ke,s.RENDERBUFFER,de.__webglColorRenderbuffer[ke]);const qe=n.get(A[ke]).__webglTexture;t.bindFramebuffer(s.FRAMEBUFFER,de.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+ke,s.TEXTURE_2D,qe,0)}t.bindFramebuffer(s.DRAW_FRAMEBUFFER,de.__webglMultisampledFramebuffer)}}function ye(L){return Math.min(u,L.samples)}function xe(L){const A=n.get(L);return o&&L.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&A.__useRenderToTexture!==!1}function Be(L){const A=a.render.frame;p.get(L)!==A&&(p.set(L,A),L.update())}function dt(L,A){const ie=L.colorSpace,me=L.format,pe=L.type;return L.isCompressedTexture===!0||L.format===bo||ie!==Fn&&ie!==Pi&&(ie===at?o===!1?e.has("EXT_sRGB")===!0&&me===wn?(L.format=bo,L.minFilter=Ht,L.generateMipmaps=!1):A=dh.sRGBToLinear(A):(me!==wn||pe!==pi)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",ie)),A}this.allocateTextureUnit=Z,this.resetTextureUnits=O,this.setTexture2D=Q,this.setTexture2DArray=H,this.setTexture3D=ee,this.setTextureCube=_e,this.rebindTextures=fe,this.setupRenderTarget=se,this.updateRenderTargetMipmap=Ye,this.updateMultisampleRenderTarget=De,this.setupDepthRenderbuffer=le,this.setupFrameBufferTexture=je,this.useMultisampledRTT=xe}function Am(s,e,t){const n=t.isWebGL2;function i(r,a=Pi){let o;if(r===pi)return s.UNSIGNED_BYTE;if(r===ih)return s.UNSIGNED_SHORT_4_4_4_4;if(r===sh)return s.UNSIGNED_SHORT_5_5_5_1;if(r===Yp)return s.BYTE;if(r===qp)return s.SHORT;if(r===Io)return s.UNSIGNED_SHORT;if(r===nh)return s.INT;if(r===di)return s.UNSIGNED_INT;if(r===jn)return s.FLOAT;if(r===Sn)return n?s.HALF_FLOAT:(o=e.get("OES_texture_half_float"),o!==null?o.HALF_FLOAT_OES:null);if(r===Zp)return s.ALPHA;if(r===wn)return s.RGBA;if(r===jp)return s.LUMINANCE;if(r===Jp)return s.LUMINANCE_ALPHA;if(r===Ci)return s.DEPTH_COMPONENT;if(r===ms)return s.DEPTH_STENCIL;if(r===bo)return o=e.get("EXT_sRGB"),o!==null?o.SRGB_ALPHA_EXT:null;if(r===Kp)return s.RED;if(r===rh)return s.RED_INTEGER;if(r===Qp)return s.RG;if(r===ah)return s.RG_INTEGER;if(r===oh)return s.RGBA_INTEGER;if(r===io||r===so||r===ro||r===ao)if(a===at)if(o=e.get("WEBGL_compressed_texture_s3tc_srgb"),o!==null){if(r===io)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(r===so)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(r===ro)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(r===ao)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(o=e.get("WEBGL_compressed_texture_s3tc"),o!==null){if(r===io)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===so)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===ro)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===ao)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(r===dc||r===pc||r===mc||r===gc)if(o=e.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(r===dc)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===pc)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===mc)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===gc)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(r===em)return o=e.get("WEBGL_compressed_texture_etc1"),o!==null?o.COMPRESSED_RGB_ETC1_WEBGL:null;if(r===_c||r===vc)if(o=e.get("WEBGL_compressed_texture_etc"),o!==null){if(r===_c)return a===at?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(r===vc)return a===at?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(r===yc||r===xc||r===Mc||r===bc||r===Sc||r===wc||r===Ec||r===Tc||r===Ac||r===Cc||r===Rc||r===Pc||r===Lc||r===Ic)if(o=e.get("WEBGL_compressed_texture_astc"),o!==null){if(r===yc)return a===at?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(r===xc)return a===at?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(r===Mc)return a===at?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(r===bc)return a===at?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(r===Sc)return a===at?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(r===wc)return a===at?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(r===Ec)return a===at?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(r===Tc)return a===at?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(r===Ac)return a===at?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(r===Cc)return a===at?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(r===Rc)return a===at?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(r===Pc)return a===at?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(r===Lc)return a===at?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(r===Ic)return a===at?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(r===oo)if(o=e.get("EXT_texture_compression_bptc"),o!==null){if(r===oo)return a===at?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(r===tm||r===Dc||r===Uc||r===Nc)if(o=e.get("EXT_texture_compression_rgtc"),o!==null){if(r===oo)return o.COMPRESSED_RED_RGTC1_EXT;if(r===Dc)return o.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(r===Uc)return o.COMPRESSED_RED_GREEN_RGTC2_EXT;if(r===Nc)return o.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return r===Ai?n?s.UNSIGNED_INT_24_8:(o=e.get("WEBGL_depth_texture"),o!==null?o.UNSIGNED_INT_24_8_WEBGL:null):s[r]!==void 0?s[r]:null}return{convert:i}}class Cm extends en{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class $t extends vt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const Wb={type:"move"};class Fl{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new $t,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new $t,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new E,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new E),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new $t,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new E,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new E),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,r=null,a=null;const o=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(c&&e.hand){a=!0;for(const m of e.hand.values()){const _=t.getJointPose(m,n),g=this._getHandJoint(c,m);_!==null&&(g.matrix.fromArray(_.transform.matrix),g.matrix.decompose(g.position,g.rotation,g.scale),g.matrixWorldNeedsUpdate=!0,g.jointRadius=_.radius),g.visible=_!==null}const h=c.joints["index-finger-tip"],u=c.joints["thumb-tip"],f=h.position.distanceTo(u.position),d=.02,p=.005;c.inputState.pinching&&f>d+p?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&f<=d-p&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),r!==null&&(l.matrix.fromArray(r.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,r.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(r.linearVelocity)):l.hasLinearVelocity=!1,r.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(r.angularVelocity)):l.hasAngularVelocity=!1));o!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&r!==null&&(i=r),i!==null&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,i.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(i.linearVelocity)):o.hasLinearVelocity=!1,i.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(i.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(Wb)))}return o!==null&&(o.visible=i!==null),l!==null&&(l.visible=r!==null),c!==null&&(c.visible=a!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new $t;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class Rm extends Gt{constructor(e,t,n,i,r,a,o,l,c,h){if(h=h!==void 0?h:Ci,h!==Ci&&h!==ms)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&h===Ci&&(n=di),n===void 0&&h===ms&&(n=Ai),super(null,i,r,a,o,l,h,n,c),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=o!==void 0?o:Vt,this.minFilter=l!==void 0?l:Vt,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class Xb extends ni{constructor(e,t){super();const n=this;let i=null,r=1,a=null,o="local-floor",l=1,c=null,h=null,u=null,f=null,d=null,p=null;const m=t.getContextAttributes();let _=null,g=null;const y=[],v=[],x=new en;x.layers.enable(1),x.viewport=new Tt;const M=new en;M.layers.enable(2),M.viewport=new Tt;const w=[x,M],T=new Cm;T.layers.enable(1),T.layers.enable(2);let I=null,S=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(H){let ee=y[H];return ee===void 0&&(ee=new Fl,y[H]=ee),ee.getTargetRaySpace()},this.getControllerGrip=function(H){let ee=y[H];return ee===void 0&&(ee=new Fl,y[H]=ee),ee.getGripSpace()},this.getHand=function(H){let ee=y[H];return ee===void 0&&(ee=new Fl,y[H]=ee),ee.getHandSpace()};function C(H){const ee=v.indexOf(H.inputSource);if(ee===-1)return;const _e=y[ee];_e!==void 0&&(_e.update(H.inputSource,H.frame,c||a),_e.dispatchEvent({type:H.type,data:H.inputSource}))}function V(){i.removeEventListener("select",C),i.removeEventListener("selectstart",C),i.removeEventListener("selectend",C),i.removeEventListener("squeeze",C),i.removeEventListener("squeezestart",C),i.removeEventListener("squeezeend",C),i.removeEventListener("end",V),i.removeEventListener("inputsourceschange",X);for(let H=0;H<y.length;H++){const ee=v[H];ee!==null&&(v[H]=null,y[H].disconnect(ee))}I=null,S=null,e.setRenderTarget(_),d=null,f=null,u=null,i=null,g=null,Q.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(H){r=H,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(H){o=H,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||a},this.setReferenceSpace=function(H){c=H},this.getBaseLayer=function(){return f!==null?f:d},this.getBinding=function(){return u},this.getFrame=function(){return p},this.getSession=function(){return i},this.setSession=async function(H){if(i=H,i!==null){if(_=e.getRenderTarget(),i.addEventListener("select",C),i.addEventListener("selectstart",C),i.addEventListener("selectend",C),i.addEventListener("squeeze",C),i.addEventListener("squeezestart",C),i.addEventListener("squeezeend",C),i.addEventListener("end",V),i.addEventListener("inputsourceschange",X),m.xrCompatible!==!0&&await t.makeXRCompatible(),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const ee={antialias:i.renderState.layers===void 0?m.antialias:!0,alpha:!0,depth:m.depth,stencil:m.stencil,framebufferScaleFactor:r};d=new XRWebGLLayer(i,t,ee),i.updateRenderState({baseLayer:d}),g=new Yt(d.framebufferWidth,d.framebufferHeight,{format:wn,type:pi,colorSpace:e.outputColorSpace,stencilBuffer:m.stencil})}else{let ee=null,_e=null,ge=null;m.depth&&(ge=m.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,ee=m.stencil?ms:Ci,_e=m.stencil?Ai:di);const Se={colorFormat:t.RGBA8,depthFormat:ge,scaleFactor:r};u=new XRWebGLBinding(i,t),f=u.createProjectionLayer(Se),i.updateRenderState({layers:[f]}),g=new Yt(f.textureWidth,f.textureHeight,{format:wn,type:pi,depthTexture:new Rm(f.textureWidth,f.textureHeight,_e,void 0,void 0,void 0,void 0,void 0,void 0,ee),stencilBuffer:m.stencil,colorSpace:e.outputColorSpace,samples:m.antialias?4:0});const Fe=e.properties.get(g);Fe.__ignoreDepthValues=f.ignoreDepthValues}g.isXRRenderTarget=!0,this.setFoveation(l),c=null,a=await i.requestReferenceSpace(o),Q.setContext(i),Q.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode};function X(H){for(let ee=0;ee<H.removed.length;ee++){const _e=H.removed[ee],ge=v.indexOf(_e);ge>=0&&(v[ge]=null,y[ge].disconnect(_e))}for(let ee=0;ee<H.added.length;ee++){const _e=H.added[ee];let ge=v.indexOf(_e);if(ge===-1){for(let Fe=0;Fe<y.length;Fe++)if(Fe>=v.length){v.push(_e),ge=Fe;break}else if(v[Fe]===null){v[Fe]=_e,ge=Fe;break}if(ge===-1)break}const Se=y[ge];Se&&Se.connect(_e)}}const F=new E,B=new E;function N(H,ee,_e){F.setFromMatrixPosition(ee.matrixWorld),B.setFromMatrixPosition(_e.matrixWorld);const ge=F.distanceTo(B),Se=ee.projectionMatrix.elements,Fe=_e.projectionMatrix.elements,$e=Se[14]/(Se[10]-1),Xe=Se[14]/(Se[10]+1),ut=(Se[9]+1)/Se[5],gt=(Se[9]-1)/Se[5],je=(Se[8]-1)/Se[0],U=(Fe[8]+1)/Fe[0],ve=$e*je,le=$e*U,fe=ge/(-je+U),se=fe*-je;ee.matrixWorld.decompose(H.position,H.quaternion,H.scale),H.translateX(se),H.translateZ(fe),H.matrixWorld.compose(H.position,H.quaternion,H.scale),H.matrixWorldInverse.copy(H.matrixWorld).invert();const Ye=$e+fe,De=Xe+fe,ye=ve-se,xe=le+(ge-se),Be=ut*Xe/De*Ye,dt=gt*Xe/De*Ye;H.projectionMatrix.makePerspective(ye,xe,Be,dt,Ye,De),H.projectionMatrixInverse.copy(H.projectionMatrix).invert()}function Y(H,ee){ee===null?H.matrixWorld.copy(H.matrix):H.matrixWorld.multiplyMatrices(ee.matrixWorld,H.matrix),H.matrixWorldInverse.copy(H.matrixWorld).invert()}this.updateCamera=function(H){if(i===null)return;T.near=M.near=x.near=H.near,T.far=M.far=x.far=H.far,(I!==T.near||S!==T.far)&&(i.updateRenderState({depthNear:T.near,depthFar:T.far}),I=T.near,S=T.far);const ee=H.parent,_e=T.cameras;Y(T,ee);for(let ge=0;ge<_e.length;ge++)Y(_e[ge],ee);_e.length===2?N(T,x,M):T.projectionMatrix.copy(x.projectionMatrix),O(H,T,ee)};function O(H,ee,_e){_e===null?H.matrix.copy(ee.matrixWorld):(H.matrix.copy(_e.matrixWorld),H.matrix.invert(),H.matrix.multiply(ee.matrixWorld)),H.matrix.decompose(H.position,H.quaternion,H.scale),H.updateMatrixWorld(!0);const ge=H.children;for(let Se=0,Fe=ge.length;Se<Fe;Se++)ge[Se].updateMatrixWorld(!0);H.projectionMatrix.copy(ee.projectionMatrix),H.projectionMatrixInverse.copy(ee.projectionMatrixInverse),H.isPerspectiveCamera&&(H.fov=er*2*Math.atan(1/H.projectionMatrix.elements[5]),H.zoom=1)}this.getCamera=function(){return T},this.getFoveation=function(){if(!(f===null&&d===null))return l},this.setFoveation=function(H){l=H,f!==null&&(f.fixedFoveation=H),d!==null&&d.fixedFoveation!==void 0&&(d.fixedFoveation=H)};let Z=null;function q(H,ee){if(h=ee.getViewerPose(c||a),p=ee,h!==null){const _e=h.views;d!==null&&(e.setRenderTargetFramebuffer(g,d.framebuffer),e.setRenderTarget(g));let ge=!1;_e.length!==T.cameras.length&&(T.cameras.length=0,ge=!0);for(let Se=0;Se<_e.length;Se++){const Fe=_e[Se];let $e=null;if(d!==null)$e=d.getViewport(Fe);else{const ut=u.getViewSubImage(f,Fe);$e=ut.viewport,Se===0&&(e.setRenderTargetTextures(g,ut.colorTexture,f.ignoreDepthValues?void 0:ut.depthStencilTexture),e.setRenderTarget(g))}let Xe=w[Se];Xe===void 0&&(Xe=new en,Xe.layers.enable(Se),Xe.viewport=new Tt,w[Se]=Xe),Xe.matrix.fromArray(Fe.transform.matrix),Xe.matrix.decompose(Xe.position,Xe.quaternion,Xe.scale),Xe.projectionMatrix.fromArray(Fe.projectionMatrix),Xe.projectionMatrixInverse.copy(Xe.projectionMatrix).invert(),Xe.viewport.set($e.x,$e.y,$e.width,$e.height),Se===0&&(T.matrix.copy(Xe.matrix),T.matrix.decompose(T.position,T.quaternion,T.scale)),ge===!0&&T.cameras.push(Xe)}}for(let _e=0;_e<y.length;_e++){const ge=v[_e],Se=y[_e];ge!==null&&Se!==void 0&&Se.update(ge,ee,c||a)}Z&&Z(H,ee),ee.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:ee}),p=null}const Q=new bm;Q.setAnimationLoop(q),this.setAnimationLoop=function(H){Z=H},this.dispose=function(){}}}function $b(s,e){function t(_,g){_.matrixAutoUpdate===!0&&_.updateMatrix(),g.value.copy(_.matrix)}function n(_,g){g.color.getRGB(_.fogColor.value,ym(s)),g.isFog?(_.fogNear.value=g.near,_.fogFar.value=g.far):g.isFogExp2&&(_.fogDensity.value=g.density)}function i(_,g,y,v,x){g.isMeshBasicMaterial||g.isMeshLambertMaterial?r(_,g):g.isMeshToonMaterial?(r(_,g),u(_,g)):g.isMeshPhongMaterial?(r(_,g),h(_,g)):g.isMeshStandardMaterial?(r(_,g),f(_,g),g.isMeshPhysicalMaterial&&d(_,g,x)):g.isMeshMatcapMaterial?(r(_,g),p(_,g)):g.isMeshDepthMaterial?r(_,g):g.isMeshDistanceMaterial?(r(_,g),m(_,g)):g.isMeshNormalMaterial?r(_,g):g.isLineBasicMaterial?(a(_,g),g.isLineDashedMaterial&&o(_,g)):g.isPointsMaterial?l(_,g,y,v):g.isSpriteMaterial?c(_,g):g.isShadowMaterial?(_.color.value.copy(g.color),_.opacity.value=g.opacity):g.isShaderMaterial&&(g.uniformsNeedUpdate=!1)}function r(_,g){_.opacity.value=g.opacity,g.color&&_.diffuse.value.copy(g.color),g.emissive&&_.emissive.value.copy(g.emissive).multiplyScalar(g.emissiveIntensity),g.map&&(_.map.value=g.map,t(g.map,_.mapTransform)),g.alphaMap&&(_.alphaMap.value=g.alphaMap,t(g.alphaMap,_.alphaMapTransform)),g.bumpMap&&(_.bumpMap.value=g.bumpMap,t(g.bumpMap,_.bumpMapTransform),_.bumpScale.value=g.bumpScale,g.side===pn&&(_.bumpScale.value*=-1)),g.normalMap&&(_.normalMap.value=g.normalMap,t(g.normalMap,_.normalMapTransform),_.normalScale.value.copy(g.normalScale),g.side===pn&&_.normalScale.value.negate()),g.displacementMap&&(_.displacementMap.value=g.displacementMap,t(g.displacementMap,_.displacementMapTransform),_.displacementScale.value=g.displacementScale,_.displacementBias.value=g.displacementBias),g.emissiveMap&&(_.emissiveMap.value=g.emissiveMap,t(g.emissiveMap,_.emissiveMapTransform)),g.specularMap&&(_.specularMap.value=g.specularMap,t(g.specularMap,_.specularMapTransform)),g.alphaTest>0&&(_.alphaTest.value=g.alphaTest);const y=e.get(g).envMap;if(y&&(_.envMap.value=y,_.flipEnvMap.value=y.isCubeTexture&&y.isRenderTargetTexture===!1?-1:1,_.reflectivity.value=g.reflectivity,_.ior.value=g.ior,_.refractionRatio.value=g.refractionRatio),g.lightMap){_.lightMap.value=g.lightMap;const v=s.useLegacyLights===!0?Math.PI:1;_.lightMapIntensity.value=g.lightMapIntensity*v,t(g.lightMap,_.lightMapTransform)}g.aoMap&&(_.aoMap.value=g.aoMap,_.aoMapIntensity.value=g.aoMapIntensity,t(g.aoMap,_.aoMapTransform))}function a(_,g){_.diffuse.value.copy(g.color),_.opacity.value=g.opacity,g.map&&(_.map.value=g.map,t(g.map,_.mapTransform))}function o(_,g){_.dashSize.value=g.dashSize,_.totalSize.value=g.dashSize+g.gapSize,_.scale.value=g.scale}function l(_,g,y,v){_.diffuse.value.copy(g.color),_.opacity.value=g.opacity,_.size.value=g.size*y,_.scale.value=v*.5,g.map&&(_.map.value=g.map,t(g.map,_.uvTransform)),g.alphaMap&&(_.alphaMap.value=g.alphaMap,t(g.alphaMap,_.alphaMapTransform)),g.alphaTest>0&&(_.alphaTest.value=g.alphaTest)}function c(_,g){_.diffuse.value.copy(g.color),_.opacity.value=g.opacity,_.rotation.value=g.rotation,g.map&&(_.map.value=g.map,t(g.map,_.mapTransform)),g.alphaMap&&(_.alphaMap.value=g.alphaMap,t(g.alphaMap,_.alphaMapTransform)),g.alphaTest>0&&(_.alphaTest.value=g.alphaTest)}function h(_,g){_.specular.value.copy(g.specular),_.shininess.value=Math.max(g.shininess,1e-4)}function u(_,g){g.gradientMap&&(_.gradientMap.value=g.gradientMap)}function f(_,g){_.metalness.value=g.metalness,g.metalnessMap&&(_.metalnessMap.value=g.metalnessMap,t(g.metalnessMap,_.metalnessMapTransform)),_.roughness.value=g.roughness,g.roughnessMap&&(_.roughnessMap.value=g.roughnessMap,t(g.roughnessMap,_.roughnessMapTransform)),e.get(g).envMap&&(_.envMapIntensity.value=g.envMapIntensity)}function d(_,g,y){_.ior.value=g.ior,g.sheen>0&&(_.sheenColor.value.copy(g.sheenColor).multiplyScalar(g.sheen),_.sheenRoughness.value=g.sheenRoughness,g.sheenColorMap&&(_.sheenColorMap.value=g.sheenColorMap,t(g.sheenColorMap,_.sheenColorMapTransform)),g.sheenRoughnessMap&&(_.sheenRoughnessMap.value=g.sheenRoughnessMap,t(g.sheenRoughnessMap,_.sheenRoughnessMapTransform))),g.clearcoat>0&&(_.clearcoat.value=g.clearcoat,_.clearcoatRoughness.value=g.clearcoatRoughness,g.clearcoatMap&&(_.clearcoatMap.value=g.clearcoatMap,t(g.clearcoatMap,_.clearcoatMapTransform)),g.clearcoatRoughnessMap&&(_.clearcoatRoughnessMap.value=g.clearcoatRoughnessMap,t(g.clearcoatRoughnessMap,_.clearcoatRoughnessMapTransform)),g.clearcoatNormalMap&&(_.clearcoatNormalMap.value=g.clearcoatNormalMap,t(g.clearcoatNormalMap,_.clearcoatNormalMapTransform),_.clearcoatNormalScale.value.copy(g.clearcoatNormalScale),g.side===pn&&_.clearcoatNormalScale.value.negate())),g.iridescence>0&&(_.iridescence.value=g.iridescence,_.iridescenceIOR.value=g.iridescenceIOR,_.iridescenceThicknessMinimum.value=g.iridescenceThicknessRange[0],_.iridescenceThicknessMaximum.value=g.iridescenceThicknessRange[1],g.iridescenceMap&&(_.iridescenceMap.value=g.iridescenceMap,t(g.iridescenceMap,_.iridescenceMapTransform)),g.iridescenceThicknessMap&&(_.iridescenceThicknessMap.value=g.iridescenceThicknessMap,t(g.iridescenceThicknessMap,_.iridescenceThicknessMapTransform))),g.transmission>0&&(_.transmission.value=g.transmission,_.transmissionSamplerMap.value=y.texture,_.transmissionSamplerSize.value.set(y.width,y.height),g.transmissionMap&&(_.transmissionMap.value=g.transmissionMap,t(g.transmissionMap,_.transmissionMapTransform)),_.thickness.value=g.thickness,g.thicknessMap&&(_.thicknessMap.value=g.thicknessMap,t(g.thicknessMap,_.thicknessMapTransform)),_.attenuationDistance.value=g.attenuationDistance,_.attenuationColor.value.copy(g.attenuationColor)),g.anisotropy>0&&(_.anisotropyVector.value.set(g.anisotropy*Math.cos(g.anisotropyRotation),g.anisotropy*Math.sin(g.anisotropyRotation)),g.anisotropyMap&&(_.anisotropyMap.value=g.anisotropyMap,t(g.anisotropyMap,_.anisotropyMapTransform))),_.specularIntensity.value=g.specularIntensity,_.specularColor.value.copy(g.specularColor),g.specularColorMap&&(_.specularColorMap.value=g.specularColorMap,t(g.specularColorMap,_.specularColorMapTransform)),g.specularIntensityMap&&(_.specularIntensityMap.value=g.specularIntensityMap,t(g.specularIntensityMap,_.specularIntensityMapTransform))}function p(_,g){g.matcap&&(_.matcap.value=g.matcap)}function m(_,g){const y=e.get(g).light;_.referencePosition.value.setFromMatrixPosition(y.matrixWorld),_.nearDistance.value=y.shadow.camera.near,_.farDistance.value=y.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function Yb(s,e,t,n){let i={},r={},a=[];const o=t.isWebGL2?s.getParameter(s.MAX_UNIFORM_BUFFER_BINDINGS):0;function l(y,v){const x=v.program;n.uniformBlockBinding(y,x)}function c(y,v){let x=i[y.id];x===void 0&&(p(y),x=h(y),i[y.id]=x,y.addEventListener("dispose",_));const M=v.program;n.updateUBOMapping(y,M);const w=e.render.frame;r[y.id]!==w&&(f(y),r[y.id]=w)}function h(y){const v=u();y.__bindingPointIndex=v;const x=s.createBuffer(),M=y.__size,w=y.usage;return s.bindBuffer(s.UNIFORM_BUFFER,x),s.bufferData(s.UNIFORM_BUFFER,M,w),s.bindBuffer(s.UNIFORM_BUFFER,null),s.bindBufferBase(s.UNIFORM_BUFFER,v,x),x}function u(){for(let y=0;y<o;y++)if(a.indexOf(y)===-1)return a.push(y),y;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function f(y){const v=i[y.id],x=y.uniforms,M=y.__cache;s.bindBuffer(s.UNIFORM_BUFFER,v);for(let w=0,T=x.length;w<T;w++){const I=x[w];if(d(I,w,M)===!0){const S=I.__offset,C=Array.isArray(I.value)?I.value:[I.value];let V=0;for(let X=0;X<C.length;X++){const F=C[X],B=m(F);typeof F=="number"?(I.__data[0]=F,s.bufferSubData(s.UNIFORM_BUFFER,S+V,I.__data)):F.isMatrix3?(I.__data[0]=F.elements[0],I.__data[1]=F.elements[1],I.__data[2]=F.elements[2],I.__data[3]=F.elements[0],I.__data[4]=F.elements[3],I.__data[5]=F.elements[4],I.__data[6]=F.elements[5],I.__data[7]=F.elements[0],I.__data[8]=F.elements[6],I.__data[9]=F.elements[7],I.__data[10]=F.elements[8],I.__data[11]=F.elements[0]):(F.toArray(I.__data,V),V+=B.storage/Float32Array.BYTES_PER_ELEMENT)}s.bufferSubData(s.UNIFORM_BUFFER,S,I.__data)}}s.bindBuffer(s.UNIFORM_BUFFER,null)}function d(y,v,x){const M=y.value;if(x[v]===void 0){if(typeof M=="number")x[v]=M;else{const w=Array.isArray(M)?M:[M],T=[];for(let I=0;I<w.length;I++)T.push(w[I].clone());x[v]=T}return!0}else if(typeof M=="number"){if(x[v]!==M)return x[v]=M,!0}else{const w=Array.isArray(x[v])?x[v]:[x[v]],T=Array.isArray(M)?M:[M];for(let I=0;I<w.length;I++){const S=w[I];if(S.equals(T[I])===!1)return S.copy(T[I]),!0}}return!1}function p(y){const v=y.uniforms;let x=0;const M=16;let w=0;for(let T=0,I=v.length;T<I;T++){const S=v[T],C={boundary:0,storage:0},V=Array.isArray(S.value)?S.value:[S.value];for(let X=0,F=V.length;X<F;X++){const B=V[X],N=m(B);C.boundary+=N.boundary,C.storage+=N.storage}if(S.__data=new Float32Array(C.storage/Float32Array.BYTES_PER_ELEMENT),S.__offset=x,T>0){w=x%M;const X=M-w;w!==0&&X-C.boundary<0&&(x+=M-w,S.__offset=x)}x+=C.storage}return w=x%M,w>0&&(x+=M-w),y.__size=x,y.__cache={},this}function m(y){const v={boundary:0,storage:0};return typeof y=="number"?(v.boundary=4,v.storage=4):y.isVector2?(v.boundary=8,v.storage=8):y.isVector3||y.isColor?(v.boundary=16,v.storage=12):y.isVector4?(v.boundary=16,v.storage=16):y.isMatrix3?(v.boundary=48,v.storage=48):y.isMatrix4?(v.boundary=64,v.storage=64):y.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",y),v}function _(y){const v=y.target;v.removeEventListener("dispose",_);const x=a.indexOf(v.__bindingPointIndex);a.splice(x,1),s.deleteBuffer(i[v.id]),delete i[v.id],delete r[v.id]}function g(){for(const y in i)s.deleteBuffer(i[y]);a=[],i={},r={}}return{bind:l,update:c,dispose:g}}function qb(){const s=Xr("canvas");return s.style.display="block",s}class Ho{constructor(e={}){const{canvas:t=qb(),context:n=null,depth:i=!0,stencil:r=!0,alpha:a=!1,antialias:o=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:c=!1,powerPreference:h="default",failIfMajorPerformanceCaveat:u=!1}=e;this.isWebGLRenderer=!0;let f;n!==null?f=n.getContextAttributes().alpha:f=a;const d=new Uint32Array(4),p=new Int32Array(4);let m=null,_=null;const g=[],y=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputColorSpace=at,this.useLegacyLights=!0,this.toneMapping=Qn,this.toneMappingExposure=1;const v=this;let x=!1,M=0,w=0,T=null,I=-1,S=null;const C=new Tt,V=new Tt;let X=null;const F=new be(0);let B=0,N=t.width,Y=t.height,O=1,Z=null,q=null;const Q=new Tt(0,0,N,Y),H=new Tt(0,0,N,Y);let ee=!1;const _e=new Bo;let ge=!1,Se=!1,Fe=null;const $e=new nt,Xe=new ne,ut=new E,gt={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function je(){return T===null?O:1}let U=n;function ve(P,j){for(let re=0;re<P.length;re++){const $=P[re],oe=t.getContext($,j);if(oe!==null)return oe}return null}try{const P={alpha:!0,depth:i,stencil:r,antialias:o,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:h,failIfMajorPerformanceCaveat:u};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${Po}`),t.addEventListener("webglcontextlost",Ee,!1),t.addEventListener("webglcontextrestored",te,!1),t.addEventListener("webglcontextcreationerror",Me,!1),U===null){const j=["webgl2","webgl","experimental-webgl"];if(v.isWebGL1Renderer===!0&&j.shift(),U=ve(j,P),U===null)throw ve(j)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}typeof WebGLRenderingContext<"u"&&U instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),U.getShaderPrecisionFormat===void 0&&(U.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(P){throw console.error("THREE.WebGLRenderer: "+P.message),P}let le,fe,se,Ye,De,ye,xe,Be,dt,L,A,ie,me,pe,D,ue,de,J,ke,qe,Ve,ze,He,et;function pt(){le=new cM(U),fe=new iM(U,le,e),le.init(fe),ze=new Am(U,le,fe),se=new Hb(U,le,fe),Ye=new fM(U),De=new Pb,ye=new Gb(U,le,se,De,fe,ze,Ye),xe=new rM(v),Be=new lM(v),dt=new by(U,fe),He=new tM(U,le,dt,fe),L=new hM(U,dt,Ye,He),A=new gM(U,L,dt,Ye),ke=new mM(U,fe,ye),ue=new sM(De),ie=new Rb(v,xe,Be,le,fe,He,ue),me=new $b(v,De),pe=new Ib,D=new Fb(le,fe),J=new eM(v,xe,Be,se,A,f,l),de=new Vb(v,A,fe),et=new Yb(U,Ye,fe,se),qe=new nM(U,le,Ye,fe),Ve=new uM(U,le,Ye,fe),Ye.programs=ie.programs,v.capabilities=fe,v.extensions=le,v.properties=De,v.renderLists=pe,v.shadowMap=de,v.state=se,v.info=Ye}pt();const z=new Xb(v,U);this.xr=z,this.getContext=function(){return U},this.getContextAttributes=function(){return U.getContextAttributes()},this.forceContextLoss=function(){const P=le.get("WEBGL_lose_context");P&&P.loseContext()},this.forceContextRestore=function(){const P=le.get("WEBGL_lose_context");P&&P.restoreContext()},this.getPixelRatio=function(){return O},this.setPixelRatio=function(P){P!==void 0&&(O=P,this.setSize(N,Y,!1))},this.getSize=function(P){return P.set(N,Y)},this.setSize=function(P,j,re=!0){if(z.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}N=P,Y=j,t.width=Math.floor(P*O),t.height=Math.floor(j*O),re===!0&&(t.style.width=P+"px",t.style.height=j+"px"),this.setViewport(0,0,P,j)},this.getDrawingBufferSize=function(P){return P.set(N*O,Y*O).floor()},this.setDrawingBufferSize=function(P,j,re){N=P,Y=j,O=re,t.width=Math.floor(P*re),t.height=Math.floor(j*re),this.setViewport(0,0,P,j)},this.getCurrentViewport=function(P){return P.copy(C)},this.getViewport=function(P){return P.copy(Q)},this.setViewport=function(P,j,re,$){P.isVector4?Q.set(P.x,P.y,P.z,P.w):Q.set(P,j,re,$),se.viewport(C.copy(Q).multiplyScalar(O).floor())},this.getScissor=function(P){return P.copy(H)},this.setScissor=function(P,j,re,$){P.isVector4?H.set(P.x,P.y,P.z,P.w):H.set(P,j,re,$),se.scissor(V.copy(H).multiplyScalar(O).floor())},this.getScissorTest=function(){return ee},this.setScissorTest=function(P){se.setScissorTest(ee=P)},this.setOpaqueSort=function(P){Z=P},this.setTransparentSort=function(P){q=P},this.getClearColor=function(P){return P.copy(J.getClearColor())},this.setClearColor=function(){J.setClearColor.apply(J,arguments)},this.getClearAlpha=function(){return J.getClearAlpha()},this.setClearAlpha=function(){J.setClearAlpha.apply(J,arguments)},this.clear=function(P=!0,j=!0,re=!0){let $=0;if(P){let oe=!1;if(T!==null){const Ge=T.texture.format;oe=Ge===oh||Ge===ah||Ge===rh}if(oe){const Ge=T.texture.type,Qe=Ge===pi||Ge===di||Ge===Io||Ge===Ai||Ge===ih||Ge===sh,tt=J.getClearColor(),it=J.getClearAlpha(),ft=tt.r,rt=tt.g,lt=tt.b;Qe?(d[0]=ft,d[1]=rt,d[2]=lt,d[3]=it,U.clearBufferuiv(U.COLOR,0,d)):(p[0]=ft,p[1]=rt,p[2]=lt,p[3]=it,U.clearBufferiv(U.COLOR,0,p))}else $|=U.COLOR_BUFFER_BIT}j&&($|=U.DEPTH_BUFFER_BIT),re&&($|=U.STENCIL_BUFFER_BIT),U.clear($)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Ee,!1),t.removeEventListener("webglcontextrestored",te,!1),t.removeEventListener("webglcontextcreationerror",Me,!1),pe.dispose(),D.dispose(),De.dispose(),xe.dispose(),Be.dispose(),A.dispose(),He.dispose(),et.dispose(),ie.dispose(),z.dispose(),z.removeEventListener("sessionstart",Nt),z.removeEventListener("sessionend",Xn),Fe&&(Fe.dispose(),Fe=null),hn.stop()};function Ee(P){P.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),x=!0}function te(){console.log("THREE.WebGLRenderer: Context Restored."),x=!1;const P=Ye.autoReset,j=de.enabled,re=de.autoUpdate,$=de.needsUpdate,oe=de.type;pt(),Ye.autoReset=P,de.enabled=j,de.autoUpdate=re,de.needsUpdate=$,de.type=oe}function Me(P){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",P.statusMessage)}function Pe(P){const j=P.target;j.removeEventListener("dispose",Pe),xt(j)}function xt(P){It(P),De.remove(P)}function It(P){const j=De.get(P).programs;j!==void 0&&(j.forEach(function(re){ie.releaseProgram(re)}),P.isShaderMaterial&&ie.releaseShaderCache(P))}this.renderBufferDirect=function(P,j,re,$,oe,Ge){j===null&&(j=gt);const Qe=oe.isMesh&&oe.matrixWorld.determinant()<0,tt=Tg(P,j,re,$,oe);se.setMaterial($,Qe);let it=re.index,ft=1;$.wireframe===!0&&(it=L.getWireframeAttribute(re),ft=2);const rt=re.drawRange,lt=re.attributes.position;let Ot=rt.start*ft,Bt=(rt.start+rt.count)*ft;Ge!==null&&(Ot=Math.max(Ot,Ge.start*ft),Bt=Math.min(Bt,(Ge.start+Ge.count)*ft)),it!==null?(Ot=Math.max(Ot,0),Bt=Math.min(Bt,it.count)):lt!=null&&(Ot=Math.max(Ot,0),Bt=Math.min(Bt,lt.count));const In=Bt-Ot;if(In<0||In===1/0)return;He.setup(oe,$,tt,re,it);let si,Wt=qe;if(it!==null&&(si=dt.get(it),Wt=Ve,Wt.setIndex(si)),oe.isMesh)$.wireframe===!0?(se.setLineWidth($.wireframeLinewidth*je()),Wt.setMode(U.LINES)):Wt.setMode(U.TRIANGLES);else if(oe.isLine){let _t=$.linewidth;_t===void 0&&(_t=1),se.setLineWidth(_t*je()),oe.isLineSegments?Wt.setMode(U.LINES):oe.isLineLoop?Wt.setMode(U.LINE_LOOP):Wt.setMode(U.LINE_STRIP)}else oe.isPoints?Wt.setMode(U.POINTS):oe.isSprite&&Wt.setMode(U.TRIANGLES);if(oe.isInstancedMesh)Wt.renderInstances(Ot,In,oe.count);else if(re.isInstancedBufferGeometry){const _t=re._maxInstanceCount!==void 0?re._maxInstanceCount:1/0,ul=Math.min(re.instanceCount,_t);Wt.renderInstances(Ot,In,ul)}else Wt.render(Ot,In)},this.compile=function(P,j){function re($,oe,Ge){$.transparent===!0&&$.side===vn&&$.forceSinglePass===!1?($.side=pn,$.needsUpdate=!0,fa($,oe,Ge),$.side=mi,$.needsUpdate=!0,fa($,oe,Ge),$.side=vn):fa($,oe,Ge)}_=D.get(P),_.init(),y.push(_),P.traverseVisible(function($){$.isLight&&$.layers.test(j.layers)&&(_.pushLight($),$.castShadow&&_.pushShadow($))}),_.setupLights(v.useLegacyLights),P.traverse(function($){const oe=$.material;if(oe)if(Array.isArray(oe))for(let Ge=0;Ge<oe.length;Ge++){const Qe=oe[Ge];re(Qe,P,$)}else re(oe,P,$)}),y.pop(),_=null};let jt=null;function Wn(P){jt&&jt(P)}function Nt(){hn.stop()}function Xn(){hn.start()}const hn=new bm;hn.setAnimationLoop(Wn),typeof self<"u"&&hn.setContext(self),this.setAnimationLoop=function(P){jt=P,z.setAnimationLoop(P),P===null?hn.stop():hn.start()},z.addEventListener("sessionstart",Nt),z.addEventListener("sessionend",Xn),this.render=function(P,j){if(j!==void 0&&j.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(x===!0)return;P.matrixWorldAutoUpdate===!0&&P.updateMatrixWorld(),j.parent===null&&j.matrixWorldAutoUpdate===!0&&j.updateMatrixWorld(),z.enabled===!0&&z.isPresenting===!0&&(z.cameraAutoUpdate===!0&&z.updateCamera(j),j=z.getCamera()),P.isScene===!0&&P.onBeforeRender(v,P,j,T),_=D.get(P,y.length),_.init(),y.push(_),$e.multiplyMatrices(j.projectionMatrix,j.matrixWorldInverse),_e.setFromProjectionMatrix($e),Se=this.localClippingEnabled,ge=ue.init(this.clippingPlanes,Se),m=pe.get(P,g.length),m.init(),g.push(m),qh(P,j,0,v.sortObjects),m.finish(),v.sortObjects===!0&&m.sort(Z,q),this.info.render.frame++,ge===!0&&ue.beginShadows();const re=_.state.shadowsArray;if(de.render(re,P,j),ge===!0&&ue.endShadows(),this.info.autoReset===!0&&this.info.reset(),J.render(m,P),_.setupLights(v.useLegacyLights),j.isArrayCamera){const $=j.cameras;for(let oe=0,Ge=$.length;oe<Ge;oe++){const Qe=$[oe];Zh(m,P,Qe,Qe.viewport)}}else Zh(m,P,j);T!==null&&(ye.updateMultisampleRenderTarget(T),ye.updateRenderTargetMipmap(T)),P.isScene===!0&&P.onAfterRender(v,P,j),He.resetDefaultState(),I=-1,S=null,y.pop(),y.length>0?_=y[y.length-1]:_=null,g.pop(),g.length>0?m=g[g.length-1]:m=null};function qh(P,j,re,$){if(P.visible===!1)return;if(P.layers.test(j.layers)){if(P.isGroup)re=P.renderOrder;else if(P.isLOD)P.autoUpdate===!0&&P.update(j);else if(P.isLight)_.pushLight(P),P.castShadow&&_.pushShadow(P);else if(P.isSprite){if(!P.frustumCulled||_e.intersectsSprite(P)){$&&ut.setFromMatrixPosition(P.matrixWorld).applyMatrix4($e);const Qe=A.update(P),tt=P.material;tt.visible&&m.push(P,Qe,tt,re,ut.z,null)}}else if((P.isMesh||P.isLine||P.isPoints)&&(!P.frustumCulled||_e.intersectsObject(P))){const Qe=A.update(P),tt=P.material;if($&&(P.boundingSphere!==void 0?(P.boundingSphere===null&&P.computeBoundingSphere(),ut.copy(P.boundingSphere.center)):(Qe.boundingSphere===null&&Qe.computeBoundingSphere(),ut.copy(Qe.boundingSphere.center)),ut.applyMatrix4(P.matrixWorld).applyMatrix4($e)),Array.isArray(tt)){const it=Qe.groups;for(let ft=0,rt=it.length;ft<rt;ft++){const lt=it[ft],Ot=tt[lt.materialIndex];Ot&&Ot.visible&&m.push(P,Qe,Ot,re,ut.z,lt)}}else tt.visible&&m.push(P,Qe,tt,re,ut.z,null)}}const Ge=P.children;for(let Qe=0,tt=Ge.length;Qe<tt;Qe++)qh(Ge[Qe],j,re,$)}function Zh(P,j,re,$){const oe=P.opaque,Ge=P.transmissive,Qe=P.transparent;_.setupLightsView(re),ge===!0&&ue.setGlobalState(v.clippingPlanes,re),Ge.length>0&&Eg(oe,Ge,j,re),$&&se.viewport(C.copy($)),oe.length>0&&ua(oe,j,re),Ge.length>0&&ua(Ge,j,re),Qe.length>0&&ua(Qe,j,re),se.buffers.depth.setTest(!0),se.buffers.depth.setMask(!0),se.buffers.color.setMask(!0),se.setPolygonOffset(!1)}function Eg(P,j,re,$){const oe=fe.isWebGL2;Fe===null&&(Fe=new Yt(1,1,{generateMipmaps:!0,type:le.has("EXT_color_buffer_half_float")?Sn:pi,minFilter:Ni,samples:oe?4:0})),v.getDrawingBufferSize(Xe),oe?Fe.setSize(Xe.x,Xe.y):Fe.setSize(So(Xe.x),So(Xe.y));const Ge=v.getRenderTarget();v.setRenderTarget(Fe),v.getClearColor(F),B=v.getClearAlpha(),B<1&&v.setClearColor(16777215,.5),v.clear();const Qe=v.toneMapping;v.toneMapping=Qn,ua(P,re,$),ye.updateMultisampleRenderTarget(Fe),ye.updateRenderTargetMipmap(Fe);let tt=!1;for(let it=0,ft=j.length;it<ft;it++){const rt=j[it],lt=rt.object,Ot=rt.geometry,Bt=rt.material,In=rt.group;if(Bt.side===vn&&lt.layers.test($.layers)){const si=Bt.side;Bt.side=pn,Bt.needsUpdate=!0,jh(lt,re,$,Ot,Bt,In),Bt.side=si,Bt.needsUpdate=!0,tt=!0}}tt===!0&&(ye.updateMultisampleRenderTarget(Fe),ye.updateRenderTargetMipmap(Fe)),v.setRenderTarget(Ge),v.setClearColor(F,B),v.toneMapping=Qe}function ua(P,j,re){const $=j.isScene===!0?j.overrideMaterial:null;for(let oe=0,Ge=P.length;oe<Ge;oe++){const Qe=P[oe],tt=Qe.object,it=Qe.geometry,ft=$===null?Qe.material:$,rt=Qe.group;tt.layers.test(re.layers)&&jh(tt,j,re,it,ft,rt)}}function jh(P,j,re,$,oe,Ge){P.onBeforeRender(v,j,re,$,oe,Ge),P.modelViewMatrix.multiplyMatrices(re.matrixWorldInverse,P.matrixWorld),P.normalMatrix.getNormalMatrix(P.modelViewMatrix),oe.onBeforeRender(v,j,re,$,P,Ge),oe.transparent===!0&&oe.side===vn&&oe.forceSinglePass===!1?(oe.side=pn,oe.needsUpdate=!0,v.renderBufferDirect(re,j,$,oe,P,Ge),oe.side=mi,oe.needsUpdate=!0,v.renderBufferDirect(re,j,$,oe,P,Ge),oe.side=vn):v.renderBufferDirect(re,j,$,oe,P,Ge),P.onAfterRender(v,j,re,$,oe,Ge)}function fa(P,j,re){j.isScene!==!0&&(j=gt);const $=De.get(P),oe=_.state.lights,Ge=_.state.shadowsArray,Qe=oe.state.version,tt=ie.getParameters(P,oe.state,Ge,j,re),it=ie.getProgramCacheKey(tt);let ft=$.programs;$.environment=P.isMeshStandardMaterial?j.environment:null,$.fog=j.fog,$.envMap=(P.isMeshStandardMaterial?Be:xe).get(P.envMap||$.environment),ft===void 0&&(P.addEventListener("dispose",Pe),ft=new Map,$.programs=ft);let rt=ft.get(it);if(rt!==void 0){if($.currentProgram===rt&&$.lightsStateVersion===Qe)return Jh(P,tt),rt}else tt.uniforms=ie.getUniforms(P),P.onBuild(re,tt,v),P.onBeforeCompile(tt,v),rt=ie.acquireProgram(tt,it),ft.set(it,rt),$.uniforms=tt.uniforms;const lt=$.uniforms;(!P.isShaderMaterial&&!P.isRawShaderMaterial||P.clipping===!0)&&(lt.clippingPlanes=ue.uniform),Jh(P,tt),$.needsLights=Cg(P),$.lightsStateVersion=Qe,$.needsLights&&(lt.ambientLightColor.value=oe.state.ambient,lt.lightProbe.value=oe.state.probe,lt.directionalLights.value=oe.state.directional,lt.directionalLightShadows.value=oe.state.directionalShadow,lt.spotLights.value=oe.state.spot,lt.spotLightShadows.value=oe.state.spotShadow,lt.rectAreaLights.value=oe.state.rectArea,lt.ltc_1.value=oe.state.rectAreaLTC1,lt.ltc_2.value=oe.state.rectAreaLTC2,lt.pointLights.value=oe.state.point,lt.pointLightShadows.value=oe.state.pointShadow,lt.hemisphereLights.value=oe.state.hemi,lt.directionalShadowMap.value=oe.state.directionalShadowMap,lt.directionalShadowMatrix.value=oe.state.directionalShadowMatrix,lt.spotShadowMap.value=oe.state.spotShadowMap,lt.spotLightMatrix.value=oe.state.spotLightMatrix,lt.spotLightMap.value=oe.state.spotLightMap,lt.pointShadowMap.value=oe.state.pointShadowMap,lt.pointShadowMatrix.value=oe.state.pointShadowMatrix);const Ot=rt.getUniforms(),Bt=ho.seqWithValue(Ot.seq,lt);return $.currentProgram=rt,$.uniformsList=Bt,rt}function Jh(P,j){const re=De.get(P);re.outputColorSpace=j.outputColorSpace,re.instancing=j.instancing,re.skinning=j.skinning,re.morphTargets=j.morphTargets,re.morphNormals=j.morphNormals,re.morphColors=j.morphColors,re.morphTargetsCount=j.morphTargetsCount,re.numClippingPlanes=j.numClippingPlanes,re.numIntersection=j.numClipIntersection,re.vertexAlphas=j.vertexAlphas,re.vertexTangents=j.vertexTangents,re.toneMapping=j.toneMapping}function Tg(P,j,re,$,oe){j.isScene!==!0&&(j=gt),ye.resetTextureUnits();const Ge=j.fog,Qe=$.isMeshStandardMaterial?j.environment:null,tt=T===null?v.outputColorSpace:T.isXRRenderTarget===!0?T.texture.colorSpace:Fn,it=($.isMeshStandardMaterial?Be:xe).get($.envMap||Qe),ft=$.vertexColors===!0&&!!re.attributes.color&&re.attributes.color.itemSize===4,rt=!!re.attributes.tangent&&(!!$.normalMap||$.anisotropy>0),lt=!!re.morphAttributes.position,Ot=!!re.morphAttributes.normal,Bt=!!re.morphAttributes.color,In=$.toneMapped?v.toneMapping:Qn,si=re.morphAttributes.position||re.morphAttributes.normal||re.morphAttributes.color,Wt=si!==void 0?si.length:0,_t=De.get($),ul=_.state.lights;if(ge===!0&&(Se===!0||P!==S)){const xn=P===S&&$.id===I;ue.setState($,P,xn)}let Jt=!1;$.version===_t.__version?(_t.needsLights&&_t.lightsStateVersion!==ul.state.version||_t.outputColorSpace!==tt||oe.isInstancedMesh&&_t.instancing===!1||!oe.isInstancedMesh&&_t.instancing===!0||oe.isSkinnedMesh&&_t.skinning===!1||!oe.isSkinnedMesh&&_t.skinning===!0||_t.envMap!==it||$.fog===!0&&_t.fog!==Ge||_t.numClippingPlanes!==void 0&&(_t.numClippingPlanes!==ue.numPlanes||_t.numIntersection!==ue.numIntersection)||_t.vertexAlphas!==ft||_t.vertexTangents!==rt||_t.morphTargets!==lt||_t.morphNormals!==Ot||_t.morphColors!==Bt||_t.toneMapping!==In||fe.isWebGL2===!0&&_t.morphTargetsCount!==Wt)&&(Jt=!0):(Jt=!0,_t.__version=$.version);let Yi=_t.currentProgram;Jt===!0&&(Yi=fa($,j,oe));let Kh=!1,hr=!1,fl=!1;const un=Yi.getUniforms(),qi=_t.uniforms;if(se.useProgram(Yi.program)&&(Kh=!0,hr=!0,fl=!0),$.id!==I&&(I=$.id,hr=!0),Kh||S!==P){if(un.setValue(U,"projectionMatrix",P.projectionMatrix),fe.logarithmicDepthBuffer&&un.setValue(U,"logDepthBufFC",2/(Math.log(P.far+1)/Math.LN2)),S!==P&&(S=P,hr=!0,fl=!0),$.isShaderMaterial||$.isMeshPhongMaterial||$.isMeshToonMaterial||$.isMeshStandardMaterial||$.envMap){const xn=un.map.cameraPosition;xn!==void 0&&xn.setValue(U,ut.setFromMatrixPosition(P.matrixWorld))}($.isMeshPhongMaterial||$.isMeshToonMaterial||$.isMeshLambertMaterial||$.isMeshBasicMaterial||$.isMeshStandardMaterial||$.isShaderMaterial)&&un.setValue(U,"isOrthographic",P.isOrthographicCamera===!0),($.isMeshPhongMaterial||$.isMeshToonMaterial||$.isMeshLambertMaterial||$.isMeshBasicMaterial||$.isMeshStandardMaterial||$.isShaderMaterial||$.isShadowMaterial||oe.isSkinnedMesh)&&un.setValue(U,"viewMatrix",P.matrixWorldInverse)}if(oe.isSkinnedMesh){un.setOptional(U,oe,"bindMatrix"),un.setOptional(U,oe,"bindMatrixInverse");const xn=oe.skeleton;xn&&(fe.floatVertexTextures?(xn.boneTexture===null&&xn.computeBoneTexture(),un.setValue(U,"boneTexture",xn.boneTexture,ye),un.setValue(U,"boneTextureSize",xn.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const dl=re.morphAttributes;if((dl.position!==void 0||dl.normal!==void 0||dl.color!==void 0&&fe.isWebGL2===!0)&&ke.update(oe,re,Yi),(hr||_t.receiveShadow!==oe.receiveShadow)&&(_t.receiveShadow=oe.receiveShadow,un.setValue(U,"receiveShadow",oe.receiveShadow)),$.isMeshGouraudMaterial&&$.envMap!==null&&(qi.envMap.value=it,qi.flipEnvMap.value=it.isCubeTexture&&it.isRenderTargetTexture===!1?-1:1),hr&&(un.setValue(U,"toneMappingExposure",v.toneMappingExposure),_t.needsLights&&Ag(qi,fl),Ge&&$.fog===!0&&me.refreshFogUniforms(qi,Ge),me.refreshMaterialUniforms(qi,$,O,Y,Fe),ho.upload(U,_t.uniformsList,qi,ye)),$.isShaderMaterial&&$.uniformsNeedUpdate===!0&&(ho.upload(U,_t.uniformsList,qi,ye),$.uniformsNeedUpdate=!1),$.isSpriteMaterial&&un.setValue(U,"center",oe.center),un.setValue(U,"modelViewMatrix",oe.modelViewMatrix),un.setValue(U,"normalMatrix",oe.normalMatrix),un.setValue(U,"modelMatrix",oe.matrixWorld),$.isShaderMaterial||$.isRawShaderMaterial){const xn=$.uniformsGroups;for(let pl=0,Rg=xn.length;pl<Rg;pl++)if(fe.isWebGL2){const Qh=xn[pl];et.update(Qh,Yi),et.bind(Qh,Yi)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return Yi}function Ag(P,j){P.ambientLightColor.needsUpdate=j,P.lightProbe.needsUpdate=j,P.directionalLights.needsUpdate=j,P.directionalLightShadows.needsUpdate=j,P.pointLights.needsUpdate=j,P.pointLightShadows.needsUpdate=j,P.spotLights.needsUpdate=j,P.spotLightShadows.needsUpdate=j,P.rectAreaLights.needsUpdate=j,P.hemisphereLights.needsUpdate=j}function Cg(P){return P.isMeshLambertMaterial||P.isMeshToonMaterial||P.isMeshPhongMaterial||P.isMeshStandardMaterial||P.isShadowMaterial||P.isShaderMaterial&&P.lights===!0}this.getActiveCubeFace=function(){return M},this.getActiveMipmapLevel=function(){return w},this.getRenderTarget=function(){return T},this.setRenderTargetTextures=function(P,j,re){De.get(P.texture).__webglTexture=j,De.get(P.depthTexture).__webglTexture=re;const $=De.get(P);$.__hasExternalTextures=!0,$.__hasExternalTextures&&($.__autoAllocateDepthBuffer=re===void 0,$.__autoAllocateDepthBuffer||le.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),$.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(P,j){const re=De.get(P);re.__webglFramebuffer=j,re.__useDefaultFramebuffer=j===void 0},this.setRenderTarget=function(P,j=0,re=0){T=P,M=j,w=re;let $=!0,oe=null,Ge=!1,Qe=!1;if(P){const it=De.get(P);it.__useDefaultFramebuffer!==void 0?(se.bindFramebuffer(U.FRAMEBUFFER,null),$=!1):it.__webglFramebuffer===void 0?ye.setupRenderTarget(P):it.__hasExternalTextures&&ye.rebindTextures(P,De.get(P.texture).__webglTexture,De.get(P.depthTexture).__webglTexture);const ft=P.texture;(ft.isData3DTexture||ft.isDataArrayTexture||ft.isCompressedArrayTexture)&&(Qe=!0);const rt=De.get(P).__webglFramebuffer;P.isWebGLCubeRenderTarget?(oe=rt[j],Ge=!0):fe.isWebGL2&&P.samples>0&&ye.useMultisampledRTT(P)===!1?oe=De.get(P).__webglMultisampledFramebuffer:oe=rt,C.copy(P.viewport),V.copy(P.scissor),X=P.scissorTest}else C.copy(Q).multiplyScalar(O).floor(),V.copy(H).multiplyScalar(O).floor(),X=ee;if(se.bindFramebuffer(U.FRAMEBUFFER,oe)&&fe.drawBuffers&&$&&se.drawBuffers(P,oe),se.viewport(C),se.scissor(V),se.setScissorTest(X),Ge){const it=De.get(P.texture);U.framebufferTexture2D(U.FRAMEBUFFER,U.COLOR_ATTACHMENT0,U.TEXTURE_CUBE_MAP_POSITIVE_X+j,it.__webglTexture,re)}else if(Qe){const it=De.get(P.texture),ft=j||0;U.framebufferTextureLayer(U.FRAMEBUFFER,U.COLOR_ATTACHMENT0,it.__webglTexture,re||0,ft)}I=-1},this.readRenderTargetPixels=function(P,j,re,$,oe,Ge,Qe){if(!(P&&P.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let tt=De.get(P).__webglFramebuffer;if(P.isWebGLCubeRenderTarget&&Qe!==void 0&&(tt=tt[Qe]),tt){se.bindFramebuffer(U.FRAMEBUFFER,tt);try{const it=P.texture,ft=it.format,rt=it.type;if(ft!==wn&&ze.convert(ft)!==U.getParameter(U.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const lt=rt===Sn&&(le.has("EXT_color_buffer_half_float")||fe.isWebGL2&&le.has("EXT_color_buffer_float"));if(rt!==pi&&ze.convert(rt)!==U.getParameter(U.IMPLEMENTATION_COLOR_READ_TYPE)&&!(rt===jn&&(fe.isWebGL2||le.has("OES_texture_float")||le.has("WEBGL_color_buffer_float")))&&!lt){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}j>=0&&j<=P.width-$&&re>=0&&re<=P.height-oe&&U.readPixels(j,re,$,oe,ze.convert(ft),ze.convert(rt),Ge)}finally{const it=T!==null?De.get(T).__webglFramebuffer:null;se.bindFramebuffer(U.FRAMEBUFFER,it)}}},this.copyFramebufferToTexture=function(P,j,re=0){const $=Math.pow(2,-re),oe=Math.floor(j.image.width*$),Ge=Math.floor(j.image.height*$);ye.setTexture2D(j,0),U.copyTexSubImage2D(U.TEXTURE_2D,re,0,0,P.x,P.y,oe,Ge),se.unbindTexture()},this.copyTextureToTexture=function(P,j,re,$=0){const oe=j.image.width,Ge=j.image.height,Qe=ze.convert(re.format),tt=ze.convert(re.type);ye.setTexture2D(re,0),U.pixelStorei(U.UNPACK_FLIP_Y_WEBGL,re.flipY),U.pixelStorei(U.UNPACK_PREMULTIPLY_ALPHA_WEBGL,re.premultiplyAlpha),U.pixelStorei(U.UNPACK_ALIGNMENT,re.unpackAlignment),j.isDataTexture?U.texSubImage2D(U.TEXTURE_2D,$,P.x,P.y,oe,Ge,Qe,tt,j.image.data):j.isCompressedTexture?U.compressedTexSubImage2D(U.TEXTURE_2D,$,P.x,P.y,j.mipmaps[0].width,j.mipmaps[0].height,Qe,j.mipmaps[0].data):U.texSubImage2D(U.TEXTURE_2D,$,P.x,P.y,Qe,tt,j.image),$===0&&re.generateMipmaps&&U.generateMipmap(U.TEXTURE_2D),se.unbindTexture()},this.copyTextureToTexture3D=function(P,j,re,$,oe=0){if(v.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Ge=P.max.x-P.min.x+1,Qe=P.max.y-P.min.y+1,tt=P.max.z-P.min.z+1,it=ze.convert($.format),ft=ze.convert($.type);let rt;if($.isData3DTexture)ye.setTexture3D($,0),rt=U.TEXTURE_3D;else if($.isDataArrayTexture)ye.setTexture2DArray($,0),rt=U.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}U.pixelStorei(U.UNPACK_FLIP_Y_WEBGL,$.flipY),U.pixelStorei(U.UNPACK_PREMULTIPLY_ALPHA_WEBGL,$.premultiplyAlpha),U.pixelStorei(U.UNPACK_ALIGNMENT,$.unpackAlignment);const lt=U.getParameter(U.UNPACK_ROW_LENGTH),Ot=U.getParameter(U.UNPACK_IMAGE_HEIGHT),Bt=U.getParameter(U.UNPACK_SKIP_PIXELS),In=U.getParameter(U.UNPACK_SKIP_ROWS),si=U.getParameter(U.UNPACK_SKIP_IMAGES),Wt=re.isCompressedTexture?re.mipmaps[0]:re.image;U.pixelStorei(U.UNPACK_ROW_LENGTH,Wt.width),U.pixelStorei(U.UNPACK_IMAGE_HEIGHT,Wt.height),U.pixelStorei(U.UNPACK_SKIP_PIXELS,P.min.x),U.pixelStorei(U.UNPACK_SKIP_ROWS,P.min.y),U.pixelStorei(U.UNPACK_SKIP_IMAGES,P.min.z),re.isDataTexture||re.isData3DTexture?U.texSubImage3D(rt,oe,j.x,j.y,j.z,Ge,Qe,tt,it,ft,Wt.data):re.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),U.compressedTexSubImage3D(rt,oe,j.x,j.y,j.z,Ge,Qe,tt,it,Wt.data)):U.texSubImage3D(rt,oe,j.x,j.y,j.z,Ge,Qe,tt,it,ft,Wt),U.pixelStorei(U.UNPACK_ROW_LENGTH,lt),U.pixelStorei(U.UNPACK_IMAGE_HEIGHT,Ot),U.pixelStorei(U.UNPACK_SKIP_PIXELS,Bt),U.pixelStorei(U.UNPACK_SKIP_ROWS,In),U.pixelStorei(U.UNPACK_SKIP_IMAGES,si),oe===0&&$.generateMipmaps&&U.generateMipmap(rt),se.unbindTexture()},this.initTexture=function(P){P.isCubeTexture?ye.setTextureCube(P,0):P.isData3DTexture?ye.setTexture3D(P,0):P.isDataArrayTexture||P.isCompressedArrayTexture?ye.setTexture2DArray(P,0):ye.setTexture2D(P,0),se.unbindTexture()},this.resetState=function(){M=0,w=0,T=null,se.reset(),He.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Jn}get physicallyCorrectLights(){return console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights}set physicallyCorrectLights(e){console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!e}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===at?Ri:ch}set outputEncoding(e){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=e===Ri?at:Fn}}class Pm extends Ho{}Pm.prototype.isWebGL1Renderer=!0;class Go{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new be(e),this.density=t}clone(){return new Go(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class Wo{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new be(e),this.near=t,this.far=n}clone(){return new Wo(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class Xo extends vt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t}}class $o{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Gr,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Tn()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,r=this.stride;i<r;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Tn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Tn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const fn=new E;class gs{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)fn.fromBufferAttribute(this,t),fn.applyMatrix4(e),this.setXYZ(t,fn.x,fn.y,fn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)fn.fromBufferAttribute(this,t),fn.applyNormalMatrix(e),this.setXYZ(t,fn.x,fn.y,fn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)fn.fromBufferAttribute(this,t),fn.transformDirection(e),this.setXYZ(t,fn.x,fn.y,fn.z);return this}setX(e,t){return this.normalized&&(t=ht(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=ht(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=ht(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=ht(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=En(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=En(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=En(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=En(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=ht(t,this.array),n=ht(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=ht(t,this.array),n=ht(n,this.array),i=ht(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=ht(t,this.array),n=ht(n,this.array),i=ht(i,this.array),r=ht(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=r,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return new At(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new gs(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class $r extends ln{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new be(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let Fs;const mr=new E,Bs=new E,zs=new E,Vs=new ne,gr=new ne,Lm=new nt,Ua=new E,_r=new E,Na=new E,nf=new ne,Bl=new ne,sf=new ne;class wo extends vt{constructor(e){if(super(),this.isSprite=!0,this.type="Sprite",Fs===void 0){Fs=new st;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new $o(t,5);Fs.setIndex([0,1,2,0,2,3]),Fs.setAttribute("position",new gs(n,3,0,!1)),Fs.setAttribute("uv",new gs(n,2,3,!1))}this.geometry=Fs,this.material=e!==void 0?e:new $r,this.center=new ne(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Bs.setFromMatrixScale(this.matrixWorld),Lm.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),zs.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Bs.multiplyScalar(-zs.z);const n=this.material.rotation;let i,r;n!==0&&(r=Math.cos(n),i=Math.sin(n));const a=this.center;Oa(Ua.set(-.5,-.5,0),zs,a,Bs,i,r),Oa(_r.set(.5,-.5,0),zs,a,Bs,i,r),Oa(Na.set(.5,.5,0),zs,a,Bs,i,r),nf.set(0,0),Bl.set(1,0),sf.set(1,1);let o=e.ray.intersectTriangle(Ua,_r,Na,!1,mr);if(o===null&&(Oa(_r.set(-.5,.5,0),zs,a,Bs,i,r),Bl.set(0,1),o=e.ray.intersectTriangle(Ua,Na,_r,!1,mr),o===null))return;const l=e.ray.origin.distanceTo(mr);l<e.near||l>e.far||t.push({distance:l,point:mr.clone(),uv:_n.getInterpolation(mr,Ua,_r,Na,nf,Bl,sf,new ne),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function Oa(s,e,t,n,i,r){Vs.subVectors(s,t).addScalar(.5).multiply(n),i!==void 0?(gr.x=r*Vs.x-i*Vs.y,gr.y=i*Vs.x+r*Vs.y):gr.copy(Vs),s.copy(e),s.x+=gr.x,s.y+=gr.y,s.applyMatrix4(Lm)}const ka=new E,rf=new E;class Im extends vt{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const r=t[n];this.addLevel(r.object.clone(),r.distance,r.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let r;for(r=0;r<i.length&&!(t<i[r].distance);r++);return i.splice(r,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let r=t[n].distance;if(t[n].object.visible&&(r-=r*t[n].hysteresis),e<r)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){ka.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(ka);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){ka.setFromMatrixPosition(e.matrixWorld),rf.setFromMatrixPosition(this.matrixWorld);const n=ka.distanceTo(rf)/e.zoom;t[0].object.visible=!0;let i,r;for(i=1,r=t.length;i<r;i++){let a=t[i].distance;if(t[i].object.visible&&(a-=a*t[i].hysteresis),n>=a)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<r;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,r=n.length;i<r;i++){const a=n[i];t.object.levels.push({object:a.object.uuid,distance:a.distance,hysteresis:a.hysteresis})}return t}}const af=new E,of=new Tt,lf=new Tt,Zb=new E,cf=new nt,Hs=new E,zl=new zn,hf=new nt,Vl=new rr;class Dm extends Rt{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new nt,this.bindMatrixInverse=new nt,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new ii),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)Hs.fromBufferAttribute(t,n),this.applyBoneTransform(n,Hs),this.boundingBox.expandByPoint(Hs)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new zn),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)Hs.fromBufferAttribute(t,n),this.applyBoneTransform(n,Hs),this.boundingSphere.expandByPoint(Hs)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),zl.copy(this.boundingSphere),zl.applyMatrix4(i),e.ray.intersectsSphere(zl)!==!1&&(hf.copy(i).invert(),Vl.copy(e.ray).applyMatrix4(hf),!(this.boundingBox!==null&&Vl.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,Vl)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Tt,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,i=this.geometry;of.fromBufferAttribute(i.attributes.skinIndex,e),lf.fromBufferAttribute(i.attributes.skinWeight,e),af.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let r=0;r<4;r++){const a=lf.getComponent(r);if(a!==0){const o=of.getComponent(r);cf.multiplyMatrices(n.bones[o].matrixWorld,n.boneInverses[o]),t.addScaledVector(Zb.copy(af).applyMatrix4(cf),a)}}return t.applyMatrix4(this.bindMatrixInverse)}boneTransform(e,t){return console.warn("THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151."),this.applyBoneTransform(e,t)}}class vh extends vt{constructor(){super(),this.isBone=!0,this.type="Bone"}}class Ks extends Gt{constructor(e=null,t=1,n=1,i,r,a,o,l,c=Vt,h=Vt,u,f){super(null,a,o,l,c,h,i,r,u,f),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const uf=new nt,jb=new nt;class Yo{constructor(e=[],t=[]){this.uuid=Tn(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new nt)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new nt;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let r=0,a=e.length;r<a;r++){const o=e[r]?e[r].matrixWorld:jb;uf.multiplyMatrices(o,t[r]),uf.toArray(n,r*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new Yo(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=gm(e),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new Ks(t,e,e,wn,jn);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const r=e.bones[n];let a=t[r];a===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),a=new vh),this.bones.push(a),this.boneInverses.push(new nt().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,r=t.length;i<r;i++){const a=t[i];e.bones.push(a.uuid);const o=n[i];e.boneInverses.push(o.toArray())}return e}}class nr extends At{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const Gs=new nt,ff=new nt,Fa=[],df=new ii,Jb=new nt,vr=new Rt,yr=new zn;class Eo extends Rt{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new nr(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,Jb)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new ii),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,Gs),df.copy(e.boundingBox).applyMatrix4(Gs),this.boundingBox.union(df)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new zn),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,Gs),yr.copy(e.boundingSphere).applyMatrix4(Gs),this.boundingSphere.union(yr)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(vr.geometry=this.geometry,vr.material=this.material,vr.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),yr.copy(this.boundingSphere),yr.applyMatrix4(n),e.ray.intersectsSphere(yr)!==!1))for(let r=0;r<i;r++){this.getMatrixAt(r,Gs),ff.multiplyMatrices(n,Gs),vr.matrixWorld=ff,vr.raycast(e,Fa);for(let a=0,o=Fa.length;a<o;a++){const l=Fa[a];l.instanceId=r,l.object=this,t.push(l)}Fa.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new nr(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class cn extends ln{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new be(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const pf=new E,mf=new E,gf=new nt,Hl=new rr,Ba=new zn;class ki extends vt{constructor(e=new st,t=new cn){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,r=t.count;i<r;i++)pf.fromBufferAttribute(t,i-1),mf.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=pf.distanceTo(mf);e.setAttribute("lineDistance",new We(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Line.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Ba.copy(n.boundingSphere),Ba.applyMatrix4(i),Ba.radius+=r,e.ray.intersectsSphere(Ba)===!1)return;gf.copy(i).invert(),Hl.copy(e.ray).applyMatrix4(gf);const o=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,c=new E,h=new E,u=new E,f=new E,d=this.isLineSegments?2:1,p=n.index,_=n.attributes.position;if(p!==null){const g=Math.max(0,a.start),y=Math.min(p.count,a.start+a.count);for(let v=g,x=y-1;v<x;v+=d){const M=p.getX(v),w=p.getX(v+1);if(c.fromBufferAttribute(_,M),h.fromBufferAttribute(_,w),Hl.distanceSqToSegment(c,h,f,u)>l)continue;f.applyMatrix4(this.matrixWorld);const I=e.ray.origin.distanceTo(f);I<e.near||I>e.far||t.push({distance:I,point:u.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this})}}else{const g=Math.max(0,a.start),y=Math.min(_.count,a.start+a.count);for(let v=g,x=y-1;v<x;v+=d){if(c.fromBufferAttribute(_,v),h.fromBufferAttribute(_,v+1),Hl.distanceSqToSegment(c,h,f,u)>l)continue;f.applyMatrix4(this.matrixWorld);const w=e.ray.origin.distanceTo(f);w<e.near||w>e.far||t.push({distance:w,point:u.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}}const _f=new E,vf=new E;class Vn extends ki{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,r=t.count;i<r;i+=2)_f.fromBufferAttribute(t,i),vf.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+_f.distanceTo(vf);e.setAttribute("lineDistance",new We(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class Um extends ki{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class yh extends ln{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new be(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const yf=new nt,zc=new rr,za=new zn,Va=new E;class Nm extends vt{constructor(e=new st,t=new yh){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Points.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),za.copy(n.boundingSphere),za.applyMatrix4(i),za.radius+=r,e.ray.intersectsSphere(za)===!1)return;yf.copy(i).invert(),zc.copy(e.ray).applyMatrix4(yf);const o=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,c=n.index,u=n.attributes.position;if(c!==null){const f=Math.max(0,a.start),d=Math.min(c.count,a.start+a.count);for(let p=f,m=d;p<m;p++){const _=c.getX(p);Va.fromBufferAttribute(u,_),xf(Va,_,l,i,e,t,this)}}else{const f=Math.max(0,a.start),d=Math.min(u.count,a.start+a.count);for(let p=f,m=d;p<m;p++)Va.fromBufferAttribute(u,p),xf(Va,p,l,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}}function xf(s,e,t,n,i,r,a){const o=zc.distanceSqToPoint(s);if(o<t){const l=new E;zc.closestPointToPoint(s,l),l.applyMatrix4(n);const c=i.ray.origin.distanceTo(l);if(c<i.near||c>i.far)return;r.push({distance:c,distanceToRay:Math.sqrt(o),point:l,index:e,face:null,object:a})}}class Kb extends Gt{constructor(e,t,n,i,r,a,o,l,c){super(e,t,n,i,r,a,o,l,c),this.isVideoTexture=!0,this.minFilter=a!==void 0?a:Ht,this.magFilter=r!==void 0?r:Ht,this.generateMipmaps=!1;const h=this;function u(){h.needsUpdate=!0,e.requestVideoFrameCallback(u)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(u)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class Qb extends Gt{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=Vt,this.minFilter=Vt,this.generateMipmaps=!1,this.needsUpdate=!0}}class xh extends Gt{constructor(e,t,n,i,r,a,o,l,c,h,u,f){super(null,a,o,l,c,h,i,r,u,f),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class eS extends xh{constructor(e,t,n,i,r,a){super(e,t,n,r,a),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=an}}class Om extends Gt{constructor(e,t,n,i,r,a,o,l,c){super(e,t,n,i,r,a,o,l,c),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Hn{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),r=0;t.push(0);for(let a=1;a<=e;a++)n=this.getPoint(a/e),r+=n.distanceTo(i),t.push(r),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const r=n.length;let a;t?a=t:a=e*n[r-1];let o=0,l=r-1,c;for(;o<=l;)if(i=Math.floor(o+(l-o)/2),c=n[i]-a,c<0)o=i+1;else if(c>0)l=i-1;else{l=i;break}if(i=l,n[i]===a)return i/(r-1);const h=n[i],f=n[i+1]-h,d=(a-h)/f;return(i+d)/(r-1)}getTangent(e,t){let i=e-1e-4,r=e+1e-4;i<0&&(i=0),r>1&&(r=1);const a=this.getPoint(i),o=this.getPoint(r),l=t||(a.isVector2?new ne:new E);return l.copy(o).sub(a).normalize(),l}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new E,i=[],r=[],a=[],o=new E,l=new nt;for(let d=0;d<=e;d++){const p=d/e;i[d]=this.getTangentAt(p,new E)}r[0]=new E,a[0]=new E;let c=Number.MAX_VALUE;const h=Math.abs(i[0].x),u=Math.abs(i[0].y),f=Math.abs(i[0].z);h<=c&&(c=h,n.set(1,0,0)),u<=c&&(c=u,n.set(0,1,0)),f<=c&&n.set(0,0,1),o.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],o),a[0].crossVectors(i[0],r[0]);for(let d=1;d<=e;d++){if(r[d]=r[d-1].clone(),a[d]=a[d-1].clone(),o.crossVectors(i[d-1],i[d]),o.length()>Number.EPSILON){o.normalize();const p=Math.acos(Ft(i[d-1].dot(i[d]),-1,1));r[d].applyMatrix4(l.makeRotationAxis(o,p))}a[d].crossVectors(i[d],r[d])}if(t===!0){let d=Math.acos(Ft(r[0].dot(r[e]),-1,1));d/=e,i[0].dot(o.crossVectors(r[0],r[e]))>0&&(d=-d);for(let p=1;p<=e;p++)r[p].applyMatrix4(l.makeRotationAxis(i[p],d*p)),a[p].crossVectors(i[p],r[p])}return{tangents:i,normals:r,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class qo extends Hn{constructor(e=0,t=0,n=1,i=1,r=0,a=Math.PI*2,o=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=a,this.aClockwise=o,this.aRotation=l}getPoint(e,t){const n=t||new ne,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const a=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(a?r=0:r=i),this.aClockwise===!0&&!a&&(r===i?r=-i:r=r-i);const o=this.aStartAngle+e*r;let l=this.aX+this.xRadius*Math.cos(o),c=this.aY+this.yRadius*Math.sin(o);if(this.aRotation!==0){const h=Math.cos(this.aRotation),u=Math.sin(this.aRotation),f=l-this.aX,d=c-this.aY;l=f*h-d*u+this.aX,c=f*u+d*h+this.aY}return n.set(l,c)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class km extends qo{constructor(e,t,n,i,r,a){super(e,t,n,n,i,r,a),this.isArcCurve=!0,this.type="ArcCurve"}}function Mh(){let s=0,e=0,t=0,n=0;function i(r,a,o,l){s=r,e=o,t=-3*r+3*a-2*o-l,n=2*r-2*a+o+l}return{initCatmullRom:function(r,a,o,l,c){i(a,o,c*(o-r),c*(l-a))},initNonuniformCatmullRom:function(r,a,o,l,c,h,u){let f=(a-r)/c-(o-r)/(c+h)+(o-a)/h,d=(o-a)/h-(l-a)/(h+u)+(l-o)/u;f*=h,d*=h,i(a,o,f,d)},calc:function(r){const a=r*r,o=a*r;return s+e*r+t*a+n*o}}}const Ha=new E,Gl=new Mh,Wl=new Mh,Xl=new Mh;class Fm extends Hn{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new E){const n=t,i=this.points,r=i.length,a=(r-(this.closed?0:1))*e;let o=Math.floor(a),l=a-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/r)+1)*r:l===0&&o===r-1&&(o=r-2,l=1);let c,h;this.closed||o>0?c=i[(o-1)%r]:(Ha.subVectors(i[0],i[1]).add(i[0]),c=Ha);const u=i[o%r],f=i[(o+1)%r];if(this.closed||o+2<r?h=i[(o+2)%r]:(Ha.subVectors(i[r-1],i[r-2]).add(i[r-1]),h=Ha),this.curveType==="centripetal"||this.curveType==="chordal"){const d=this.curveType==="chordal"?.5:.25;let p=Math.pow(c.distanceToSquared(u),d),m=Math.pow(u.distanceToSquared(f),d),_=Math.pow(f.distanceToSquared(h),d);m<1e-4&&(m=1),p<1e-4&&(p=m),_<1e-4&&(_=m),Gl.initNonuniformCatmullRom(c.x,u.x,f.x,h.x,p,m,_),Wl.initNonuniformCatmullRom(c.y,u.y,f.y,h.y,p,m,_),Xl.initNonuniformCatmullRom(c.z,u.z,f.z,h.z,p,m,_)}else this.curveType==="catmullrom"&&(Gl.initCatmullRom(c.x,u.x,f.x,h.x,this.tension),Wl.initCatmullRom(c.y,u.y,f.y,h.y,this.tension),Xl.initCatmullRom(c.z,u.z,f.z,h.z,this.tension));return n.set(Gl.calc(l),Wl.calc(l),Xl.calc(l)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new E().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function Mf(s,e,t,n,i){const r=(n-e)*.5,a=(i-t)*.5,o=s*s,l=s*o;return(2*t-2*n+r+a)*l+(-3*t+3*n-2*r-a)*o+r*s+t}function tS(s,e){const t=1-s;return t*t*e}function nS(s,e){return 2*(1-s)*s*e}function iS(s,e){return s*s*e}function Rr(s,e,t,n){return tS(s,e)+nS(s,t)+iS(s,n)}function sS(s,e){const t=1-s;return t*t*t*e}function rS(s,e){const t=1-s;return 3*t*t*s*e}function aS(s,e){return 3*(1-s)*s*s*e}function oS(s,e){return s*s*s*e}function Pr(s,e,t,n,i){return sS(s,e)+rS(s,t)+aS(s,n)+oS(s,i)}class bh extends Hn{constructor(e=new ne,t=new ne,n=new ne,i=new ne){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new ne){const n=t,i=this.v0,r=this.v1,a=this.v2,o=this.v3;return n.set(Pr(e,i.x,r.x,a.x,o.x),Pr(e,i.y,r.y,a.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Bm extends Hn{constructor(e=new E,t=new E,n=new E,i=new E){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new E){const n=t,i=this.v0,r=this.v1,a=this.v2,o=this.v3;return n.set(Pr(e,i.x,r.x,a.x,o.x),Pr(e,i.y,r.y,a.y,o.y),Pr(e,i.z,r.z,a.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Zo extends Hn{constructor(e=new ne,t=new ne){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new ne){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new ne){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class zm extends Hn{constructor(e=new E,t=new E){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new E){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new E){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Sh extends Hn{constructor(e=new ne,t=new ne,n=new ne){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new ne){const n=t,i=this.v0,r=this.v1,a=this.v2;return n.set(Rr(e,i.x,r.x,a.x),Rr(e,i.y,r.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class wh extends Hn{constructor(e=new E,t=new E,n=new E){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new E){const n=t,i=this.v0,r=this.v1,a=this.v2;return n.set(Rr(e,i.x,r.x,a.x),Rr(e,i.y,r.y,a.y),Rr(e,i.z,r.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Eh extends Hn{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new ne){const n=t,i=this.points,r=(i.length-1)*e,a=Math.floor(r),o=r-a,l=i[a===0?a:a-1],c=i[a],h=i[a>i.length-2?i.length-1:a+1],u=i[a>i.length-3?i.length-1:a+2];return n.set(Mf(o,l.x,c.x,h.x,u.x),Mf(o,l.y,c.y,h.y,u.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new ne().fromArray(i))}return this}}var Th=Object.freeze({__proto__:null,ArcCurve:km,CatmullRomCurve3:Fm,CubicBezierCurve:bh,CubicBezierCurve3:Bm,EllipseCurve:qo,LineCurve:Zo,LineCurve3:zm,QuadraticBezierCurve:Sh,QuadraticBezierCurve3:wh,SplineCurve:Eh});class Vm extends Hn{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Zo(t,e))}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let r=0;for(;r<i.length;){if(i[r]>=n){const a=i[r]-n,o=this.curves[r],l=o.getLength(),c=l===0?0:1-a/l;return o.getPointAt(c,t)}r++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const a=r[i],o=a.isEllipseCurve?e*2:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?e*a.points.length:e,l=a.getPoints(o);for(let c=0;c<l.length;c++){const h=l[c];n&&n.equals(h)||(t.push(h),n=h)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new Th[i.type]().fromJSON(i))}return this}}class Yr extends Vm{constructor(e){super(),this.type="Path",this.currentPoint=new ne,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new Zo(this.currentPoint.clone(),new ne(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const r=new Sh(this.currentPoint.clone(),new ne(e,t),new ne(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,r,a){const o=new bh(this.currentPoint.clone(),new ne(e,t),new ne(n,i),new ne(r,a));return this.curves.push(o),this.currentPoint.set(r,a),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new Eh(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,r,a){const o=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(e+o,t+l,n,i,r,a),this}absarc(e,t,n,i,r,a){return this.absellipse(e,t,n,n,i,r,a),this}ellipse(e,t,n,i,r,a,o,l){const c=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(e+c,t+h,n,i,r,a,o,l),this}absellipse(e,t,n,i,r,a,o,l){const c=new qo(e,t,n,i,r,a,o,l);if(this.curves.length>0){const u=c.getPoint(0);u.equals(this.currentPoint)||this.lineTo(u.x,u.y)}this.curves.push(c);const h=c.getPoint(1);return this.currentPoint.copy(h),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class ra extends st{constructor(e=[new ne(0,-.5),new ne(.5,0),new ne(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=Ft(i,0,Math.PI*2);const r=[],a=[],o=[],l=[],c=[],h=1/t,u=new E,f=new ne,d=new E,p=new E,m=new E;let _=0,g=0;for(let y=0;y<=e.length-1;y++)switch(y){case 0:_=e[y+1].x-e[y].x,g=e[y+1].y-e[y].y,d.x=g*1,d.y=-_,d.z=g*0,m.copy(d),d.normalize(),l.push(d.x,d.y,d.z);break;case e.length-1:l.push(m.x,m.y,m.z);break;default:_=e[y+1].x-e[y].x,g=e[y+1].y-e[y].y,d.x=g*1,d.y=-_,d.z=g*0,p.copy(d),d.x+=m.x,d.y+=m.y,d.z+=m.z,d.normalize(),l.push(d.x,d.y,d.z),m.copy(p)}for(let y=0;y<=t;y++){const v=n+y*h*i,x=Math.sin(v),M=Math.cos(v);for(let w=0;w<=e.length-1;w++){u.x=e[w].x*x,u.y=e[w].y,u.z=e[w].x*M,a.push(u.x,u.y,u.z),f.x=y/t,f.y=w/(e.length-1),o.push(f.x,f.y);const T=l[3*w+0]*x,I=l[3*w+1],S=l[3*w+0]*M;c.push(T,I,S)}}for(let y=0;y<t;y++)for(let v=0;v<e.length-1;v++){const x=v+y*e.length,M=x,w=x+e.length,T=x+e.length+1,I=x+1;r.push(M,w,I),r.push(T,I,w)}this.setIndex(r),this.setAttribute("position",new We(a,3)),this.setAttribute("uv",new We(o,2)),this.setAttribute("normal",new We(c,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ra(e.points,e.segments,e.phiStart,e.phiLength)}}class jo extends ra{constructor(e=1,t=1,n=4,i=8){const r=new Yr;r.absarc(0,-t/2,e,Math.PI*1.5,0),r.absarc(0,t/2,e,0,Math.PI*.5),super(r.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new jo(e.radius,e.length,e.capSegments,e.radialSegments)}}class Jo extends st{constructor(e=1,t=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const r=[],a=[],o=[],l=[],c=new E,h=new ne;a.push(0,0,0),o.push(0,0,1),l.push(.5,.5);for(let u=0,f=3;u<=t;u++,f+=3){const d=n+u/t*i;c.x=e*Math.cos(d),c.y=e*Math.sin(d),a.push(c.x,c.y,c.z),o.push(0,0,1),h.x=(a[f]/e+1)/2,h.y=(a[f+1]/e+1)/2,l.push(h.x,h.y)}for(let u=1;u<=t;u++)r.push(u,u+1,0);this.setIndex(r),this.setAttribute("position",new We(a,3)),this.setAttribute("normal",new We(o,3)),this.setAttribute("uv",new We(l,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Jo(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class lr extends st{constructor(e=1,t=1,n=1,i=32,r=1,a=!1,o=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:r,openEnded:a,thetaStart:o,thetaLength:l};const c=this;i=Math.floor(i),r=Math.floor(r);const h=[],u=[],f=[],d=[];let p=0;const m=[],_=n/2;let g=0;y(),a===!1&&(e>0&&v(!0),t>0&&v(!1)),this.setIndex(h),this.setAttribute("position",new We(u,3)),this.setAttribute("normal",new We(f,3)),this.setAttribute("uv",new We(d,2));function y(){const x=new E,M=new E;let w=0;const T=(t-e)/n;for(let I=0;I<=r;I++){const S=[],C=I/r,V=C*(t-e)+e;for(let X=0;X<=i;X++){const F=X/i,B=F*l+o,N=Math.sin(B),Y=Math.cos(B);M.x=V*N,M.y=-C*n+_,M.z=V*Y,u.push(M.x,M.y,M.z),x.set(N,T,Y).normalize(),f.push(x.x,x.y,x.z),d.push(F,1-C),S.push(p++)}m.push(S)}for(let I=0;I<i;I++)for(let S=0;S<r;S++){const C=m[S][I],V=m[S+1][I],X=m[S+1][I+1],F=m[S][I+1];h.push(C,V,F),h.push(V,X,F),w+=6}c.addGroup(g,w,0),g+=w}function v(x){const M=p,w=new ne,T=new E;let I=0;const S=x===!0?e:t,C=x===!0?1:-1;for(let X=1;X<=i;X++)u.push(0,_*C,0),f.push(0,C,0),d.push(.5,.5),p++;const V=p;for(let X=0;X<=i;X++){const B=X/i*l+o,N=Math.cos(B),Y=Math.sin(B);T.x=S*Y,T.y=_*C,T.z=S*N,u.push(T.x,T.y,T.z),f.push(0,C,0),w.x=N*.5+.5,w.y=Y*.5*C+.5,d.push(w.x,w.y),p++}for(let X=0;X<i;X++){const F=M+X,B=V+X;x===!0?h.push(B,B+1,F):h.push(B+1,B,F),I+=3}c.addGroup(g,I,x===!0?1:2),g+=I}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new lr(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Ko extends lr{constructor(e=1,t=1,n=32,i=1,r=!1,a=0,o=Math.PI*2){super(0,e,t,n,i,r,a,o),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:a,thetaLength:o}}static fromJSON(e){return new Ko(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Xi extends st{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const r=[],a=[];o(i),c(n),h(),this.setAttribute("position",new We(r,3)),this.setAttribute("normal",new We(r.slice(),3)),this.setAttribute("uv",new We(a,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function o(y){const v=new E,x=new E,M=new E;for(let w=0;w<t.length;w+=3)d(t[w+0],v),d(t[w+1],x),d(t[w+2],M),l(v,x,M,y)}function l(y,v,x,M){const w=M+1,T=[];for(let I=0;I<=w;I++){T[I]=[];const S=y.clone().lerp(x,I/w),C=v.clone().lerp(x,I/w),V=w-I;for(let X=0;X<=V;X++)X===0&&I===w?T[I][X]=S:T[I][X]=S.clone().lerp(C,X/V)}for(let I=0;I<w;I++)for(let S=0;S<2*(w-I)-1;S++){const C=Math.floor(S/2);S%2===0?(f(T[I][C+1]),f(T[I+1][C]),f(T[I][C])):(f(T[I][C+1]),f(T[I+1][C+1]),f(T[I+1][C]))}}function c(y){const v=new E;for(let x=0;x<r.length;x+=3)v.x=r[x+0],v.y=r[x+1],v.z=r[x+2],v.normalize().multiplyScalar(y),r[x+0]=v.x,r[x+1]=v.y,r[x+2]=v.z}function h(){const y=new E;for(let v=0;v<r.length;v+=3){y.x=r[v+0],y.y=r[v+1],y.z=r[v+2];const x=_(y)/2/Math.PI+.5,M=g(y)/Math.PI+.5;a.push(x,1-M)}p(),u()}function u(){for(let y=0;y<a.length;y+=6){const v=a[y+0],x=a[y+2],M=a[y+4],w=Math.max(v,x,M),T=Math.min(v,x,M);w>.9&&T<.1&&(v<.2&&(a[y+0]+=1),x<.2&&(a[y+2]+=1),M<.2&&(a[y+4]+=1))}}function f(y){r.push(y.x,y.y,y.z)}function d(y,v){const x=y*3;v.x=e[x+0],v.y=e[x+1],v.z=e[x+2]}function p(){const y=new E,v=new E,x=new E,M=new E,w=new ne,T=new ne,I=new ne;for(let S=0,C=0;S<r.length;S+=9,C+=6){y.set(r[S+0],r[S+1],r[S+2]),v.set(r[S+3],r[S+4],r[S+5]),x.set(r[S+6],r[S+7],r[S+8]),w.set(a[C+0],a[C+1]),T.set(a[C+2],a[C+3]),I.set(a[C+4],a[C+5]),M.copy(y).add(v).add(x).divideScalar(3);const V=_(M);m(w,C+0,y,V),m(T,C+2,v,V),m(I,C+4,x,V)}}function m(y,v,x,M){M<0&&y.x===1&&(a[v]=y.x-1),x.x===0&&x.z===0&&(a[v]=M/2/Math.PI+.5)}function _(y){return Math.atan2(y.z,-y.x)}function g(y){return Math.atan2(-y.y,Math.sqrt(y.x*y.x+y.z*y.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Xi(e.vertices,e.indices,e.radius,e.details)}}class Qo extends Xi{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,r=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],a=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(r,a,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Qo(e.radius,e.detail)}}const Ga=new E,Wa=new E,$l=new E,Xa=new _n;class Ah extends st{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),r=Math.cos(ps*t),a=e.getIndex(),o=e.getAttribute("position"),l=a?a.count:o.count,c=[0,0,0],h=["a","b","c"],u=new Array(3),f={},d=[];for(let p=0;p<l;p+=3){a?(c[0]=a.getX(p),c[1]=a.getX(p+1),c[2]=a.getX(p+2)):(c[0]=p,c[1]=p+1,c[2]=p+2);const{a:m,b:_,c:g}=Xa;if(m.fromBufferAttribute(o,c[0]),_.fromBufferAttribute(o,c[1]),g.fromBufferAttribute(o,c[2]),Xa.getNormal($l),u[0]=`${Math.round(m.x*i)},${Math.round(m.y*i)},${Math.round(m.z*i)}`,u[1]=`${Math.round(_.x*i)},${Math.round(_.y*i)},${Math.round(_.z*i)}`,u[2]=`${Math.round(g.x*i)},${Math.round(g.y*i)},${Math.round(g.z*i)}`,!(u[0]===u[1]||u[1]===u[2]||u[2]===u[0]))for(let y=0;y<3;y++){const v=(y+1)%3,x=u[y],M=u[v],w=Xa[h[y]],T=Xa[h[v]],I=`${x}_${M}`,S=`${M}_${x}`;S in f&&f[S]?($l.dot(f[S].normal)<=r&&(d.push(w.x,w.y,w.z),d.push(T.x,T.y,T.z)),f[S]=null):I in f||(f[I]={index0:c[y],index1:c[v],normal:$l.clone()})}}for(const p in f)if(f[p]){const{index0:m,index1:_}=f[p];Ga.fromBufferAttribute(o,m),Wa.fromBufferAttribute(o,_),d.push(Ga.x,Ga.y,Ga.z),d.push(Wa.x,Wa.y,Wa.z)}this.setAttribute("position",new We(d,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class Li extends Yr{constructor(e){super(e),this.uuid=Tn(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new Yr().fromJSON(i))}return this}}const lS={triangulate:function(s,e,t=2){const n=e&&e.length,i=n?e[0]*t:s.length;let r=Hm(s,0,i,t,!0);const a=[];if(!r||r.next===r.prev)return a;let o,l,c,h,u,f,d;if(n&&(r=dS(s,e,r,t)),s.length>80*t){o=c=s[0],l=h=s[1];for(let p=t;p<i;p+=t)u=s[p],f=s[p+1],u<o&&(o=u),f<l&&(l=f),u>c&&(c=u),f>h&&(h=f);d=Math.max(c-o,h-l),d=d!==0?32767/d:0}return qr(r,a,t,o,l,d,0),a}};function Hm(s,e,t,n,i){let r,a;if(i===wS(s,e,t,n)>0)for(r=e;r<t;r+=n)a=bf(r,s[r],s[r+1],a);else for(r=t-n;r>=e;r-=n)a=bf(r,s[r],s[r+1],a);return a&&el(a,a.next)&&(jr(a),a=a.next),a}function _s(s,e){if(!s)return s;e||(e=s);let t=s,n;do if(n=!1,!t.steiner&&(el(t,t.next)||Ut(t.prev,t,t.next)===0)){if(jr(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function qr(s,e,t,n,i,r,a){if(!s)return;!a&&r&&vS(s,n,i,r);let o=s,l,c;for(;s.prev!==s.next;){if(l=s.prev,c=s.next,r?hS(s,n,i,r):cS(s)){e.push(l.i/t|0),e.push(s.i/t|0),e.push(c.i/t|0),jr(s),s=c.next,o=c.next;continue}if(s=c,s===o){a?a===1?(s=uS(_s(s),e,t),qr(s,e,t,n,i,r,2)):a===2&&fS(s,e,t,n,i,r):qr(_s(s),e,t,n,i,r,1);break}}}function cS(s){const e=s.prev,t=s,n=s.next;if(Ut(e,t,n)>=0)return!1;const i=e.x,r=t.x,a=n.x,o=e.y,l=t.y,c=n.y,h=i<r?i<a?i:a:r<a?r:a,u=o<l?o<c?o:c:l<c?l:c,f=i>r?i>a?i:a:r>a?r:a,d=o>l?o>c?o:c:l>c?l:c;let p=n.next;for(;p!==e;){if(p.x>=h&&p.x<=f&&p.y>=u&&p.y<=d&&Zs(i,o,r,l,a,c,p.x,p.y)&&Ut(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function hS(s,e,t,n){const i=s.prev,r=s,a=s.next;if(Ut(i,r,a)>=0)return!1;const o=i.x,l=r.x,c=a.x,h=i.y,u=r.y,f=a.y,d=o<l?o<c?o:c:l<c?l:c,p=h<u?h<f?h:f:u<f?u:f,m=o>l?o>c?o:c:l>c?l:c,_=h>u?h>f?h:f:u>f?u:f,g=Vc(d,p,e,t,n),y=Vc(m,_,e,t,n);let v=s.prevZ,x=s.nextZ;for(;v&&v.z>=g&&x&&x.z<=y;){if(v.x>=d&&v.x<=m&&v.y>=p&&v.y<=_&&v!==i&&v!==a&&Zs(o,h,l,u,c,f,v.x,v.y)&&Ut(v.prev,v,v.next)>=0||(v=v.prevZ,x.x>=d&&x.x<=m&&x.y>=p&&x.y<=_&&x!==i&&x!==a&&Zs(o,h,l,u,c,f,x.x,x.y)&&Ut(x.prev,x,x.next)>=0))return!1;x=x.nextZ}for(;v&&v.z>=g;){if(v.x>=d&&v.x<=m&&v.y>=p&&v.y<=_&&v!==i&&v!==a&&Zs(o,h,l,u,c,f,v.x,v.y)&&Ut(v.prev,v,v.next)>=0)return!1;v=v.prevZ}for(;x&&x.z<=y;){if(x.x>=d&&x.x<=m&&x.y>=p&&x.y<=_&&x!==i&&x!==a&&Zs(o,h,l,u,c,f,x.x,x.y)&&Ut(x.prev,x,x.next)>=0)return!1;x=x.nextZ}return!0}function uS(s,e,t){let n=s;do{const i=n.prev,r=n.next.next;!el(i,r)&&Gm(i,n,n.next,r)&&Zr(i,r)&&Zr(r,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(r.i/t|0),jr(n),jr(n.next),n=s=r),n=n.next}while(n!==s);return _s(n)}function fS(s,e,t,n,i,r){let a=s;do{let o=a.next.next;for(;o!==a.prev;){if(a.i!==o.i&&MS(a,o)){let l=Wm(a,o);a=_s(a,a.next),l=_s(l,l.next),qr(a,e,t,n,i,r,0),qr(l,e,t,n,i,r,0);return}o=o.next}a=a.next}while(a!==s)}function dS(s,e,t,n){const i=[];let r,a,o,l,c;for(r=0,a=e.length;r<a;r++)o=e[r]*n,l=r<a-1?e[r+1]*n:s.length,c=Hm(s,o,l,n,!1),c===c.next&&(c.steiner=!0),i.push(xS(c));for(i.sort(pS),r=0;r<i.length;r++)t=mS(i[r],t);return t}function pS(s,e){return s.x-e.x}function mS(s,e){const t=gS(s,e);if(!t)return e;const n=Wm(t,s);return _s(n,n.next),_s(t,t.next)}function gS(s,e){let t=e,n=-1/0,i;const r=s.x,a=s.y;do{if(a<=t.y&&a>=t.next.y&&t.next.y!==t.y){const f=t.x+(a-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(f<=r&&f>n&&(n=f,i=t.x<t.next.x?t:t.next,f===r))return i}t=t.next}while(t!==e);if(!i)return null;const o=i,l=i.x,c=i.y;let h=1/0,u;t=i;do r>=t.x&&t.x>=l&&r!==t.x&&Zs(a<c?r:n,a,l,c,a<c?n:r,a,t.x,t.y)&&(u=Math.abs(a-t.y)/(r-t.x),Zr(t,s)&&(u<h||u===h&&(t.x>i.x||t.x===i.x&&_S(i,t)))&&(i=t,h=u)),t=t.next;while(t!==o);return i}function _S(s,e){return Ut(s.prev,s,e.prev)<0&&Ut(e.next,s,s.next)<0}function vS(s,e,t,n){let i=s;do i.z===0&&(i.z=Vc(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==s);i.prevZ.nextZ=null,i.prevZ=null,yS(i)}function yS(s){let e,t,n,i,r,a,o,l,c=1;do{for(t=s,s=null,r=null,a=0;t;){for(a++,n=t,o=0,e=0;e<c&&(o++,n=n.nextZ,!!n);e++);for(l=c;o>0||l>0&&n;)o!==0&&(l===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,o--):(i=n,n=n.nextZ,l--),r?r.nextZ=i:s=i,i.prevZ=r,r=i;t=n}r.nextZ=null,c*=2}while(a>1);return s}function Vc(s,e,t,n,i){return s=(s-t)*i|0,e=(e-n)*i|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,s|e<<1}function xS(s){let e=s,t=s;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==s);return t}function Zs(s,e,t,n,i,r,a,o){return(i-a)*(e-o)>=(s-a)*(r-o)&&(s-a)*(n-o)>=(t-a)*(e-o)&&(t-a)*(r-o)>=(i-a)*(n-o)}function MS(s,e){return s.next.i!==e.i&&s.prev.i!==e.i&&!bS(s,e)&&(Zr(s,e)&&Zr(e,s)&&SS(s,e)&&(Ut(s.prev,s,e.prev)||Ut(s,e.prev,e))||el(s,e)&&Ut(s.prev,s,s.next)>0&&Ut(e.prev,e,e.next)>0)}function Ut(s,e,t){return(e.y-s.y)*(t.x-e.x)-(e.x-s.x)*(t.y-e.y)}function el(s,e){return s.x===e.x&&s.y===e.y}function Gm(s,e,t,n){const i=Ya(Ut(s,e,t)),r=Ya(Ut(s,e,n)),a=Ya(Ut(t,n,s)),o=Ya(Ut(t,n,e));return!!(i!==r&&a!==o||i===0&&$a(s,t,e)||r===0&&$a(s,n,e)||a===0&&$a(t,s,n)||o===0&&$a(t,e,n))}function $a(s,e,t){return e.x<=Math.max(s.x,t.x)&&e.x>=Math.min(s.x,t.x)&&e.y<=Math.max(s.y,t.y)&&e.y>=Math.min(s.y,t.y)}function Ya(s){return s>0?1:s<0?-1:0}function bS(s,e){let t=s;do{if(t.i!==s.i&&t.next.i!==s.i&&t.i!==e.i&&t.next.i!==e.i&&Gm(t,t.next,s,e))return!0;t=t.next}while(t!==s);return!1}function Zr(s,e){return Ut(s.prev,s,s.next)<0?Ut(s,e,s.next)>=0&&Ut(s,s.prev,e)>=0:Ut(s,e,s.prev)<0||Ut(s,s.next,e)<0}function SS(s,e){let t=s,n=!1;const i=(s.x+e.x)/2,r=(s.y+e.y)/2;do t.y>r!=t.next.y>r&&t.next.y!==t.y&&i<(t.next.x-t.x)*(r-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==s);return n}function Wm(s,e){const t=new Hc(s.i,s.x,s.y),n=new Hc(e.i,e.x,e.y),i=s.next,r=e.prev;return s.next=e,e.prev=s,t.next=i,i.prev=t,n.next=t,t.prev=n,r.next=n,n.prev=r,n}function bf(s,e,t,n){const i=new Hc(s,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function jr(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function Hc(s,e,t){this.i=s,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function wS(s,e,t,n){let i=0;for(let r=e,a=t-n;r<t;r+=n)i+=(s[a]-s[r])*(s[r+1]+s[a+1]),a=r;return i}class ei{static area(e){const t=e.length;let n=0;for(let i=t-1,r=0;r<t;i=r++)n+=e[i].x*e[r].y-e[r].x*e[i].y;return n*.5}static isClockWise(e){return ei.area(e)<0}static triangulateShape(e,t){const n=[],i=[],r=[];Sf(e),wf(n,e);let a=e.length;t.forEach(Sf);for(let l=0;l<t.length;l++)i.push(a),a+=t[l].length,wf(n,t[l]);const o=lS.triangulate(n,i);for(let l=0;l<o.length;l+=3)r.push(o.slice(l,l+3));return r}}function Sf(s){const e=s.length;e>2&&s[e-1].equals(s[0])&&s.pop()}function wf(s,e){for(let t=0;t<e.length;t++)s.push(e[t].x),s.push(e[t].y)}class aa extends st{constructor(e=new Li([new ne(.5,.5),new ne(-.5,.5),new ne(-.5,-.5),new ne(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],r=[];for(let o=0,l=e.length;o<l;o++){const c=e[o];a(c)}this.setAttribute("position",new We(i,3)),this.setAttribute("uv",new We(r,2)),this.computeVertexNormals();function a(o){const l=[],c=t.curveSegments!==void 0?t.curveSegments:12,h=t.steps!==void 0?t.steps:1,u=t.depth!==void 0?t.depth:1;let f=t.bevelEnabled!==void 0?t.bevelEnabled:!0,d=t.bevelThickness!==void 0?t.bevelThickness:.2,p=t.bevelSize!==void 0?t.bevelSize:d-.1,m=t.bevelOffset!==void 0?t.bevelOffset:0,_=t.bevelSegments!==void 0?t.bevelSegments:3;const g=t.extrudePath,y=t.UVGenerator!==void 0?t.UVGenerator:ES;let v,x=!1,M,w,T,I;g&&(v=g.getSpacedPoints(h),x=!0,f=!1,M=g.computeFrenetFrames(h,!1),w=new E,T=new E,I=new E),f||(_=0,d=0,p=0,m=0);const S=o.extractPoints(c);let C=S.shape;const V=S.holes;if(!ei.isClockWise(C)){C=C.reverse();for(let U=0,ve=V.length;U<ve;U++){const le=V[U];ei.isClockWise(le)&&(V[U]=le.reverse())}}const F=ei.triangulateShape(C,V),B=C;for(let U=0,ve=V.length;U<ve;U++){const le=V[U];C=C.concat(le)}function N(U,ve,le){return ve||console.error("THREE.ExtrudeGeometry: vec does not exist"),U.clone().addScaledVector(ve,le)}const Y=C.length,O=F.length;function Z(U,ve,le){let fe,se,Ye;const De=U.x-ve.x,ye=U.y-ve.y,xe=le.x-U.x,Be=le.y-U.y,dt=De*De+ye*ye,L=De*Be-ye*xe;if(Math.abs(L)>Number.EPSILON){const A=Math.sqrt(dt),ie=Math.sqrt(xe*xe+Be*Be),me=ve.x-ye/A,pe=ve.y+De/A,D=le.x-Be/ie,ue=le.y+xe/ie,de=((D-me)*Be-(ue-pe)*xe)/(De*Be-ye*xe);fe=me+De*de-U.x,se=pe+ye*de-U.y;const J=fe*fe+se*se;if(J<=2)return new ne(fe,se);Ye=Math.sqrt(J/2)}else{let A=!1;De>Number.EPSILON?xe>Number.EPSILON&&(A=!0):De<-Number.EPSILON?xe<-Number.EPSILON&&(A=!0):Math.sign(ye)===Math.sign(Be)&&(A=!0),A?(fe=-ye,se=De,Ye=Math.sqrt(dt)):(fe=De,se=ye,Ye=Math.sqrt(dt/2))}return new ne(fe/Ye,se/Ye)}const q=[];for(let U=0,ve=B.length,le=ve-1,fe=U+1;U<ve;U++,le++,fe++)le===ve&&(le=0),fe===ve&&(fe=0),q[U]=Z(B[U],B[le],B[fe]);const Q=[];let H,ee=q.concat();for(let U=0,ve=V.length;U<ve;U++){const le=V[U];H=[];for(let fe=0,se=le.length,Ye=se-1,De=fe+1;fe<se;fe++,Ye++,De++)Ye===se&&(Ye=0),De===se&&(De=0),H[fe]=Z(le[fe],le[Ye],le[De]);Q.push(H),ee=ee.concat(H)}for(let U=0;U<_;U++){const ve=U/_,le=d*Math.cos(ve*Math.PI/2),fe=p*Math.sin(ve*Math.PI/2)+m;for(let se=0,Ye=B.length;se<Ye;se++){const De=N(B[se],q[se],fe);$e(De.x,De.y,-le)}for(let se=0,Ye=V.length;se<Ye;se++){const De=V[se];H=Q[se];for(let ye=0,xe=De.length;ye<xe;ye++){const Be=N(De[ye],H[ye],fe);$e(Be.x,Be.y,-le)}}}const _e=p+m;for(let U=0;U<Y;U++){const ve=f?N(C[U],ee[U],_e):C[U];x?(T.copy(M.normals[0]).multiplyScalar(ve.x),w.copy(M.binormals[0]).multiplyScalar(ve.y),I.copy(v[0]).add(T).add(w),$e(I.x,I.y,I.z)):$e(ve.x,ve.y,0)}for(let U=1;U<=h;U++)for(let ve=0;ve<Y;ve++){const le=f?N(C[ve],ee[ve],_e):C[ve];x?(T.copy(M.normals[U]).multiplyScalar(le.x),w.copy(M.binormals[U]).multiplyScalar(le.y),I.copy(v[U]).add(T).add(w),$e(I.x,I.y,I.z)):$e(le.x,le.y,u/h*U)}for(let U=_-1;U>=0;U--){const ve=U/_,le=d*Math.cos(ve*Math.PI/2),fe=p*Math.sin(ve*Math.PI/2)+m;for(let se=0,Ye=B.length;se<Ye;se++){const De=N(B[se],q[se],fe);$e(De.x,De.y,u+le)}for(let se=0,Ye=V.length;se<Ye;se++){const De=V[se];H=Q[se];for(let ye=0,xe=De.length;ye<xe;ye++){const Be=N(De[ye],H[ye],fe);x?$e(Be.x,Be.y+v[h-1].y,v[h-1].x+le):$e(Be.x,Be.y,u+le)}}}ge(),Se();function ge(){const U=i.length/3;if(f){let ve=0,le=Y*ve;for(let fe=0;fe<O;fe++){const se=F[fe];Xe(se[2]+le,se[1]+le,se[0]+le)}ve=h+_*2,le=Y*ve;for(let fe=0;fe<O;fe++){const se=F[fe];Xe(se[0]+le,se[1]+le,se[2]+le)}}else{for(let ve=0;ve<O;ve++){const le=F[ve];Xe(le[2],le[1],le[0])}for(let ve=0;ve<O;ve++){const le=F[ve];Xe(le[0]+Y*h,le[1]+Y*h,le[2]+Y*h)}}n.addGroup(U,i.length/3-U,0)}function Se(){const U=i.length/3;let ve=0;Fe(B,ve),ve+=B.length;for(let le=0,fe=V.length;le<fe;le++){const se=V[le];Fe(se,ve),ve+=se.length}n.addGroup(U,i.length/3-U,1)}function Fe(U,ve){let le=U.length;for(;--le>=0;){const fe=le;let se=le-1;se<0&&(se=U.length-1);for(let Ye=0,De=h+_*2;Ye<De;Ye++){const ye=Y*Ye,xe=Y*(Ye+1),Be=ve+fe+ye,dt=ve+se+ye,L=ve+se+xe,A=ve+fe+xe;ut(Be,dt,L,A)}}}function $e(U,ve,le){l.push(U),l.push(ve),l.push(le)}function Xe(U,ve,le){gt(U),gt(ve),gt(le);const fe=i.length/3,se=y.generateTopUV(n,i,fe-3,fe-2,fe-1);je(se[0]),je(se[1]),je(se[2])}function ut(U,ve,le,fe){gt(U),gt(ve),gt(fe),gt(ve),gt(le),gt(fe);const se=i.length/3,Ye=y.generateSideWallUV(n,i,se-6,se-3,se-2,se-1);je(Ye[0]),je(Ye[1]),je(Ye[3]),je(Ye[1]),je(Ye[2]),je(Ye[3])}function gt(U){i.push(l[U*3+0]),i.push(l[U*3+1]),i.push(l[U*3+2])}function je(U){r.push(U.x),r.push(U.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return TS(t,n,e)}static fromJSON(e,t){const n=[];for(let r=0,a=e.shapes.length;r<a;r++){const o=t[e.shapes[r]];n.push(o)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new Th[i.type]().fromJSON(i)),new aa(n,e.options)}}const ES={generateTopUV:function(s,e,t,n,i){const r=e[t*3],a=e[t*3+1],o=e[n*3],l=e[n*3+1],c=e[i*3],h=e[i*3+1];return[new ne(r,a),new ne(o,l),new ne(c,h)]},generateSideWallUV:function(s,e,t,n,i,r){const a=e[t*3],o=e[t*3+1],l=e[t*3+2],c=e[n*3],h=e[n*3+1],u=e[n*3+2],f=e[i*3],d=e[i*3+1],p=e[i*3+2],m=e[r*3],_=e[r*3+1],g=e[r*3+2];return Math.abs(o-h)<Math.abs(a-c)?[new ne(a,1-l),new ne(c,1-u),new ne(f,1-p),new ne(m,1-g)]:[new ne(o,1-l),new ne(h,1-u),new ne(d,1-p),new ne(_,1-g)]}};function TS(s,e,t){if(t.shapes=[],Array.isArray(s))for(let n=0,i=s.length;n<i;n++){const r=s[n];t.shapes.push(r.uuid)}else t.shapes.push(s.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class tl extends Xi{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],r=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,r,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new tl(e.radius,e.detail)}}class oa extends Xi{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new oa(e.radius,e.detail)}}class nl extends st{constructor(e=.5,t=1,n=32,i=1,r=0,a=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:a},n=Math.max(3,n),i=Math.max(1,i);const o=[],l=[],c=[],h=[];let u=e;const f=(t-e)/i,d=new E,p=new ne;for(let m=0;m<=i;m++){for(let _=0;_<=n;_++){const g=r+_/n*a;d.x=u*Math.cos(g),d.y=u*Math.sin(g),l.push(d.x,d.y,d.z),c.push(0,0,1),p.x=(d.x/t+1)/2,p.y=(d.y/t+1)/2,h.push(p.x,p.y)}u+=f}for(let m=0;m<i;m++){const _=m*(n+1);for(let g=0;g<n;g++){const y=g+_,v=y,x=y+n+1,M=y+n+2,w=y+1;o.push(v,x,w),o.push(x,M,w)}}this.setIndex(o),this.setAttribute("position",new We(l,3)),this.setAttribute("normal",new We(c,3)),this.setAttribute("uv",new We(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new nl(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class il extends st{constructor(e=new Li([new ne(0,.5),new ne(-.5,-.5),new ne(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],r=[],a=[];let o=0,l=0;if(Array.isArray(e)===!1)c(e);else for(let h=0;h<e.length;h++)c(e[h]),this.addGroup(o,l,h),o+=l,l=0;this.setIndex(n),this.setAttribute("position",new We(i,3)),this.setAttribute("normal",new We(r,3)),this.setAttribute("uv",new We(a,2));function c(h){const u=i.length/3,f=h.extractPoints(t);let d=f.shape;const p=f.holes;ei.isClockWise(d)===!1&&(d=d.reverse());for(let _=0,g=p.length;_<g;_++){const y=p[_];ei.isClockWise(y)===!0&&(p[_]=y.reverse())}const m=ei.triangulateShape(d,p);for(let _=0,g=p.length;_<g;_++){const y=p[_];d=d.concat(y)}for(let _=0,g=d.length;_<g;_++){const y=d[_];i.push(y.x,y.y,0),r.push(0,0,1),a.push(y.x,y.y)}for(let _=0,g=m.length;_<g;_++){const y=m[_],v=y[0]+u,x=y[1]+u,M=y[2]+u;n.push(v,x,M),l+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return AS(t,e)}static fromJSON(e,t){const n=[];for(let i=0,r=e.shapes.length;i<r;i++){const a=t[e.shapes[i]];n.push(a)}return new il(n,e.curveSegments)}}function AS(s,e){if(e.shapes=[],Array.isArray(s))for(let t=0,n=s.length;t<n;t++){const i=s[t];e.shapes.push(i.uuid)}else e.shapes.push(s.uuid);return e}class Ii extends st{constructor(e=1,t=32,n=16,i=0,r=Math.PI*2,a=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:r,thetaStart:a,thetaLength:o},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const l=Math.min(a+o,Math.PI);let c=0;const h=[],u=new E,f=new E,d=[],p=[],m=[],_=[];for(let g=0;g<=n;g++){const y=[],v=g/n;let x=0;g===0&&a===0?x=.5/t:g===n&&l===Math.PI&&(x=-.5/t);for(let M=0;M<=t;M++){const w=M/t;u.x=-e*Math.cos(i+w*r)*Math.sin(a+v*o),u.y=e*Math.cos(a+v*o),u.z=e*Math.sin(i+w*r)*Math.sin(a+v*o),p.push(u.x,u.y,u.z),f.copy(u).normalize(),m.push(f.x,f.y,f.z),_.push(w+x,1-v),y.push(c++)}h.push(y)}for(let g=0;g<n;g++)for(let y=0;y<t;y++){const v=h[g][y+1],x=h[g][y],M=h[g+1][y],w=h[g+1][y+1];(g!==0||a>0)&&d.push(v,x,w),(g!==n-1||l<Math.PI)&&d.push(x,M,w)}this.setIndex(d),this.setAttribute("position",new We(p,3)),this.setAttribute("normal",new We(m,3)),this.setAttribute("uv",new We(_,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ii(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class sl extends Xi{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new sl(e.radius,e.detail)}}class rl extends st{constructor(e=1,t=.4,n=12,i=48,r=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:r},n=Math.floor(n),i=Math.floor(i);const a=[],o=[],l=[],c=[],h=new E,u=new E,f=new E;for(let d=0;d<=n;d++)for(let p=0;p<=i;p++){const m=p/i*r,_=d/n*Math.PI*2;u.x=(e+t*Math.cos(_))*Math.cos(m),u.y=(e+t*Math.cos(_))*Math.sin(m),u.z=t*Math.sin(_),o.push(u.x,u.y,u.z),h.x=e*Math.cos(m),h.y=e*Math.sin(m),f.subVectors(u,h).normalize(),l.push(f.x,f.y,f.z),c.push(p/i),c.push(d/n)}for(let d=1;d<=n;d++)for(let p=1;p<=i;p++){const m=(i+1)*d+p-1,_=(i+1)*(d-1)+p-1,g=(i+1)*(d-1)+p,y=(i+1)*d+p;a.push(m,_,y),a.push(_,g,y)}this.setIndex(a),this.setAttribute("position",new We(o,3)),this.setAttribute("normal",new We(l,3)),this.setAttribute("uv",new We(c,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new rl(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class al extends st{constructor(e=1,t=.4,n=64,i=8,r=2,a=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:r,q:a},n=Math.floor(n),i=Math.floor(i);const o=[],l=[],c=[],h=[],u=new E,f=new E,d=new E,p=new E,m=new E,_=new E,g=new E;for(let v=0;v<=n;++v){const x=v/n*r*Math.PI*2;y(x,r,a,e,d),y(x+.01,r,a,e,p),_.subVectors(p,d),g.addVectors(p,d),m.crossVectors(_,g),g.crossVectors(m,_),m.normalize(),g.normalize();for(let M=0;M<=i;++M){const w=M/i*Math.PI*2,T=-t*Math.cos(w),I=t*Math.sin(w);u.x=d.x+(T*g.x+I*m.x),u.y=d.y+(T*g.y+I*m.y),u.z=d.z+(T*g.z+I*m.z),l.push(u.x,u.y,u.z),f.subVectors(u,d).normalize(),c.push(f.x,f.y,f.z),h.push(v/n),h.push(M/i)}}for(let v=1;v<=n;v++)for(let x=1;x<=i;x++){const M=(i+1)*(v-1)+(x-1),w=(i+1)*v+(x-1),T=(i+1)*v+x,I=(i+1)*(v-1)+x;o.push(M,w,I),o.push(w,T,I)}this.setIndex(o),this.setAttribute("position",new We(l,3)),this.setAttribute("normal",new We(c,3)),this.setAttribute("uv",new We(h,2));function y(v,x,M,w,T){const I=Math.cos(v),S=Math.sin(v),C=M/x*v,V=Math.cos(C);T.x=w*(2+V)*.5*I,T.y=w*(2+V)*S*.5,T.z=w*Math.sin(C)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new al(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class ol extends st{constructor(e=new wh(new E(-1,-1,0),new E(-1,1,0),new E(1,1,0)),t=64,n=1,i=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:r};const a=e.computeFrenetFrames(t,r);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;const o=new E,l=new E,c=new ne;let h=new E;const u=[],f=[],d=[],p=[];m(),this.setIndex(p),this.setAttribute("position",new We(u,3)),this.setAttribute("normal",new We(f,3)),this.setAttribute("uv",new We(d,2));function m(){for(let v=0;v<t;v++)_(v);_(r===!1?t:0),y(),g()}function _(v){h=e.getPointAt(v/t,h);const x=a.normals[v],M=a.binormals[v];for(let w=0;w<=i;w++){const T=w/i*Math.PI*2,I=Math.sin(T),S=-Math.cos(T);l.x=S*x.x+I*M.x,l.y=S*x.y+I*M.y,l.z=S*x.z+I*M.z,l.normalize(),f.push(l.x,l.y,l.z),o.x=h.x+n*l.x,o.y=h.y+n*l.y,o.z=h.z+n*l.z,u.push(o.x,o.y,o.z)}}function g(){for(let v=1;v<=t;v++)for(let x=1;x<=i;x++){const M=(i+1)*(v-1)+(x-1),w=(i+1)*v+(x-1),T=(i+1)*v+x,I=(i+1)*(v-1)+x;p.push(M,w,I),p.push(w,T,I)}}function y(){for(let v=0;v<=t;v++)for(let x=0;x<=i;x++)c.x=v/t,c.y=x/i,d.push(c.x,c.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new ol(new Th[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class Xm extends st{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new E,r=new E;if(e.index!==null){const a=e.attributes.position,o=e.index;let l=e.groups;l.length===0&&(l=[{start:0,count:o.count,materialIndex:0}]);for(let c=0,h=l.length;c<h;++c){const u=l[c],f=u.start,d=u.count;for(let p=f,m=f+d;p<m;p+=3)for(let _=0;_<3;_++){const g=o.getX(p+_),y=o.getX(p+(_+1)%3);i.fromBufferAttribute(a,g),r.fromBufferAttribute(a,y),Ef(i,r,n)===!0&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}}else{const a=e.attributes.position;for(let o=0,l=a.count/3;o<l;o++)for(let c=0;c<3;c++){const h=3*o+c,u=3*o+(c+1)%3;i.fromBufferAttribute(a,h),r.fromBufferAttribute(a,u),Ef(i,r,n)===!0&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}this.setAttribute("position",new We(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function Ef(s,e,t){const n=`${s.x},${s.y},${s.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${s.x},${s.y},${s.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var Tf=Object.freeze({__proto__:null,BoxGeometry:Wi,CapsuleGeometry:jo,CircleGeometry:Jo,ConeGeometry:Ko,CylinderGeometry:lr,DodecahedronGeometry:Qo,EdgesGeometry:Ah,ExtrudeGeometry:aa,IcosahedronGeometry:tl,LatheGeometry:ra,OctahedronGeometry:oa,PlaneGeometry:ar,PolyhedronGeometry:Xi,RingGeometry:nl,ShapeGeometry:il,SphereGeometry:Ii,TetrahedronGeometry:sl,TorusGeometry:rl,TorusKnotGeometry:al,TubeGeometry:ol,WireframeGeometry:Xm});class $m extends ln{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new be(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class Ym extends tn{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class Ch extends ln{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new be(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new be(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Gi,this.normalScale=new ne(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class qm extends Ch{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ne(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Ft(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new be(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new be(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new be(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class Rh extends ln{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new be(16777215),this.specular=new be(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new be(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Gi,this.normalScale=new ne(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=na,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Zm extends ln{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new be(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new be(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Gi,this.normalScale=new ne(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class jm extends ln{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Gi,this.normalScale=new ne(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class Ph extends ln{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new be(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new be(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Gi,this.normalScale=new ne(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=na,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Jm extends ln{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new be(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Gi,this.normalScale=new ne(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Km extends cn{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function Pn(s,e,t){return Lh(s)?new s.constructor(s.subarray(e,t!==void 0?t:s.length)):s.slice(e,t)}function fs(s,e,t){return!s||!t&&s.constructor===e?s:typeof e.BYTES_PER_ELEMENT=="number"?new e(s):Array.prototype.slice.call(s)}function Lh(s){return ArrayBuffer.isView(s)&&!(s instanceof DataView)}function Qm(s){function e(i,r){return s[i]-s[r]}const t=s.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function Gc(s,e,t){const n=s.length,i=new s.constructor(n);for(let r=0,a=0;a!==n;++r){const o=t[r]*e;for(let l=0;l!==e;++l)i[a++]=s[o+l]}return i}function Ih(s,e,t,n){let i=1,r=s[0];for(;r!==void 0&&r[n]===void 0;)r=s[i++];if(r===void 0)return;let a=r[n];if(a!==void 0)if(Array.isArray(a))do a=r[n],a!==void 0&&(e.push(r.time),t.push.apply(t,a)),r=s[i++];while(r!==void 0);else if(a.toArray!==void 0)do a=r[n],a!==void 0&&(e.push(r.time),a.toArray(t,t.length)),r=s[i++];while(r!==void 0);else do a=r[n],a!==void 0&&(e.push(r.time),t.push(a)),r=s[i++];while(r!==void 0)}function CS(s,e,t,n,i=30){const r=s.clone();r.name=e;const a=[];for(let l=0;l<r.tracks.length;++l){const c=r.tracks[l],h=c.getValueSize(),u=[],f=[];for(let d=0;d<c.times.length;++d){const p=c.times[d]*i;if(!(p<t||p>=n)){u.push(c.times[d]);for(let m=0;m<h;++m)f.push(c.values[d*h+m])}}u.length!==0&&(c.times=fs(u,c.times.constructor),c.values=fs(f,c.values.constructor),a.push(c))}r.tracks=a;let o=1/0;for(let l=0;l<r.tracks.length;++l)o>r.tracks[l].times[0]&&(o=r.tracks[l].times[0]);for(let l=0;l<r.tracks.length;++l)r.tracks[l].shift(-1*o);return r.resetDuration(),r}function RS(s,e=0,t=s,n=30){n<=0&&(n=30);const i=t.tracks.length,r=e/n;for(let a=0;a<i;++a){const o=t.tracks[a],l=o.ValueTypeName;if(l==="bool"||l==="string")continue;const c=s.tracks.find(function(g){return g.name===o.name&&g.ValueTypeName===l});if(c===void 0)continue;let h=0;const u=o.getValueSize();o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(h=u/3);let f=0;const d=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=d/3);const p=o.times.length-1;let m;if(r<=o.times[0]){const g=h,y=u-h;m=Pn(o.values,g,y)}else if(r>=o.times[p]){const g=p*u+h,y=g+u-h;m=Pn(o.values,g,y)}else{const g=o.createInterpolant(),y=h,v=u-h;g.evaluate(r),m=Pn(g.resultBuffer,y,v)}l==="quaternion"&&new on().fromArray(m).normalize().conjugate().toArray(m);const _=c.times.length;for(let g=0;g<_;++g){const y=g*d+f;if(l==="quaternion")on.multiplyQuaternionsFlat(c.values,y,m,0,c.values,y);else{const v=d-f*2;for(let x=0;x<v;++x)c.values[y+x]-=m[x]}}}return s.blendMode=lh,s}const PS={arraySlice:Pn,convertArray:fs,isTypedArray:Lh,getKeyframeOrder:Qm,sortedArray:Gc,flattenJSON:Ih,subclip:CS,makeClipAdditive:RS};class la{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],r=t[n-1];e:{t:{let a;n:{i:if(!(e<i)){for(let o=n+2;;){if(i===void 0){if(e<r)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===o)break;if(r=i,i=t[++n],e<i)break t}a=t.length;break n}if(!(e>=r)){const o=t[1];e<o&&(n=2,r=o);for(let l=n-2;;){if(r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===l)break;if(i=r,r=t[--n-1],e>=r)break t}a=n,n=0;break n}break e}for(;n<a;){const o=n+a>>>1;e<t[o]?a=o:n=o+1}if(i=t[n],r=t[n-1],r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i;for(let a=0;a!==i;++a)t[a]=n[r+a];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class eg extends la{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:cs,endingEnd:cs}}intervalChanged_(e,t,n){const i=this.parameterPositions;let r=e-2,a=e+1,o=i[r],l=i[a];if(o===void 0)switch(this.getSettings_().endingStart){case hs:r=e,o=2*t-n;break;case Hr:r=i.length-2,o=t+i[r]-i[r+1];break;default:r=e,o=n}if(l===void 0)switch(this.getSettings_().endingEnd){case hs:a=e,l=2*n-t;break;case Hr:a=1,l=n+i[1]-i[0];break;default:a=e-1,l=t}const c=(n-t)*.5,h=this.valueSize;this._weightPrev=c/(t-o),this._weightNext=c/(l-n),this._offsetPrev=r*h,this._offsetNext=a*h}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=e*o,c=l-o,h=this._offsetPrev,u=this._offsetNext,f=this._weightPrev,d=this._weightNext,p=(n-t)/(i-t),m=p*p,_=m*p,g=-f*_+2*f*m-f*p,y=(1+f)*_+(-1.5-2*f)*m+(-.5+f)*p+1,v=(-1-d)*_+(1.5+d)*m+.5*p,x=d*_-d*m;for(let M=0;M!==o;++M)r[M]=g*a[h+M]+y*a[c+M]+v*a[l+M]+x*a[u+M];return r}}class Dh extends la{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=e*o,c=l-o,h=(n-t)/(i-t),u=1-h;for(let f=0;f!==o;++f)r[f]=a[c+f]*u+a[l+f]*h;return r}}class tg extends la{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class Gn{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=fs(t,this.TimeBufferType),this.values=fs(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:fs(e.times,Array),values:fs(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new tg(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Dh(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new eg(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case zr:t=this.InterpolantFactoryMethodDiscrete;break;case Vr:t=this.InterpolantFactoryMethodLinear;break;case lo:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return zr;case this.InterpolantFactoryMethodLinear:return Vr;case this.InterpolantFactoryMethodSmooth:return lo}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let r=0,a=i-1;for(;r!==i&&n[r]<e;)++r;for(;a!==-1&&n[a]>t;)--a;if(++a,r!==0||a!==i){r>=a&&(a=Math.max(a,1),r=a-1);const o=this.getValueSize();this.times=Pn(n,r,a),this.values=Pn(this.values,r*o,a*o)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,r=n.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let o=0;o!==r;o++){const l=n[o];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,l),e=!1;break}if(a!==null&&a>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,l,a),e=!1;break}a=l}if(i!==void 0&&Lh(i))for(let o=0,l=i.length;o!==l;++o){const c=i[o];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,c),e=!1;break}}return e}optimize(){const e=Pn(this.times),t=Pn(this.values),n=this.getValueSize(),i=this.getInterpolation()===lo,r=e.length-1;let a=1;for(let o=1;o<r;++o){let l=!1;const c=e[o],h=e[o+1];if(c!==h&&(o!==1||c!==e[0]))if(i)l=!0;else{const u=o*n,f=u-n,d=u+n;for(let p=0;p!==n;++p){const m=t[u+p];if(m!==t[f+p]||m!==t[d+p]){l=!0;break}}}if(l){if(o!==a){e[a]=e[o];const u=o*n,f=a*n;for(let d=0;d!==n;++d)t[f+d]=t[u+d]}++a}}if(r>0){e[a]=e[r];for(let o=r*n,l=a*n,c=0;c!==n;++c)t[l+c]=t[o+c];++a}return a!==e.length?(this.times=Pn(e,0,a),this.values=Pn(t,0,a*n)):(this.times=e,this.values=t),this}clone(){const e=Pn(this.times,0),t=Pn(this.values,0),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}Gn.prototype.TimeBufferType=Float32Array;Gn.prototype.ValueBufferType=Float32Array;Gn.prototype.DefaultInterpolation=Vr;class ys extends Gn{}ys.prototype.ValueTypeName="bool";ys.prototype.ValueBufferType=Array;ys.prototype.DefaultInterpolation=zr;ys.prototype.InterpolantFactoryMethodLinear=void 0;ys.prototype.InterpolantFactoryMethodSmooth=void 0;class Uh extends Gn{}Uh.prototype.ValueTypeName="color";class Jr extends Gn{}Jr.prototype.ValueTypeName="number";class ng extends la{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=(n-t)/(i-t);let c=e*o;for(let h=c+o;c!==h;c+=4)on.slerpFlat(r,0,a,c-o,a,c,l);return r}}class cr extends Gn{InterpolantFactoryMethodLinear(e){return new ng(this.times,this.values,this.getValueSize(),e)}}cr.prototype.ValueTypeName="quaternion";cr.prototype.DefaultInterpolation=Vr;cr.prototype.InterpolantFactoryMethodSmooth=void 0;class xs extends Gn{}xs.prototype.ValueTypeName="string";xs.prototype.ValueBufferType=Array;xs.prototype.DefaultInterpolation=zr;xs.prototype.InterpolantFactoryMethodLinear=void 0;xs.prototype.InterpolantFactoryMethodSmooth=void 0;class Kr extends Gn{}Kr.prototype.ValueTypeName="vector";class Qr{constructor(e,t=-1,n,i=Do){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=Tn(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let a=0,o=n.length;a!==o;++a)t.push(IS(n[a]).scale(i));const r=new this(e.name,e.duration,t,e.blendMode);return r.uuid=e.uuid,r}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let r=0,a=n.length;r!==a;++r)t.push(Gn.toJSON(n[r]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const r=t.length,a=[];for(let o=0;o<r;o++){let l=[],c=[];l.push((o+r-1)%r,o,(o+1)%r),c.push(0,1,0);const h=Qm(l);l=Gc(l,1,h),c=Gc(c,1,h),!i&&l[0]===0&&(l.push(r),c.push(c[0])),a.push(new Jr(".morphTargetInfluences["+t[o].name+"]",l,c).scale(1/n))}return new this(e,-1,a)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let o=0,l=e.length;o<l;o++){const c=e[o],h=c.name.match(r);if(h&&h.length>1){const u=h[1];let f=i[u];f||(i[u]=f=[]),f.push(c)}}const a=[];for(const o in i)a.push(this.CreateFromMorphTargetSequence(o,i[o],t,n));return a}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(u,f,d,p,m){if(d.length!==0){const _=[],g=[];Ih(d,_,g,p),_.length!==0&&m.push(new u(f,_,g))}},i=[],r=e.name||"default",a=e.fps||30,o=e.blendMode;let l=e.length||-1;const c=e.hierarchy||[];for(let u=0;u<c.length;u++){const f=c[u].keys;if(!(!f||f.length===0))if(f[0].morphTargets){const d={};let p;for(p=0;p<f.length;p++)if(f[p].morphTargets)for(let m=0;m<f[p].morphTargets.length;m++)d[f[p].morphTargets[m]]=-1;for(const m in d){const _=[],g=[];for(let y=0;y!==f[p].morphTargets.length;++y){const v=f[p];_.push(v.time),g.push(v.morphTarget===m?1:0)}i.push(new Jr(".morphTargetInfluence["+m+"]",_,g))}l=d.length*a}else{const d=".bones["+t[u].name+"]";n(Kr,d+".position",f,"pos",i),n(cr,d+".quaternion",f,"rot",i),n(Kr,d+".scale",f,"scl",i)}}return i.length===0?null:new this(r,l,i,o)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const r=this.tracks[n];t=Math.max(t,r.times[r.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function LS(s){switch(s.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Jr;case"vector":case"vector2":case"vector3":case"vector4":return Kr;case"color":return Uh;case"quaternion":return cr;case"bool":case"boolean":return ys;case"string":return xs}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+s)}function IS(s){if(s.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=LS(s.type);if(s.times===void 0){const t=[],n=[];Ih(s.keys,t,n,"value"),s.times=t,s.values=n}return e.parse!==void 0?e.parse(s):new e(s.name,s.times,s.values,s.interpolation)}const vs={enabled:!1,files:{},add:function(s,e){this.enabled!==!1&&(this.files[s]=e)},get:function(s){if(this.enabled!==!1)return this.files[s]},remove:function(s){delete this.files[s]},clear:function(){this.files={}}};class Nh{constructor(e,t,n){const i=this;let r=!1,a=0,o=0,l;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(h){o++,r===!1&&i.onStart!==void 0&&i.onStart(h,a,o),r=!0},this.itemEnd=function(h){a++,i.onProgress!==void 0&&i.onProgress(h,a,o),a===o&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(h){i.onError!==void 0&&i.onError(h)},this.resolveURL=function(h){return l?l(h):h},this.setURLModifier=function(h){return l=h,this},this.addHandler=function(h,u){return c.push(h,u),this},this.removeHandler=function(h){const u=c.indexOf(h);return u!==-1&&c.splice(u,2),this},this.getHandler=function(h){for(let u=0,f=c.length;u<f;u+=2){const d=c[u],p=c[u+1];if(d.global&&(d.lastIndex=0),d.test(h))return p}return null}}}const ig=new Nh;class yn{constructor(e){this.manager=e!==void 0?e:ig,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,r){n.load(e,i,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}yn.DEFAULT_MATERIAL_NAME="__DEFAULT";const ui={};class DS extends Error{constructor(e,t){super(e),this.response=t}}class gi extends yn{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=vs.get(e);if(r!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(r),this.manager.itemEnd(e)},0),r;if(ui[e]!==void 0){ui[e].push({onLoad:t,onProgress:n,onError:i});return}ui[e]=[],ui[e].push({onLoad:t,onProgress:n,onError:i});const a=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),o=this.mimeType,l=this.responseType;fetch(a).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||c.body===void 0||c.body.getReader===void 0)return c;const h=ui[e],u=c.body.getReader(),f=c.headers.get("Content-Length")||c.headers.get("X-File-Size"),d=f?parseInt(f):0,p=d!==0;let m=0;const _=new ReadableStream({start(g){y();function y(){u.read().then(({done:v,value:x})=>{if(v)g.close();else{m+=x.byteLength;const M=new ProgressEvent("progress",{lengthComputable:p,loaded:m,total:d});for(let w=0,T=h.length;w<T;w++){const I=h[w];I.onProgress&&I.onProgress(M)}g.enqueue(x),y()}})}}});return new Response(_)}else throw new DS(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`,c)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(h=>new DOMParser().parseFromString(h,o));case"json":return c.json();default:if(o===void 0)return c.text();{const u=/charset="?([^;"\s]*)"?/i.exec(o),f=u&&u[1]?u[1].toLowerCase():void 0,d=new TextDecoder(f);return c.arrayBuffer().then(p=>d.decode(p))}}}).then(c=>{vs.add(e,c);const h=ui[e];delete ui[e];for(let u=0,f=h.length;u<f;u++){const d=h[u];d.onLoad&&d.onLoad(c)}}).catch(c=>{const h=ui[e];if(h===void 0)throw this.manager.itemError(e),c;delete ui[e];for(let u=0,f=h.length;u<f;u++){const d=h[u];d.onError&&d.onError(c)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class US extends yn{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new gi(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(o){try{t(r.parse(JSON.parse(o)))}catch(l){i?i(l):console.error(l),r.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=Qr.parse(e[n]);t.push(i)}return t}}class NS extends yn{constructor(e){super(e)}load(e,t,n,i){const r=this,a=[],o=new xh,l=new gi(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setWithCredentials(r.withCredentials);let c=0;function h(u){l.load(e[u],function(f){const d=r.parse(f,!0);a[u]={width:d.width,height:d.height,format:d.format,mipmaps:d.mipmaps},c+=1,c===6&&(d.mipmapCount===1&&(o.minFilter=Ht),o.image=a,o.format=d.format,o.needsUpdate=!0,t&&t(o))},n,i)}if(Array.isArray(e))for(let u=0,f=e.length;u<f;++u)h(u);else l.load(e,function(u){const f=r.parse(u,!0);if(f.isCubemap){const d=f.mipmaps.length/f.mipmapCount;for(let p=0;p<d;p++){a[p]={mipmaps:[]};for(let m=0;m<f.mipmapCount;m++)a[p].mipmaps.push(f.mipmaps[p*f.mipmapCount+m]),a[p].format=f.format,a[p].width=f.width,a[p].height=f.height}o.image=a}else o.image.width=f.width,o.image.height=f.height,o.mipmaps=f.mipmaps;f.mipmapCount===1&&(o.minFilter=Ht),o.format=f.format,o.needsUpdate=!0,t&&t(o)},n,i);return o}}class ea extends yn{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,a=vs.get(e);if(a!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(a),r.manager.itemEnd(e)},0),a;const o=Xr("img");function l(){h(),vs.add(e,this),t&&t(this),r.manager.itemEnd(e)}function c(u){h(),i&&i(u),r.manager.itemError(e),r.manager.itemEnd(e)}function h(){o.removeEventListener("load",l,!1),o.removeEventListener("error",c,!1)}return o.addEventListener("load",l,!1),o.addEventListener("error",c,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),r.manager.itemStart(e),o.src=e,o}}class OS extends yn{constructor(e){super(e)}load(e,t,n,i){const r=new sa;r.colorSpace=at;const a=new ea(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let o=0;function l(c){a.load(e[c],function(h){r.images[c]=h,o++,o===6&&(r.needsUpdate=!0,t&&t(r))},void 0,i)}for(let c=0;c<e.length;++c)l(c);return r}}class kS extends yn{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new Ks,o=new gi(this.manager);return o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setPath(this.path),o.setWithCredentials(r.withCredentials),o.load(e,function(l){const c=r.parse(l);c&&(c.image!==void 0?a.image=c.image:c.data!==void 0&&(a.image.width=c.width,a.image.height=c.height,a.image.data=c.data),a.wrapS=c.wrapS!==void 0?c.wrapS:an,a.wrapT=c.wrapT!==void 0?c.wrapT:an,a.magFilter=c.magFilter!==void 0?c.magFilter:Ht,a.minFilter=c.minFilter!==void 0?c.minFilter:Ht,a.anisotropy=c.anisotropy!==void 0?c.anisotropy:1,c.colorSpace!==void 0?a.colorSpace=c.colorSpace:c.encoding!==void 0&&(a.encoding=c.encoding),c.flipY!==void 0&&(a.flipY=c.flipY),c.format!==void 0&&(a.format=c.format),c.type!==void 0&&(a.type=c.type),c.mipmaps!==void 0&&(a.mipmaps=c.mipmaps,a.minFilter=Ni),c.mipmapCount===1&&(a.minFilter=Ht),c.generateMipmaps!==void 0&&(a.generateMipmaps=c.generateMipmaps),a.needsUpdate=!0,t&&t(a,c))},n,i),a}}class FS extends yn{constructor(e){super(e)}load(e,t,n,i){const r=new Gt,a=new ea(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(o){r.image=o,r.needsUpdate=!0,t!==void 0&&t(r)},n,i),r}}class $i extends vt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new be(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class sg extends $i{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(vt.DEFAULT_UP),this.updateMatrix(),this.groundColor=new be(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const Yl=new nt,Af=new E,Cf=new E;class Oh{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ne(512,512),this.map=null,this.mapPass=null,this.matrix=new nt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Bo,this._frameExtents=new ne(1,1),this._viewportCount=1,this._viewports=[new Tt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;Af.setFromMatrixPosition(e.matrixWorld),t.position.copy(Af),Cf.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Cf),t.updateMatrixWorld(),Yl.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Yl),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Yl)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class BS extends Oh{constructor(){super(new en(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=er*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;(n!==t.fov||i!==t.aspect||r!==t.far)&&(t.fov=n,t.aspect=i,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class rg extends $i{constructor(e,t,n=0,i=Math.PI/3,r=0,a=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(vt.DEFAULT_UP),this.updateMatrix(),this.target=new vt,this.distance=n,this.angle=i,this.penumbra=r,this.decay=a,this.map=null,this.shadow=new BS}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const Rf=new nt,xr=new E,ql=new E;class zS extends Oh{constructor(){super(new en(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new ne(4,2),this._viewportCount=6,this._viewports=[new Tt(2,1,1,1),new Tt(0,1,1,1),new Tt(3,1,1,1),new Tt(1,1,1,1),new Tt(3,0,1,1),new Tt(1,0,1,1)],this._cubeDirections=[new E(1,0,0),new E(-1,0,0),new E(0,0,1),new E(0,0,-1),new E(0,1,0),new E(0,-1,0)],this._cubeUps=[new E(0,1,0),new E(0,1,0),new E(0,1,0),new E(0,1,0),new E(0,0,1),new E(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,r=e.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),xr.setFromMatrixPosition(e.matrixWorld),n.position.copy(xr),ql.copy(n.position),ql.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(ql),n.updateMatrixWorld(),i.makeTranslation(-xr.x,-xr.y,-xr.z),Rf.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Rf)}}class ag extends $i{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new zS}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class VS extends Oh{constructor(){super(new Oi(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class kh extends $i{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(vt.DEFAULT_UP),this.updateMatrix(),this.target=new vt,this.shadow=new VS}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class Fh extends $i{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class og extends $i{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class lg{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new E)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,r=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.282095),t.addScaledVector(a[1],.488603*i),t.addScaledVector(a[2],.488603*r),t.addScaledVector(a[3],.488603*n),t.addScaledVector(a[4],1.092548*(n*i)),t.addScaledVector(a[5],1.092548*(i*r)),t.addScaledVector(a[6],.315392*(3*r*r-1)),t.addScaledVector(a[7],1.092548*(n*r)),t.addScaledVector(a[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,r=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.886227),t.addScaledVector(a[1],2*.511664*i),t.addScaledVector(a[2],2*.511664*r),t.addScaledVector(a[3],2*.511664*n),t.addScaledVector(a[4],2*.429043*n*i),t.addScaledVector(a[5],2*.429043*i*r),t.addScaledVector(a[6],.743125*r*r-.247708),t.addScaledVector(a[7],2*.429043*n*r),t.addScaledVector(a[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,r=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*r,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*n*r,t[8]=.546274*(n*n-i*i)}}class ll extends $i{constructor(e=new lg,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class cl extends yn{constructor(e){super(e),this.textures={}}load(e,t,n,i){const r=this,a=new gi(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(e,function(o){try{t(r.parse(JSON.parse(o)))}catch(l){i?i(l):console.error(l),r.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(r){return t[r]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",r),t[r]}const i=cl.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new be().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(i.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(i.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(i.alphaHash=e.alphaHash),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==1&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(i.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const r in e.uniforms){const a=e.uniforms[r];switch(i.uniforms[r]={},a.type){case"t":i.uniforms[r].value=n(a.value);break;case"c":i.uniforms[r].value=new be().setHex(a.value);break;case"v2":i.uniforms[r].value=new ne().fromArray(a.value);break;case"v3":i.uniforms[r].value=new E().fromArray(a.value);break;case"v4":i.uniforms[r].value=new Tt().fromArray(a.value);break;case"m3":i.uniforms[r].value=new ct().fromArray(a.value);break;case"m4":i.uniforms[r].value=new nt().fromArray(a.value);break;default:i.uniforms[r].value=a.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const r in e.extensions)i.extensions[r]=e.extensions[r];if(e.lights!==void 0&&(i.lights=e.lights),e.clipping!==void 0&&(i.clipping=e.clipping),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let r=e.normalScale;Array.isArray(r)===!1&&(r=[r,r]),i.normalScale=new ne().fromArray(r)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new ne().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.anisotropyMap!==void 0&&(i.anisotropyMap=n(e.anisotropyMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){const t={ShadowMaterial:$m,SpriteMaterial:$r,RawShaderMaterial:Ym,ShaderMaterial:tn,PointsMaterial:yh,MeshPhysicalMaterial:qm,MeshStandardMaterial:Ch,MeshPhongMaterial:Rh,MeshToonMaterial:Zm,MeshNormalMaterial:jm,MeshLambertMaterial:Ph,MeshDepthMaterial:Vo,MeshDistanceMaterial:_h,MeshBasicMaterial:Qt,MeshMatcapMaterial:Jm,LineDashedMaterial:Km,LineBasicMaterial:cn,Material:ln};return new t[e]}}class Wc{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class cg extends st{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class hg extends yn{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new gi(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(e,function(o){try{t(r.parse(JSON.parse(o)))}catch(l){i?i(l):console.error(l),r.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(d,p){if(t[p]!==void 0)return t[p];const _=d.interleavedBuffers[p],g=r(d,_.buffer),y=Ys(_.type,g),v=new $o(y,_.stride);return v.uuid=_.uuid,t[p]=v,v}function r(d,p){if(n[p]!==void 0)return n[p];const _=d.arrayBuffers[p],g=new Uint32Array(_).buffer;return n[p]=g,g}const a=e.isInstancedBufferGeometry?new cg:new st,o=e.data.index;if(o!==void 0){const d=Ys(o.type,o.array);a.setIndex(new At(d,1))}const l=e.data.attributes;for(const d in l){const p=l[d];let m;if(p.isInterleavedBufferAttribute){const _=i(e.data,p.data);m=new gs(_,p.itemSize,p.offset,p.normalized)}else{const _=Ys(p.type,p.array),g=p.isInstancedBufferAttribute?nr:At;m=new g(_,p.itemSize,p.normalized)}p.name!==void 0&&(m.name=p.name),p.usage!==void 0&&m.setUsage(p.usage),p.updateRange!==void 0&&(m.updateRange.offset=p.updateRange.offset,m.updateRange.count=p.updateRange.count),a.setAttribute(d,m)}const c=e.data.morphAttributes;if(c)for(const d in c){const p=c[d],m=[];for(let _=0,g=p.length;_<g;_++){const y=p[_];let v;if(y.isInterleavedBufferAttribute){const x=i(e.data,y.data);v=new gs(x,y.itemSize,y.offset,y.normalized)}else{const x=Ys(y.type,y.array);v=new At(x,y.itemSize,y.normalized)}y.name!==void 0&&(v.name=y.name),m.push(v)}a.morphAttributes[d]=m}e.data.morphTargetsRelative&&(a.morphTargetsRelative=!0);const u=e.data.groups||e.data.drawcalls||e.data.offsets;if(u!==void 0)for(let d=0,p=u.length;d!==p;++d){const m=u[d];a.addGroup(m.start,m.count,m.materialIndex)}const f=e.data.boundingSphere;if(f!==void 0){const d=new E;f.center!==void 0&&d.fromArray(f.center),a.boundingSphere=new zn(d,f.radius)}return e.name&&(a.name=e.name),e.userData&&(a.userData=e.userData),a}}class HS extends yn{constructor(e){super(e)}load(e,t,n,i){const r=this,a=this.path===""?Wc.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||a;const o=new gi(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(l){let c=null;try{c=JSON.parse(l)}catch(u){i!==void 0&&i(u),console.error("THREE:ObjectLoader: Can't parse "+e+".",u.message);return}const h=c.metadata;if(h===void 0||h.type===void 0||h.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}r.parse(c,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?Wc.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const r=new gi(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials);const a=await r.loadAsync(e,t),o=JSON.parse(a),l=o.metadata;if(l===void 0||l.type===void 0||l.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(o)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,i),a=this.parseImages(e.images,function(){t!==void 0&&t(c)}),o=this.parseTextures(e.textures,a),l=this.parseMaterials(e.materials,o),c=this.parseObject(e.object,r,l,o,n),h=this.parseSkeletons(e.skeletons,c);if(this.bindSkeletons(c,h),t!==void 0){let u=!1;for(const f in a)if(a[f].data instanceof HTMLImageElement){u=!0;break}u===!1&&t(c)}return c}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),r=await this.parseImagesAsync(e.images),a=this.parseTextures(e.textures,r),o=this.parseMaterials(e.materials,a),l=this.parseObject(e.object,i,o,a,t),c=this.parseSkeletons(e.skeletons,l);return this.bindSkeletons(l,c),l}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const r=new Li().fromJSON(e[n]);t[r.uuid]=r}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(r){r.isBone&&(i[r.uuid]=r)}),e!==void 0)for(let r=0,a=e.length;r<a;r++){const o=new Yo().fromJSON(e[r],i);n[o.uuid]=o}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new hg;for(let r=0,a=e.length;r<a;r++){let o;const l=e[r];switch(l.type){case"BufferGeometry":case"InstancedBufferGeometry":o=i.parse(l);break;default:l.type in Tf?o=Tf[l.type].fromJSON(l,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${l.type}"`)}o.uuid=l.uuid,l.name!==void 0&&(o.name=l.name),l.userData!==void 0&&(o.userData=l.userData),n[l.uuid]=o}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const r=new cl;r.setTextures(t);for(let a=0,o=e.length;a<o;a++){const l=e[a];n[l.uuid]===void 0&&(n[l.uuid]=r.parse(l)),i[l.uuid]=n[l.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],r=Qr.parse(i);t[r.uuid]=r}return t}parseImages(e,t){const n=this,i={};let r;function a(l){return n.manager.itemStart(l),r.load(l,function(){n.manager.itemEnd(l)},void 0,function(){n.manager.itemError(l),n.manager.itemEnd(l)})}function o(l){if(typeof l=="string"){const c=l,h=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:n.resourcePath+c;return a(h)}else return l.data?{data:Ys(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){const l=new Nh(t);r=new ea(l),r.setCrossOrigin(this.crossOrigin);for(let c=0,h=e.length;c<h;c++){const u=e[c],f=u.url;if(Array.isArray(f)){const d=[];for(let p=0,m=f.length;p<m;p++){const _=f[p],g=o(_);g!==null&&(g instanceof HTMLImageElement?d.push(g):d.push(new Ks(g.data,g.width,g.height)))}i[u.uuid]=new us(d)}else{const d=o(u.url);i[u.uuid]=new us(d)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function r(a){if(typeof a=="string"){const o=a,l=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(o)?o:t.resourcePath+o;return await i.loadAsync(l)}else return a.data?{data:Ys(a.type,a.data),width:a.width,height:a.height}:null}if(e!==void 0&&e.length>0){i=new ea(this.manager),i.setCrossOrigin(this.crossOrigin);for(let a=0,o=e.length;a<o;a++){const l=e[a],c=l.url;if(Array.isArray(c)){const h=[];for(let u=0,f=c.length;u<f;u++){const d=c[u],p=await r(d);p!==null&&(p instanceof HTMLImageElement?h.push(p):h.push(new Ks(p.data,p.width,p.height)))}n[l.uuid]=new us(h)}else{const h=await r(l.url);n[l.uuid]=new us(h)}}}return n}parseTextures(e,t){function n(r,a){return typeof r=="number"?r:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",r),a[r])}const i={};if(e!==void 0)for(let r=0,a=e.length;r<a;r++){const o=e[r];o.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',o.uuid),t[o.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",o.image);const l=t[o.image],c=l.data;let h;Array.isArray(c)?(h=new sa,c.length===6&&(h.needsUpdate=!0)):(c&&c.data?h=new Ks:h=new Gt,c&&(h.needsUpdate=!0)),h.source=l,h.uuid=o.uuid,o.name!==void 0&&(h.name=o.name),o.mapping!==void 0&&(h.mapping=n(o.mapping,GS)),o.channel!==void 0&&(h.channel=o.channel),o.offset!==void 0&&h.offset.fromArray(o.offset),o.repeat!==void 0&&h.repeat.fromArray(o.repeat),o.center!==void 0&&h.center.fromArray(o.center),o.rotation!==void 0&&(h.rotation=o.rotation),o.wrap!==void 0&&(h.wrapS=n(o.wrap[0],Pf),h.wrapT=n(o.wrap[1],Pf)),o.format!==void 0&&(h.format=o.format),o.internalFormat!==void 0&&(h.internalFormat=o.internalFormat),o.type!==void 0&&(h.type=o.type),o.colorSpace!==void 0&&(h.colorSpace=o.colorSpace),o.encoding!==void 0&&(h.encoding=o.encoding),o.minFilter!==void 0&&(h.minFilter=n(o.minFilter,Lf)),o.magFilter!==void 0&&(h.magFilter=n(o.magFilter,Lf)),o.anisotropy!==void 0&&(h.anisotropy=o.anisotropy),o.flipY!==void 0&&(h.flipY=o.flipY),o.generateMipmaps!==void 0&&(h.generateMipmaps=o.generateMipmaps),o.premultiplyAlpha!==void 0&&(h.premultiplyAlpha=o.premultiplyAlpha),o.unpackAlignment!==void 0&&(h.unpackAlignment=o.unpackAlignment),o.compareFunction!==void 0&&(h.compareFunction=o.compareFunction),o.userData!==void 0&&(h.userData=o.userData),i[o.uuid]=h}return i}parseObject(e,t,n,i,r){let a;function o(f){return t[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",f),t[f]}function l(f){if(f!==void 0){if(Array.isArray(f)){const d=[];for(let p=0,m=f.length;p<m;p++){const _=f[p];n[_]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",_),d.push(n[_])}return d}return n[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",f),n[f]}}function c(f){return i[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",f),i[f]}let h,u;switch(e.type){case"Scene":a=new Xo,e.background!==void 0&&(Number.isInteger(e.background)?a.background=new be(e.background):a.background=c(e.background)),e.environment!==void 0&&(a.environment=c(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?a.fog=new Wo(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(a.fog=new Go(e.fog.color,e.fog.density))),e.backgroundBlurriness!==void 0&&(a.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(a.backgroundIntensity=e.backgroundIntensity);break;case"PerspectiveCamera":a=new en(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(a.focus=e.focus),e.zoom!==void 0&&(a.zoom=e.zoom),e.filmGauge!==void 0&&(a.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(a.filmOffset=e.filmOffset),e.view!==void 0&&(a.view=Object.assign({},e.view));break;case"OrthographicCamera":a=new Oi(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(a.zoom=e.zoom),e.view!==void 0&&(a.view=Object.assign({},e.view));break;case"AmbientLight":a=new Fh(e.color,e.intensity);break;case"DirectionalLight":a=new kh(e.color,e.intensity);break;case"PointLight":a=new ag(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":a=new og(e.color,e.intensity,e.width,e.height);break;case"SpotLight":a=new rg(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":a=new sg(e.color,e.groundColor,e.intensity);break;case"LightProbe":a=new ll().fromJSON(e);break;case"SkinnedMesh":h=o(e.geometry),u=l(e.material),a=new Dm(h,u),e.bindMode!==void 0&&(a.bindMode=e.bindMode),e.bindMatrix!==void 0&&a.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(a.skeleton=e.skeleton);break;case"Mesh":h=o(e.geometry),u=l(e.material),a=new Rt(h,u);break;case"InstancedMesh":h=o(e.geometry),u=l(e.material);const f=e.count,d=e.instanceMatrix,p=e.instanceColor;a=new Eo(h,u,f),a.instanceMatrix=new nr(new Float32Array(d.array),16),p!==void 0&&(a.instanceColor=new nr(new Float32Array(p.array),p.itemSize));break;case"LOD":a=new Im;break;case"Line":a=new ki(o(e.geometry),l(e.material));break;case"LineLoop":a=new Um(o(e.geometry),l(e.material));break;case"LineSegments":a=new Vn(o(e.geometry),l(e.material));break;case"PointCloud":case"Points":a=new Nm(o(e.geometry),l(e.material));break;case"Sprite":a=new wo(l(e.material));break;case"Group":a=new $t;break;case"Bone":a=new vh;break;default:a=new vt}if(a.uuid=e.uuid,e.name!==void 0&&(a.name=e.name),e.matrix!==void 0?(a.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(a.matrixAutoUpdate=e.matrixAutoUpdate),a.matrixAutoUpdate&&a.matrix.decompose(a.position,a.quaternion,a.scale)):(e.position!==void 0&&a.position.fromArray(e.position),e.rotation!==void 0&&a.rotation.fromArray(e.rotation),e.quaternion!==void 0&&a.quaternion.fromArray(e.quaternion),e.scale!==void 0&&a.scale.fromArray(e.scale)),e.up!==void 0&&a.up.fromArray(e.up),e.castShadow!==void 0&&(a.castShadow=e.castShadow),e.receiveShadow!==void 0&&(a.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(a.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(a.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(a.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&a.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(a.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(a.visible=e.visible),e.frustumCulled!==void 0&&(a.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(a.renderOrder=e.renderOrder),e.userData!==void 0&&(a.userData=e.userData),e.layers!==void 0&&(a.layers.mask=e.layers),e.children!==void 0){const f=e.children;for(let d=0;d<f.length;d++)a.add(this.parseObject(f[d],t,n,i,r))}if(e.animations!==void 0){const f=e.animations;for(let d=0;d<f.length;d++){const p=f[d];a.animations.push(r[p])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(a.autoUpdate=e.autoUpdate);const f=e.levels;for(let d=0;d<f.length;d++){const p=f[d],m=a.getObjectByProperty("uuid",p.object);m!==void 0&&a.addLevel(m,p.distance,p.hysteresis)}}return a}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}}const GS={UVMapping:Lo,CubeReflectionMapping:Di,CubeRefractionMapping:Ui,EquirectangularReflectionMapping:Or,EquirectangularRefractionMapping:kr,CubeUVReflectionMapping:sr},Pf={RepeatWrapping:Fr,ClampToEdgeWrapping:an,MirroredRepeatWrapping:Br},Lf={NearestFilter:Vt,NearestMipmapNearestFilter:Mo,NearestMipmapLinearFilter:Tr,LinearFilter:Ht,LinearMipmapNearestFilter:th,LinearMipmapLinearFilter:Ni};class WS extends yn{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,a=vs.get(e);if(a!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(a),r.manager.itemEnd(e)},0),a;const o={};o.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",o.headers=this.requestHeader,fetch(e,o).then(function(l){return l.blob()}).then(function(l){return createImageBitmap(l,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(l){vs.add(e,l),t&&t(l),r.manager.itemEnd(e)}).catch(function(l){i&&i(l),r.manager.itemError(e),r.manager.itemEnd(e)}),r.manager.itemStart(e)}}let qa;class Bh{static getContext(){return qa===void 0&&(qa=new(window.AudioContext||window.webkitAudioContext)),qa}static setContext(e){qa=e}}class XS extends yn{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new gi(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(l){try{const c=l.slice(0);Bh.getContext().decodeAudioData(c,function(u){t(u)},o)}catch(c){o(c)}},n,i);function o(l){i?i(l):console.error(l),r.manager.itemError(e)}}}class $S extends ll{constructor(e,t,n=1){super(void 0,n),this.isHemisphereLightProbe=!0;const i=new be().set(e),r=new be().set(t),a=new E(i.r,i.g,i.b),o=new E(r.r,r.g,r.b),l=Math.sqrt(Math.PI),c=l*Math.sqrt(.75);this.sh.coefficients[0].copy(a).add(o).multiplyScalar(l),this.sh.coefficients[1].copy(a).sub(o).multiplyScalar(c)}}class YS extends ll{constructor(e,t=1){super(void 0,t),this.isAmbientLightProbe=!0;const n=new be().set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}const If=new nt,Df=new nt,Qi=new nt;class qS{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new en,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new en,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,Qi.copy(e.projectionMatrix);const i=t.eyeSep/2,r=i*t.near/t.focus,a=t.near*Math.tan(ps*t.fov*.5)/t.zoom;let o,l;Df.elements[12]=-i,If.elements[12]=i,o=-a*t.aspect+r,l=a*t.aspect+r,Qi.elements[0]=2*t.near/(l-o),Qi.elements[8]=(l+o)/(l-o),this.cameraL.projectionMatrix.copy(Qi),o=-a*t.aspect-r,l=a*t.aspect-r,Qi.elements[0]=2*t.near/(l-o),Qi.elements[8]=(l+o)/(l-o),this.cameraR.projectionMatrix.copy(Qi)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Df),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(If)}}class zh{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Uf(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=Uf();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function Uf(){return(typeof performance>"u"?Date:performance).now()}const es=new E,Nf=new on,ZS=new E,ts=new E;class jS extends vt{constructor(){super(),this.type="AudioListener",this.context=Bh.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new zh}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(es,Nf,ZS),ts.set(0,0,-1).applyQuaternion(Nf),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(es.x,i),t.positionY.linearRampToValueAtTime(es.y,i),t.positionZ.linearRampToValueAtTime(es.z,i),t.forwardX.linearRampToValueAtTime(ts.x,i),t.forwardY.linearRampToValueAtTime(ts.y,i),t.forwardZ.linearRampToValueAtTime(ts.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(es.x,es.y,es.z),t.setOrientation(ts.x,ts.y,ts.z,n.x,n.y,n.z)}}class ug extends vt{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const ns=new E,Of=new on,JS=new E,is=new E;class KS extends ug{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(ns,Of,JS),is.set(0,0,1).applyQuaternion(Of);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(ns.x,n),t.positionY.linearRampToValueAtTime(ns.y,n),t.positionZ.linearRampToValueAtTime(ns.z,n),t.orientationX.linearRampToValueAtTime(is.x,n),t.orientationY.linearRampToValueAtTime(is.y,n),t.orientationZ.linearRampToValueAtTime(is.z,n)}else t.setPosition(ns.x,ns.y,ns.z),t.setOrientation(is.x,is.y,is.z)}}class QS{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class fg{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,r,a;switch(t){case"quaternion":i=this._slerp,r=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,r=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,r=e*i+i;let a=this.cumulativeWeight;if(a===0){for(let o=0;o!==i;++o)n[r+o]=n[o];a=t}else{a+=t;const o=t/a;this._mixBufferRegion(n,r,0,o,i)}this.cumulativeWeight=a}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,r=this.cumulativeWeight,a=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const l=t*this._origIndex;this._mixBufferRegion(n,i,l,1-r,t)}a>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let l=t,c=t+t;l!==c;++l)if(n[l]!==n[l+t]){o.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let r=n,a=i;r!==a;++r)t[r]=t[i+r%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,r){if(i>=.5)for(let a=0;a!==r;++a)e[t+a]=e[n+a]}_slerp(e,t,n,i){on.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,r){const a=this._workIndex*r;on.multiplyQuaternionsFlat(e,a,e,t,e,n),on.slerpFlat(e,t,e,t,e,a,i)}_lerp(e,t,n,i,r){const a=1-i;for(let o=0;o!==r;++o){const l=t+o;e[l]=e[l]*a+e[n+o]*i}}_lerpAdditive(e,t,n,i,r){for(let a=0;a!==r;++a){const o=t+a;e[o]=e[o]+e[n+a]*i}}}const Vh="\\[\\]\\.:\\/",ew=new RegExp("["+Vh+"]","g"),Hh="[^"+Vh+"]",tw="[^"+Vh.replace("\\.","")+"]",nw=/((?:WC+[\/:])*)/.source.replace("WC",Hh),iw=/(WCOD+)?/.source.replace("WCOD",tw),sw=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Hh),rw=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Hh),aw=new RegExp("^"+nw+iw+sw+rw+"$"),ow=["material","materials","bones","map"];class lw{constructor(e,t,n){const i=n||yt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class yt{constructor(e,t,n){this.path=t,this.parsedPath=n||yt.parseTrackName(t),this.node=yt.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new yt.Composite(e,t,n):new yt(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(ew,"")}static parseTrackName(e){const t=aw.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const r=n.nodeName.substring(i+1);ow.indexOf(r)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=r)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(r){for(let a=0;a<r.length;a++){const o=r[a];if(o.name===t||o.uuid===t)return o;const l=n(o.children);if(l)return l}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let r=t.propertyIndex;if(e||(e=yt.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let c=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let h=0;h<e.length;h++)if(e[h].name===c){c=h;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(c!==void 0){if(e[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[c]}}const a=e[i];if(a===void 0){const c=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+i+" but it wasn't found.",e);return}let o=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?o=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(o=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(r!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[r]!==void 0&&(r=e.morphTargetDictionary[r])}l=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=r}else a.fromArray!==void 0&&a.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(l=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=i;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][o]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}yt.Composite=lw;yt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};yt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};yt.prototype.GetterByBindingType=[yt.prototype._getValue_direct,yt.prototype._getValue_array,yt.prototype._getValue_arrayElement,yt.prototype._getValue_toArray];yt.prototype.SetterByBindingTypeAndVersioning=[[yt.prototype._setValue_direct,yt.prototype._setValue_direct_setNeedsUpdate,yt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[yt.prototype._setValue_array,yt.prototype._setValue_array_setNeedsUpdate,yt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[yt.prototype._setValue_arrayElement,yt.prototype._setValue_arrayElement_setNeedsUpdate,yt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[yt.prototype._setValue_fromArray,yt.prototype._setValue_fromArray_setNeedsUpdate,yt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class cw{constructor(){this.isAnimationObjectGroup=!0,this.uuid=Tn(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,r=this._bindings,a=r.length;let o,l=e.length,c=this.nCachedObjects_;for(let h=0,u=arguments.length;h!==u;++h){const f=arguments[h],d=f.uuid;let p=t[d];if(p===void 0){p=l++,t[d]=p,e.push(f);for(let m=0,_=a;m!==_;++m)r[m].push(new yt(f,n[m],i[m]))}else if(p<c){o=e[p];const m=--c,_=e[m];t[_.uuid]=p,e[p]=_,t[d]=m,e[m]=f;for(let g=0,y=a;g!==y;++g){const v=r[g],x=v[m];let M=v[p];v[p]=x,M===void 0&&(M=new yt(f,n[g],i[g])),v[m]=M}}else e[p]!==o&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_;for(let a=0,o=arguments.length;a!==o;++a){const l=arguments[a],c=l.uuid,h=t[c];if(h!==void 0&&h>=r){const u=r++,f=e[u];t[f.uuid]=h,e[h]=f,t[c]=u,e[u]=l;for(let d=0,p=i;d!==p;++d){const m=n[d],_=m[u],g=m[h];m[h]=_,m[u]=g}}}this.nCachedObjects_=r}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_,a=e.length;for(let o=0,l=arguments.length;o!==l;++o){const c=arguments[o],h=c.uuid,u=t[h];if(u!==void 0)if(delete t[h],u<r){const f=--r,d=e[f],p=--a,m=e[p];t[d.uuid]=u,e[u]=d,t[m.uuid]=f,e[f]=m,e.pop();for(let _=0,g=i;_!==g;++_){const y=n[_],v=y[f],x=y[p];y[u]=v,y[f]=x,y.pop()}}else{const f=--a,d=e[f];f>0&&(t[d.uuid]=u),e[u]=d,e.pop();for(let p=0,m=i;p!==m;++p){const _=n[p];_[u]=_[f],_.pop()}}}this.nCachedObjects_=r}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const r=this._bindings;if(i!==void 0)return r[i];const a=this._paths,o=this._parsedPaths,l=this._objects,c=l.length,h=this.nCachedObjects_,u=new Array(c);i=r.length,n[e]=i,a.push(e),o.push(t),r.push(u);for(let f=h,d=l.length;f!==d;++f){const p=l[f];u[f]=new yt(p,e,t)}return u}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,r=this._parsedPaths,a=this._bindings,o=a.length-1,l=a[o],c=e[o];t[c]=n,a[n]=l,a.pop(),r[n]=r[o],r.pop(),i[n]=i[o],i.pop()}}}class dg{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const r=t.tracks,a=r.length,o=new Array(a),l={endingStart:cs,endingEnd:cs};for(let c=0;c!==a;++c){const h=r[c].createInterpolant(null);o[c]=h,h.settings=l}this._interpolantSettings=l,this._interpolants=o,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=im,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,r=e._clip.duration,a=r/i,o=i/r;e.warp(1,a,t),this.warp(o,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,r=i.time,a=this.timeScale;let o=this._timeScaleInterpolant;o===null&&(o=i._lendControlInterpolant(),this._timeScaleInterpolant=o);const l=o.parameterPositions,c=o.sampleValues;return l[0]=r,l[1]=r+n,c[0]=e/a,c[1]=t/a,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const r=this._startTime;if(r!==null){const l=(e-r)*n;l<0||n===0?t=0:(this._startTime=null,t=n*l)}t*=this._updateTimeScale(e);const a=this._updateTime(t),o=this._updateWeight(e);if(o>0){const l=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case lh:for(let h=0,u=l.length;h!==u;++h)l[h].evaluate(a),c[h].accumulateAdditive(o);break;case Do:default:for(let h=0,u=l.length;h!==u;++h)l[h].evaluate(a),c[h].accumulate(i,o)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,r=this._loopCount;const a=n===sm;if(e===0)return r===-1?i:a&&(r&1)===1?t-i:i;if(n===nm){r===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(r===-1&&(e>=0?(r=0,this._setEndings(!0,this.repetitions===0,a)):this._setEndings(this.repetitions===0,!0,a)),i>=t||i<0){const o=Math.floor(i/t);i-=t*o,r+=Math.abs(o);const l=this.repetitions-r;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){const c=e<0;this._setEndings(c,!c,a)}else this._setEndings(!1,!1,a);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}else this.time=i;if(a&&(r&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=hs,i.endingEnd=hs):(e?i.endingStart=this.zeroSlopeAtStart?hs:cs:i.endingStart=Hr,t?i.endingEnd=this.zeroSlopeAtEnd?hs:cs:i.endingEnd=Hr)}_scheduleFading(e,t,n){const i=this._mixer,r=i.time;let a=this._weightInterpolant;a===null&&(a=i._lendControlInterpolant(),this._weightInterpolant=a);const o=a.parameterPositions,l=a.sampleValues;return o[0]=r,l[0]=t,o[1]=r+e,l[1]=n,this}}const hw=new Float32Array(1);class uw extends ni{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,r=i.length,a=e._propertyBindings,o=e._interpolants,l=n.uuid,c=this._bindingsByRootAndName;let h=c[l];h===void 0&&(h={},c[l]=h);for(let u=0;u!==r;++u){const f=i[u],d=f.name;let p=h[d];if(p!==void 0)++p.referenceCount,a[u]=p;else{if(p=a[u],p!==void 0){p._cacheIndex===null&&(++p.referenceCount,this._addInactiveBinding(p,l,d));continue}const m=t&&t._propertyBindings[u].binding.parsedPath;p=new fg(yt.create(n,d,m),f.ValueTypeName,f.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,l,d),a[u]=p}o[u].resultBuffer=p.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,r=this._actionsByClip[i];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];r.useCount++===0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,r=this._actionsByClip;let a=r[t];if(a===void 0)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=a;else{const o=a.knownActions;e._byClipCacheIndex=o.length,o.push(e)}e._cacheIndex=i.length,i.push(e),a.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const r=e._clip.uuid,a=this._actionsByClip,o=a[r],l=o.knownActions,c=l[l.length-1],h=e._byClipCacheIndex;c._byClipCacheIndex=h,l[h]=c,l.pop(),e._byClipCacheIndex=null;const u=o.actionByRoot,f=(e._localRoot||this._root).uuid;delete u[f],l.length===0&&delete a[r],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.referenceCount===0&&this._removeInactiveBinding(r)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,r=this._bindings;let a=i[t];a===void 0&&(a={},i[t]=a),a[n]=e,e._cacheIndex=r.length,r.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,r=n.path,a=this._bindingsByRootAndName,o=a[i],l=t[t.length-1],c=e._cacheIndex;l._cacheIndex=c,t[c]=l,t.pop(),delete o[r],Object.keys(o).length===0&&delete a[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new Dh(new Float32Array(2),new Float32Array(2),1,hw),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,r=t[i];e.__cacheIndex=i,t[i]=e,r.__cacheIndex=n,t[n]=r}clipAction(e,t,n){const i=t||this._root,r=i.uuid;let a=typeof e=="string"?Qr.findByName(i,e):e;const o=a!==null?a.uuid:e,l=this._actionsByClip[o];let c=null;if(n===void 0&&(a!==null?n=a.blendMode:n=Do),l!==void 0){const u=l.actionByRoot[r];if(u!==void 0&&u.blendMode===n)return u;c=l.knownActions[0],a===null&&(a=c._clip)}if(a===null)return null;const h=new dg(this,a,t,n);return this._bindAction(h,c),this._addInactiveAction(h,o,r),h}existingAction(e,t){const n=t||this._root,i=n.uuid,r=typeof e=="string"?Qr.findByName(n,e):e,a=r?r.uuid:e,o=this._actionsByClip[a];return o!==void 0&&o.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,r=Math.sign(e),a=this._accuIndex^=1;for(let c=0;c!==n;++c)t[c]._update(i,e,r,a);const o=this._bindings,l=this._nActiveBindings;for(let c=0;c!==l;++c)o[c].apply(a);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,r=i[n];if(r!==void 0){const a=r.knownActions;for(let o=0,l=a.length;o!==l;++o){const c=a[o];this._deactivateAction(c);const h=c._cacheIndex,u=t[t.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,u._cacheIndex=h,t[h]=u,t.pop(),this._removeInactiveBindingsForAction(c)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const a in n){const o=n[a].actionByRoot,l=o[t];l!==void 0&&(this._deactivateAction(l),this._removeInactiveAction(l))}const i=this._bindingsByRootAndName,r=i[t];if(r!==void 0)for(const a in r){const o=r[a];o.restoreOriginalState(),this._removeInactiveBinding(o)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class Gh{constructor(e){this.value=e}clone(){return new Gh(this.value.clone===void 0?this.value:this.value.clone())}}let fw=0;class dw extends ni{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:fw++}),this.name="",this.usage=Gr,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++)this.uniforms.push(t[n].clone());return this}clone(){return new this.constructor().copy(this)}}class pw extends $o{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class mw{constructor(e,t,n,i,r){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=r,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}class Wh{constructor(e,t,n=0,i=1/0){this.ray=new rr(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new No,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return Xc(e,this,n,t),n.sort(kf),n}intersectObjects(e,t=!0,n=[]){for(let i=0,r=e.length;i<r;i++)Xc(e[i],this,n,t);return n.sort(kf),n}}function kf(s,e){return s.distance-e.distance}function Xc(s,e,t,n){if(s.layers.test(e.layers)&&s.raycast(e,t),n===!0){const i=s.children;for(let r=0,a=i.length;r<a;r++)Xc(i[r],e,t,!0)}}class $c{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(Ft(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class gw{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}const Ff=new ne;class _w{constructor(e=new ne(1/0,1/0),t=new ne(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Ff.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Ff).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Bf=new E,Za=new E;class vw{constructor(e=new E,t=new E){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){Bf.subVectors(e,this.start),Za.subVectors(this.end,this.start);const n=Za.dot(Za);let r=Za.dot(Bf)/n;return t&&(r=Ft(r,0,1)),r}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const zf=new E;class yw extends vt{constructor(e,t){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new st,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let a=0,o=1,l=32;a<l;a++,o++){const c=a/l*Math.PI*2,h=o/l*Math.PI*2;i.push(Math.cos(c),Math.sin(c),1,Math.cos(h),Math.sin(h),1)}n.setAttribute("position",new We(i,3));const r=new cn({fog:!1,toneMapped:!1});this.cone=new Vn(n,r),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),zf.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(zf),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const bi=new E,ja=new nt,Zl=new nt;class xw extends Vn{constructor(e){const t=pg(e),n=new st,i=[],r=[],a=new be(0,0,1),o=new be(0,1,0);for(let c=0;c<t.length;c++){const h=t[c];h.parent&&h.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(a.r,a.g,a.b),r.push(o.r,o.g,o.b))}n.setAttribute("position",new We(i,3)),n.setAttribute("color",new We(r,3));const l=new cn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,l),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");Zl.copy(this.root.matrixWorld).invert();for(let r=0,a=0;r<t.length;r++){const o=t[r];o.parent&&o.parent.isBone&&(ja.multiplyMatrices(Zl,o.matrixWorld),bi.setFromMatrixPosition(ja),i.setXYZ(a,bi.x,bi.y,bi.z),ja.multiplyMatrices(Zl,o.parent.matrixWorld),bi.setFromMatrixPosition(ja),i.setXYZ(a+1,bi.x,bi.y,bi.z),a+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function pg(s){const e=[];s.isBone===!0&&e.push(s);for(let t=0;t<s.children.length;t++)e.push.apply(e,pg(s.children[t]));return e}class Mw extends Rt{constructor(e,t,n){const i=new Ii(t,4,2),r=new Qt({wireframe:!0,fog:!1,toneMapped:!1});super(i,r),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const bw=new E,Vf=new be,Hf=new be;class Sw extends vt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new oa(t);i.rotateY(Math.PI*.5),this.material=new Qt({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const r=i.getAttribute("position"),a=new Float32Array(r.count*3);i.setAttribute("color",new At(a,3)),this.add(new Rt(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");Vf.copy(this.light.color),Hf.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const r=n<i/2?Vf:Hf;t.setXYZ(n,r.r,r.g,r.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(bw.setFromMatrixPosition(this.light.matrixWorld).negate())}}class mg extends Vn{constructor(e=10,t=10,n=4473924,i=8947848){n=new be(n),i=new be(i);const r=t/2,a=e/t,o=e/2,l=[],c=[];for(let f=0,d=0,p=-o;f<=t;f++,p+=a){l.push(-o,0,p,o,0,p),l.push(p,0,-o,p,0,o);const m=f===r?n:i;m.toArray(c,d),d+=3,m.toArray(c,d),d+=3,m.toArray(c,d),d+=3,m.toArray(c,d),d+=3}const h=new st;h.setAttribute("position",new We(l,3)),h.setAttribute("color",new We(c,3));const u=new cn({vertexColors:!0,toneMapped:!1});super(h,u),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class ww extends Vn{constructor(e=10,t=16,n=8,i=64,r=4473924,a=8947848){r=new be(r),a=new be(a);const o=[],l=[];if(t>1)for(let u=0;u<t;u++){const f=u/t*(Math.PI*2),d=Math.sin(f)*e,p=Math.cos(f)*e;o.push(0,0,0),o.push(d,0,p);const m=u&1?r:a;l.push(m.r,m.g,m.b),l.push(m.r,m.g,m.b)}for(let u=0;u<n;u++){const f=u&1?r:a,d=e-e/n*u;for(let p=0;p<i;p++){let m=p/i*(Math.PI*2),_=Math.sin(m)*d,g=Math.cos(m)*d;o.push(_,0,g),l.push(f.r,f.g,f.b),m=(p+1)/i*(Math.PI*2),_=Math.sin(m)*d,g=Math.cos(m)*d,o.push(_,0,g),l.push(f.r,f.g,f.b)}}const c=new st;c.setAttribute("position",new We(o,3)),c.setAttribute("color",new We(l,3));const h=new cn({vertexColors:!0,toneMapped:!1});super(c,h),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const Gf=new E,Ja=new E,Wf=new E;class Ew extends vt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new st;i.setAttribute("position",new We([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const r=new cn({fog:!1,toneMapped:!1});this.lightPlane=new ki(i,r),this.add(this.lightPlane),i=new st,i.setAttribute("position",new We([0,0,0,0,0,1],3)),this.targetLine=new ki(i,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),Gf.setFromMatrixPosition(this.light.matrixWorld),Ja.setFromMatrixPosition(this.light.target.matrixWorld),Wf.subVectors(Ja,Gf),this.lightPlane.lookAt(Ja),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Ja),this.targetLine.scale.z=Wf.length()}}const Ka=new E,kt=new Fo;class Tw extends Vn{constructor(e){const t=new st,n=new cn({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],r=[],a={};o("n1","n2"),o("n2","n4"),o("n4","n3"),o("n3","n1"),o("f1","f2"),o("f2","f4"),o("f4","f3"),o("f3","f1"),o("n1","f1"),o("n2","f2"),o("n3","f3"),o("n4","f4"),o("p","n1"),o("p","n2"),o("p","n3"),o("p","n4"),o("u1","u2"),o("u2","u3"),o("u3","u1"),o("c","t"),o("p","c"),o("cn1","cn2"),o("cn3","cn4"),o("cf1","cf2"),o("cf3","cf4");function o(p,m){l(p),l(m)}function l(p){i.push(0,0,0),r.push(0,0,0),a[p]===void 0&&(a[p]=[]),a[p].push(i.length/3-1)}t.setAttribute("position",new We(i,3)),t.setAttribute("color",new We(r,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update();const c=new be(16755200),h=new be(16711680),u=new be(43775),f=new be(16777215),d=new be(3355443);this.setColors(c,h,u,f,d)}setColors(e,t,n,i,r){const o=this.geometry.getAttribute("color");o.setXYZ(0,e.r,e.g,e.b),o.setXYZ(1,e.r,e.g,e.b),o.setXYZ(2,e.r,e.g,e.b),o.setXYZ(3,e.r,e.g,e.b),o.setXYZ(4,e.r,e.g,e.b),o.setXYZ(5,e.r,e.g,e.b),o.setXYZ(6,e.r,e.g,e.b),o.setXYZ(7,e.r,e.g,e.b),o.setXYZ(8,e.r,e.g,e.b),o.setXYZ(9,e.r,e.g,e.b),o.setXYZ(10,e.r,e.g,e.b),o.setXYZ(11,e.r,e.g,e.b),o.setXYZ(12,e.r,e.g,e.b),o.setXYZ(13,e.r,e.g,e.b),o.setXYZ(14,e.r,e.g,e.b),o.setXYZ(15,e.r,e.g,e.b),o.setXYZ(16,e.r,e.g,e.b),o.setXYZ(17,e.r,e.g,e.b),o.setXYZ(18,e.r,e.g,e.b),o.setXYZ(19,e.r,e.g,e.b),o.setXYZ(20,e.r,e.g,e.b),o.setXYZ(21,e.r,e.g,e.b),o.setXYZ(22,e.r,e.g,e.b),o.setXYZ(23,e.r,e.g,e.b),o.setXYZ(24,t.r,t.g,t.b),o.setXYZ(25,t.r,t.g,t.b),o.setXYZ(26,t.r,t.g,t.b),o.setXYZ(27,t.r,t.g,t.b),o.setXYZ(28,t.r,t.g,t.b),o.setXYZ(29,t.r,t.g,t.b),o.setXYZ(30,t.r,t.g,t.b),o.setXYZ(31,t.r,t.g,t.b),o.setXYZ(32,n.r,n.g,n.b),o.setXYZ(33,n.r,n.g,n.b),o.setXYZ(34,n.r,n.g,n.b),o.setXYZ(35,n.r,n.g,n.b),o.setXYZ(36,n.r,n.g,n.b),o.setXYZ(37,n.r,n.g,n.b),o.setXYZ(38,i.r,i.g,i.b),o.setXYZ(39,i.r,i.g,i.b),o.setXYZ(40,r.r,r.g,r.b),o.setXYZ(41,r.r,r.g,r.b),o.setXYZ(42,r.r,r.g,r.b),o.setXYZ(43,r.r,r.g,r.b),o.setXYZ(44,r.r,r.g,r.b),o.setXYZ(45,r.r,r.g,r.b),o.setXYZ(46,r.r,r.g,r.b),o.setXYZ(47,r.r,r.g,r.b),o.setXYZ(48,r.r,r.g,r.b),o.setXYZ(49,r.r,r.g,r.b),o.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;kt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),zt("c",t,e,kt,0,0,-1),zt("t",t,e,kt,0,0,1),zt("n1",t,e,kt,-n,-i,-1),zt("n2",t,e,kt,n,-i,-1),zt("n3",t,e,kt,-n,i,-1),zt("n4",t,e,kt,n,i,-1),zt("f1",t,e,kt,-n,-i,1),zt("f2",t,e,kt,n,-i,1),zt("f3",t,e,kt,-n,i,1),zt("f4",t,e,kt,n,i,1),zt("u1",t,e,kt,n*.7,i*1.1,-1),zt("u2",t,e,kt,-n*.7,i*1.1,-1),zt("u3",t,e,kt,0,i*2,-1),zt("cf1",t,e,kt,-n,0,1),zt("cf2",t,e,kt,n,0,1),zt("cf3",t,e,kt,0,-i,1),zt("cf4",t,e,kt,0,i,1),zt("cn1",t,e,kt,-n,0,-1),zt("cn2",t,e,kt,n,0,-1),zt("cn3",t,e,kt,0,-i,-1),zt("cn4",t,e,kt,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function zt(s,e,t,n,i,r,a){Ka.set(i,r,a).unproject(n);const o=e[s];if(o!==void 0){const l=t.getAttribute("position");for(let c=0,h=o.length;c<h;c++)l.setXYZ(o[c],Ka.x,Ka.y,Ka.z)}}const Qa=new ii;class Aw extends Vn{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),r=new st;r.setIndex(new At(n,1)),r.setAttribute("position",new At(i,3)),super(r,new cn({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&Qa.setFromObject(this.object),Qa.isEmpty())return;const t=Qa.min,n=Qa.max,i=this.geometry.attributes.position,r=i.array;r[0]=n.x,r[1]=n.y,r[2]=n.z,r[3]=t.x,r[4]=n.y,r[5]=n.z,r[6]=t.x,r[7]=t.y,r[8]=n.z,r[9]=n.x,r[10]=t.y,r[11]=n.z,r[12]=n.x,r[13]=n.y,r[14]=t.z,r[15]=t.x,r[16]=n.y,r[17]=t.z,r[18]=t.x,r[19]=t.y,r[20]=t.z,r[21]=n.x,r[22]=t.y,r[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Cw extends Vn{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],r=new st;r.setIndex(new At(n,1)),r.setAttribute("position",new We(i,3)),super(r,new cn({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class Rw extends ki{constructor(e,t=1,n=16776960){const i=n,r=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],a=new st;a.setAttribute("position",new We(r,3)),a.computeBoundingSphere(),super(a,new cn({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const o=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],l=new st;l.setAttribute("position",new We(o,3)),l.computeBoundingSphere(),this.add(new Rt(l,new Qt({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const Xf=new E;let eo,jl;class Pw extends vt{constructor(e=new E(0,0,1),t=new E(0,0,0),n=1,i=16776960,r=n*.2,a=r*.2){super(),this.type="ArrowHelper",eo===void 0&&(eo=new st,eo.setAttribute("position",new We([0,0,0,0,1,0],3)),jl=new lr(0,.5,1,5,1),jl.translate(0,-.5,0)),this.position.copy(t),this.line=new ki(eo,new cn({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Rt(jl,new Qt({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,r,a)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{Xf.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(Xf,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class Lw extends Vn{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new st;i.setAttribute("position",new We(t,3)),i.setAttribute("color",new We(n,3));const r=new cn({vertexColors:!0,toneMapped:!1});super(i,r),this.type="AxesHelper"}setColors(e,t,n){const i=new be,r=this.geometry.attributes.color.array;return i.set(e),i.toArray(r,0),i.toArray(r,3),i.set(t),i.toArray(r,6),i.toArray(r,9),i.set(n),i.toArray(r,12),i.toArray(r,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Iw{constructor(){this.type="ShapePath",this.color=new be,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Yr,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,r,a){return this.currentPath.bezierCurveTo(e,t,n,i,r,a),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(g){const y=[];for(let v=0,x=g.length;v<x;v++){const M=g[v],w=new Li;w.curves=M.curves,y.push(w)}return y}function n(g,y){const v=y.length;let x=!1;for(let M=v-1,w=0;w<v;M=w++){let T=y[M],I=y[w],S=I.x-T.x,C=I.y-T.y;if(Math.abs(C)>Number.EPSILON){if(C<0&&(T=y[w],S=-S,I=y[M],C=-C),g.y<T.y||g.y>I.y)continue;if(g.y===T.y){if(g.x===T.x)return!0}else{const V=C*(g.x-T.x)-S*(g.y-T.y);if(V===0)return!0;if(V<0)continue;x=!x}}else{if(g.y!==T.y)continue;if(I.x<=g.x&&g.x<=T.x||T.x<=g.x&&g.x<=I.x)return!0}}return x}const i=ei.isClockWise,r=this.subPaths;if(r.length===0)return[];let a,o,l;const c=[];if(r.length===1)return o=r[0],l=new Li,l.curves=o.curves,c.push(l),c;let h=!i(r[0].getPoints());h=e?!h:h;const u=[],f=[];let d=[],p=0,m;f[p]=void 0,d[p]=[];for(let g=0,y=r.length;g<y;g++)o=r[g],m=o.getPoints(),a=i(m),a=e?!a:a,a?(!h&&f[p]&&p++,f[p]={s:new Li,p:m},f[p].s.curves=o.curves,h&&p++,d[p]=[]):d[p].push({h:o,p:m[0]});if(!f[0])return t(r);if(f.length>1){let g=!1,y=0;for(let v=0,x=f.length;v<x;v++)u[v]=[];for(let v=0,x=f.length;v<x;v++){const M=d[v];for(let w=0;w<M.length;w++){const T=M[w];let I=!0;for(let S=0;S<f.length;S++)n(T.p,f[S].p)&&(v!==S&&y++,I?(I=!1,u[S].push(T)):g=!0);I&&u[v].push(T)}}y>0&&g===!1&&(d=u)}let _;for(let g=0,y=f.length;g<y;g++){l=f[g].s,c.push(l),_=d[g];for(let v=0,x=_.length;v<x;v++)l.holes.push(_[v].h)}return c}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Po}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Po);const Dw=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:Xp,AddEquation:Ei,AddOperation:Vp,AdditiveAnimationBlendMode:lh,AdditiveBlending:yo,AlphaFormat:Zp,AlwaysCompare:mm,AlwaysDepth:Up,AlwaysStencilFunc:om,AmbientLight:Fh,AmbientLightProbe:YS,AnimationAction:dg,AnimationClip:Qr,AnimationLoader:US,AnimationMixer:uw,AnimationObjectGroup:cw,AnimationUtils:PS,ArcCurve:km,ArrayCamera:Cm,ArrowHelper:Pw,Audio:ug,AudioAnalyser:QS,AudioContext:Bh,AudioListener:jS,AudioLoader:XS,AxesHelper:Lw,BackSide:pn,BasicDepthPacking:rm,BasicShadowMap:q_,Bone:vh,BooleanKeyframeTrack:ys,Box2:_w,Box3:ii,Box3Helper:Cw,BoxGeometry:Wi,BoxHelper:Aw,BufferAttribute:At,BufferGeometry:st,BufferGeometryLoader:hg,ByteType:Yp,Cache:vs,Camera:Fo,CameraHelper:Tw,CanvasTexture:Om,CapsuleGeometry:jo,CatmullRomCurve3:Fm,CineonToneMapping:Wp,CircleGeometry:Jo,ClampToEdgeWrapping:an,Clock:zh,Color:be,ColorKeyframeTrack:Uh,ColorManagement:Rn,CompressedArrayTexture:eS,CompressedTexture:xh,CompressedTextureLoader:NS,ConeGeometry:Ko,CubeCamera:xm,CubeReflectionMapping:Di,CubeRefractionMapping:Ui,CubeTexture:sa,CubeTextureLoader:OS,CubeUVReflectionMapping:sr,CubicBezierCurve:bh,CubicBezierCurve3:Bm,CubicInterpolant:eg,CullFaceBack:lc,CullFaceFront:yp,CullFaceFrontBack:Y_,CullFaceNone:vp,Curve:Hn,CurvePath:Vm,CustomBlending:Mp,CustomToneMapping:$p,CylinderGeometry:lr,Cylindrical:gw,Data3DTexture:ph,DataArrayTexture:Uo,DataTexture:Ks,DataTextureLoader:kS,DataUtils:oy,DecrementStencilOp:av,DecrementWrapStencilOp:lv,DefaultLoadingManager:ig,DepthFormat:Ci,DepthStencilFormat:ms,DepthTexture:Rm,DirectionalLight:kh,DirectionalLightHelper:Ew,DiscreteInterpolant:tg,DisplayP3ColorSpace:uh,DodecahedronGeometry:Qo,DoubleSide:vn,DstAlphaFactor:Cp,DstColorFactor:Pp,DynamicCopyUsage:Sv,DynamicDrawUsage:_v,DynamicReadUsage:xv,EdgesGeometry:Ah,EllipseCurve:qo,EqualCompare:hm,EqualDepth:Op,EqualStencilFunc:fv,EquirectangularReflectionMapping:Or,EquirectangularRefractionMapping:kr,Euler:ia,EventDispatcher:ni,ExtrudeGeometry:aa,FileLoader:gi,Float16BufferAttribute:dy,Float32BufferAttribute:We,Float64BufferAttribute:py,FloatType:jn,Fog:Wo,FogExp2:Go,FramebufferTexture:Qb,FrontSide:mi,Frustum:Bo,GLBufferAttribute:mw,GLSL1:Ev,GLSL3:Oc,GreaterCompare:fm,GreaterDepth:Fp,GreaterEqualCompare:pm,GreaterEqualDepth:kp,GreaterEqualStencilFunc:gv,GreaterStencilFunc:pv,GridHelper:mg,Group:$t,HalfFloatType:Sn,HemisphereLight:sg,HemisphereLightHelper:Sw,HemisphereLightProbe:$S,IcosahedronGeometry:tl,ImageBitmapLoader:WS,ImageLoader:ea,ImageUtils:dh,IncrementStencilOp:rv,IncrementWrapStencilOp:ov,InstancedBufferAttribute:nr,InstancedBufferGeometry:cg,InstancedInterleavedBuffer:pw,InstancedMesh:Eo,Int16BufferAttribute:uy,Int32BufferAttribute:fy,Int8BufferAttribute:ly,IntType:nh,InterleavedBuffer:$o,InterleavedBufferAttribute:gs,Interpolant:la,InterpolateDiscrete:zr,InterpolateLinear:Vr,InterpolateSmooth:lo,InvertStencilOp:cv,KeepStencilOp:co,KeyframeTrack:Gn,LOD:Im,LatheGeometry:ra,Layers:No,LessCompare:cm,LessDepth:Np,LessEqualCompare:um,LessEqualDepth:xo,LessEqualStencilFunc:dv,LessStencilFunc:uv,Light:$i,LightProbe:ll,Line:ki,Line3:vw,LineBasicMaterial:cn,LineCurve:Zo,LineCurve3:zm,LineDashedMaterial:Km,LineLoop:Um,LineSegments:Vn,LinearEncoding:ch,LinearFilter:Ht,LinearInterpolant:Dh,LinearMipMapLinearFilter:Q_,LinearMipMapNearestFilter:K_,LinearMipmapLinearFilter:Ni,LinearMipmapNearestFilter:th,LinearSRGBColorSpace:Fn,LinearToneMapping:Hp,Loader:yn,LoaderUtils:Wc,LoadingManager:Nh,LoopOnce:nm,LoopPingPong:sm,LoopRepeat:im,LuminanceAlphaFormat:Jp,LuminanceFormat:jp,MOUSE:rs,Material:ln,MaterialLoader:cl,MathUtils:Bv,Matrix3:ct,Matrix4:nt,MaxEquation:fc,Mesh:Rt,MeshBasicMaterial:Qt,MeshDepthMaterial:Vo,MeshDistanceMaterial:_h,MeshLambertMaterial:Ph,MeshMatcapMaterial:Jm,MeshNormalMaterial:jm,MeshPhongMaterial:Rh,MeshPhysicalMaterial:qm,MeshStandardMaterial:Ch,MeshToonMaterial:Zm,MinEquation:uc,MirroredRepeatWrapping:Br,MixOperation:zp,MultiplyBlending:hc,MultiplyOperation:na,NearestFilter:Vt,NearestMipMapLinearFilter:J_,NearestMipMapNearestFilter:j_,NearestMipmapLinearFilter:Tr,NearestMipmapNearestFilter:Mo,NeverCompare:lm,NeverDepth:Dp,NeverStencilFunc:hv,NoBlending:Ln,NoColorSpace:Pi,NoToneMapping:Qn,NormalAnimationBlendMode:Do,NormalBlending:ds,NotEqualCompare:dm,NotEqualDepth:Bp,NotEqualStencilFunc:mv,NumberKeyframeTrack:Jr,Object3D:vt,ObjectLoader:HS,ObjectSpaceNormalMap:am,OctahedronGeometry:oa,OneFactor:Ep,OneMinusDstAlphaFactor:Rp,OneMinusDstColorFactor:Lp,OneMinusSrcAlphaFactor:eh,OneMinusSrcColorFactor:Ap,OrthographicCamera:Oi,PCFShadowMap:Kc,PCFSoftShadowMap:xp,PMREMGenerator:Fc,Path:Yr,PerspectiveCamera:en,Plane:Si,PlaneGeometry:ar,PlaneHelper:Rw,PointLight:ag,PointLightHelper:Mw,Points:Nm,PointsMaterial:yh,PolarGridHelper:ww,PolyhedronGeometry:Xi,PositionalAudio:KS,PropertyBinding:yt,PropertyMixer:fg,QuadraticBezierCurve:Sh,QuadraticBezierCurve3:wh,Quaternion:on,QuaternionKeyframeTrack:cr,QuaternionLinearInterpolant:ng,RED_GREEN_RGTC2_Format:Uc,RED_RGTC1_Format:tm,REVISION:Po,RGBADepthPacking:hh,RGBAFormat:wn,RGBAIntegerFormat:oh,RGBA_ASTC_10x10_Format:Pc,RGBA_ASTC_10x5_Format:Ac,RGBA_ASTC_10x6_Format:Cc,RGBA_ASTC_10x8_Format:Rc,RGBA_ASTC_12x10_Format:Lc,RGBA_ASTC_12x12_Format:Ic,RGBA_ASTC_4x4_Format:yc,RGBA_ASTC_5x4_Format:xc,RGBA_ASTC_5x5_Format:Mc,RGBA_ASTC_6x5_Format:bc,RGBA_ASTC_6x6_Format:Sc,RGBA_ASTC_8x5_Format:wc,RGBA_ASTC_8x6_Format:Ec,RGBA_ASTC_8x8_Format:Tc,RGBA_BPTC_Format:oo,RGBA_ETC2_EAC_Format:vc,RGBA_PVRTC_2BPPV1_Format:gc,RGBA_PVRTC_4BPPV1_Format:mc,RGBA_S3TC_DXT1_Format:so,RGBA_S3TC_DXT3_Format:ro,RGBA_S3TC_DXT5_Format:ao,RGB_ETC1_Format:em,RGB_ETC2_Format:_c,RGB_PVRTC_2BPPV1_Format:pc,RGB_PVRTC_4BPPV1_Format:dc,RGB_S3TC_DXT1_Format:io,RGFormat:Qp,RGIntegerFormat:ah,RawShaderMaterial:Ym,Ray:rr,Raycaster:Wh,RectAreaLight:og,RedFormat:Kp,RedIntegerFormat:rh,ReinhardToneMapping:Gp,RepeatWrapping:Fr,ReplaceStencilOp:sv,ReverseSubtractEquation:Sp,RingGeometry:nl,SIGNED_RED_GREEN_RGTC2_Format:Nc,SIGNED_RED_RGTC1_Format:Dc,SRGBColorSpace:at,Scene:Xo,ShaderChunk:ot,ShaderLib:On,ShaderMaterial:tn,ShadowMaterial:$m,Shape:Li,ShapeGeometry:il,ShapePath:Iw,ShapeUtils:ei,ShortType:qp,Skeleton:Yo,SkeletonHelper:xw,SkinnedMesh:Dm,Source:us,Sphere:zn,SphereGeometry:Ii,Spherical:$c,SphericalHarmonics3:lg,SplineCurve:Eh,SpotLight:rg,SpotLightHelper:yw,Sprite:wo,SpriteMaterial:$r,SrcAlphaFactor:Qc,SrcAlphaSaturateFactor:Ip,SrcColorFactor:Tp,StaticCopyUsage:bv,StaticDrawUsage:Gr,StaticReadUsage:yv,StereoCamera:qS,StreamCopyUsage:wv,StreamDrawUsage:vv,StreamReadUsage:Mv,StringKeyframeTrack:xs,SubtractEquation:bp,SubtractiveBlending:cc,TOUCH:as,TangentSpaceNormalMap:Gi,TetrahedronGeometry:sl,Texture:Gt,TextureLoader:FS,TorusGeometry:rl,TorusKnotGeometry:al,Triangle:_n,TriangleFanDrawMode:nv,TriangleStripDrawMode:tv,TrianglesDrawMode:ev,TubeGeometry:ol,TwoPassDoubleSide:Z_,UVMapping:Lo,Uint16BufferAttribute:mh,Uint32BufferAttribute:Oo,Uint8BufferAttribute:cy,Uint8ClampedBufferAttribute:hy,Uniform:Gh,UniformsGroup:dw,UniformsLib:we,UniformsUtils:ko,UnsignedByteType:pi,UnsignedInt248Type:Ai,UnsignedIntType:di,UnsignedShort4444Type:ih,UnsignedShort5551Type:sh,UnsignedShortType:Io,VSMShadowMap:$n,Vector2:ne,Vector3:E,Vector4:Tt,VectorKeyframeTrack:Kr,VideoTexture:Kb,WebGL1Renderer:Pm,WebGL3DRenderTarget:jv,WebGLArrayRenderTarget:Zv,WebGLCoordinateSystem:Jn,WebGLCubeRenderTarget:Mm,WebGLMultipleRenderTargets:Jv,WebGLRenderTarget:Yt,WebGLRenderer:Ho,WebGLUtils:Am,WebGPUCoordinateSystem:Wr,WireframeGeometry:Xm,WrapAroundEnding:Hr,ZeroCurvatureEnding:cs,ZeroFactor:wp,ZeroSlopeEnding:hs,ZeroStencilOp:iv,_SRGBAFormat:bo,sRGBEncoding:Ri},Symbol.toStringTag,{value:"Module"})),$f={type:"change"},Jl={type:"start"},Yf={type:"end"};class gg extends ni{constructor(e,t){super(),this.object=e,this.domElement=t,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new E,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:rs.ROTATE,MIDDLE:rs.DOLLY,RIGHT:rs.PAN},this.touches={ONE:as.ROTATE,TWO:as.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return o.phi},this.getAzimuthalAngle=function(){return o.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(D){D.addEventListener("keydown",xe),this._domElementKeyEvents=D},this.stopListenToKeyEvents=function(){this._domElementKeyEvents.removeEventListener("keydown",xe),this._domElementKeyEvents=null},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent($f),n.update(),r=i.NONE},this.update=function(){const D=new E,ue=new on().setFromUnitVectors(e.up,new E(0,1,0)),de=ue.clone().invert(),J=new E,ke=new on,qe=new E,Ve=2*Math.PI;return function(){const He=n.object.position;D.copy(He).sub(n.target),D.applyQuaternion(ue),o.setFromVector3(D),n.autoRotate&&r===i.NONE&&S(T()),n.enableDamping?(o.theta+=l.theta*n.dampingFactor,o.phi+=l.phi*n.dampingFactor):(o.theta+=l.theta,o.phi+=l.phi);let et=n.minAzimuthAngle,pt=n.maxAzimuthAngle;return isFinite(et)&&isFinite(pt)&&(et<-Math.PI?et+=Ve:et>Math.PI&&(et-=Ve),pt<-Math.PI?pt+=Ve:pt>Math.PI&&(pt-=Ve),et<=pt?o.theta=Math.max(et,Math.min(pt,o.theta)):o.theta=o.theta>(et+pt)/2?Math.max(et,o.theta):Math.min(pt,o.theta)),o.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,o.phi)),o.makeSafe(),o.radius*=c,o.radius=Math.max(n.minDistance,Math.min(n.maxDistance,o.radius)),n.enableDamping===!0?n.target.addScaledVector(h,n.dampingFactor):n.target.add(h),D.setFromSpherical(o),D.applyQuaternion(de),He.copy(n.target).add(D),n.object.lookAt(n.target),n.enableDamping===!0?(l.theta*=1-n.dampingFactor,l.phi*=1-n.dampingFactor,h.multiplyScalar(1-n.dampingFactor)):(l.set(0,0,0),h.set(0,0,0)),c=1,u||J.distanceToSquared(n.object.position)>a||8*(1-ke.dot(n.object.quaternion))>a||qe.distanceToSquared(n.target)>0?(n.dispatchEvent($f),J.copy(n.object.position),ke.copy(n.object.quaternion),qe.copy(n.target),u=!1,!0):!1}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",L),n.domElement.removeEventListener("pointerdown",le),n.domElement.removeEventListener("pointercancel",se),n.domElement.removeEventListener("wheel",ye),n.domElement.removeEventListener("pointermove",fe),n.domElement.removeEventListener("pointerup",se),n._domElementKeyEvents!==null&&(n._domElementKeyEvents.removeEventListener("keydown",xe),n._domElementKeyEvents=null)};const n=this,i={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let r=i.NONE;const a=1e-6,o=new $c,l=new $c;let c=1;const h=new E;let u=!1;const f=new ne,d=new ne,p=new ne,m=new ne,_=new ne,g=new ne,y=new ne,v=new ne,x=new ne,M=[],w={};function T(){return 2*Math.PI/60/60*n.autoRotateSpeed}function I(){return Math.pow(.95,n.zoomSpeed)}function S(D){l.theta-=D}function C(D){l.phi-=D}const V=function(){const D=new E;return function(de,J){D.setFromMatrixColumn(J,0),D.multiplyScalar(-de),h.add(D)}}(),X=function(){const D=new E;return function(de,J){n.screenSpacePanning===!0?D.setFromMatrixColumn(J,1):(D.setFromMatrixColumn(J,0),D.crossVectors(n.object.up,D)),D.multiplyScalar(de),h.add(D)}}(),F=function(){const D=new E;return function(de,J){const ke=n.domElement;if(n.object.isPerspectiveCamera){const qe=n.object.position;D.copy(qe).sub(n.target);let Ve=D.length();Ve*=Math.tan(n.object.fov/2*Math.PI/180),V(2*de*Ve/ke.clientHeight,n.object.matrix),X(2*J*Ve/ke.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(V(de*(n.object.right-n.object.left)/n.object.zoom/ke.clientWidth,n.object.matrix),X(J*(n.object.top-n.object.bottom)/n.object.zoom/ke.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function B(D){n.object.isPerspectiveCamera?c/=D:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*D)),n.object.updateProjectionMatrix(),u=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function N(D){n.object.isPerspectiveCamera?c*=D:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/D)),n.object.updateProjectionMatrix(),u=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function Y(D){f.set(D.clientX,D.clientY)}function O(D){y.set(D.clientX,D.clientY)}function Z(D){m.set(D.clientX,D.clientY)}function q(D){d.set(D.clientX,D.clientY),p.subVectors(d,f).multiplyScalar(n.rotateSpeed);const ue=n.domElement;S(2*Math.PI*p.x/ue.clientHeight),C(2*Math.PI*p.y/ue.clientHeight),f.copy(d),n.update()}function Q(D){v.set(D.clientX,D.clientY),x.subVectors(v,y),x.y>0?B(I()):x.y<0&&N(I()),y.copy(v),n.update()}function H(D){_.set(D.clientX,D.clientY),g.subVectors(_,m).multiplyScalar(n.panSpeed),F(g.x,g.y),m.copy(_),n.update()}function ee(D){D.deltaY<0?N(I()):D.deltaY>0&&B(I()),n.update()}function _e(D){let ue=!1;switch(D.code){case n.keys.UP:D.ctrlKey||D.metaKey||D.shiftKey?C(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):F(0,n.keyPanSpeed),ue=!0;break;case n.keys.BOTTOM:D.ctrlKey||D.metaKey||D.shiftKey?C(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):F(0,-n.keyPanSpeed),ue=!0;break;case n.keys.LEFT:D.ctrlKey||D.metaKey||D.shiftKey?S(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):F(n.keyPanSpeed,0),ue=!0;break;case n.keys.RIGHT:D.ctrlKey||D.metaKey||D.shiftKey?S(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):F(-n.keyPanSpeed,0),ue=!0;break}ue&&(D.preventDefault(),n.update())}function ge(){if(M.length===1)f.set(M[0].pageX,M[0].pageY);else{const D=.5*(M[0].pageX+M[1].pageX),ue=.5*(M[0].pageY+M[1].pageY);f.set(D,ue)}}function Se(){if(M.length===1)m.set(M[0].pageX,M[0].pageY);else{const D=.5*(M[0].pageX+M[1].pageX),ue=.5*(M[0].pageY+M[1].pageY);m.set(D,ue)}}function Fe(){const D=M[0].pageX-M[1].pageX,ue=M[0].pageY-M[1].pageY,de=Math.sqrt(D*D+ue*ue);y.set(0,de)}function $e(){n.enableZoom&&Fe(),n.enablePan&&Se()}function Xe(){n.enableZoom&&Fe(),n.enableRotate&&ge()}function ut(D){if(M.length==1)d.set(D.pageX,D.pageY);else{const de=pe(D),J=.5*(D.pageX+de.x),ke=.5*(D.pageY+de.y);d.set(J,ke)}p.subVectors(d,f).multiplyScalar(n.rotateSpeed);const ue=n.domElement;S(2*Math.PI*p.x/ue.clientHeight),C(2*Math.PI*p.y/ue.clientHeight),f.copy(d)}function gt(D){if(M.length===1)_.set(D.pageX,D.pageY);else{const ue=pe(D),de=.5*(D.pageX+ue.x),J=.5*(D.pageY+ue.y);_.set(de,J)}g.subVectors(_,m).multiplyScalar(n.panSpeed),F(g.x,g.y),m.copy(_)}function je(D){const ue=pe(D),de=D.pageX-ue.x,J=D.pageY-ue.y,ke=Math.sqrt(de*de+J*J);v.set(0,ke),x.set(0,Math.pow(v.y/y.y,n.zoomSpeed)),B(x.y),y.copy(v)}function U(D){n.enableZoom&&je(D),n.enablePan&&gt(D)}function ve(D){n.enableZoom&&je(D),n.enableRotate&&ut(D)}function le(D){n.enabled!==!1&&(M.length===0&&(n.domElement.setPointerCapture(D.pointerId),n.domElement.addEventListener("pointermove",fe),n.domElement.addEventListener("pointerup",se)),A(D),D.pointerType==="touch"?Be(D):Ye(D))}function fe(D){n.enabled!==!1&&(D.pointerType==="touch"?dt(D):De(D))}function se(D){ie(D),M.length===0&&(n.domElement.releasePointerCapture(D.pointerId),n.domElement.removeEventListener("pointermove",fe),n.domElement.removeEventListener("pointerup",se)),n.dispatchEvent(Yf),r=i.NONE}function Ye(D){let ue;switch(D.button){case 0:ue=n.mouseButtons.LEFT;break;case 1:ue=n.mouseButtons.MIDDLE;break;case 2:ue=n.mouseButtons.RIGHT;break;default:ue=-1}switch(ue){case rs.DOLLY:if(n.enableZoom===!1)return;O(D),r=i.DOLLY;break;case rs.ROTATE:if(D.ctrlKey||D.metaKey||D.shiftKey){if(n.enablePan===!1)return;Z(D),r=i.PAN}else{if(n.enableRotate===!1)return;Y(D),r=i.ROTATE}break;case rs.PAN:if(D.ctrlKey||D.metaKey||D.shiftKey){if(n.enableRotate===!1)return;Y(D),r=i.ROTATE}else{if(n.enablePan===!1)return;Z(D),r=i.PAN}break;default:r=i.NONE}r!==i.NONE&&n.dispatchEvent(Jl)}function De(D){switch(r){case i.ROTATE:if(n.enableRotate===!1)return;q(D);break;case i.DOLLY:if(n.enableZoom===!1)return;Q(D);break;case i.PAN:if(n.enablePan===!1)return;H(D);break}}function ye(D){n.enabled===!1||n.enableZoom===!1||r!==i.NONE||(D.preventDefault(),n.dispatchEvent(Jl),ee(D),n.dispatchEvent(Yf))}function xe(D){n.enabled===!1||n.enablePan===!1||_e(D)}function Be(D){switch(me(D),M.length){case 1:switch(n.touches.ONE){case as.ROTATE:if(n.enableRotate===!1)return;ge(),r=i.TOUCH_ROTATE;break;case as.PAN:if(n.enablePan===!1)return;Se(),r=i.TOUCH_PAN;break;default:r=i.NONE}break;case 2:switch(n.touches.TWO){case as.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;$e(),r=i.TOUCH_DOLLY_PAN;break;case as.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;Xe(),r=i.TOUCH_DOLLY_ROTATE;break;default:r=i.NONE}break;default:r=i.NONE}r!==i.NONE&&n.dispatchEvent(Jl)}function dt(D){switch(me(D),r){case i.TOUCH_ROTATE:if(n.enableRotate===!1)return;ut(D),n.update();break;case i.TOUCH_PAN:if(n.enablePan===!1)return;gt(D),n.update();break;case i.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;U(D),n.update();break;case i.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;ve(D),n.update();break;default:r=i.NONE}}function L(D){n.enabled!==!1&&D.preventDefault()}function A(D){M.push(D)}function ie(D){delete w[D.pointerId];for(let ue=0;ue<M.length;ue++)if(M[ue].pointerId==D.pointerId){M.splice(ue,1);return}}function me(D){let ue=w[D.pointerId];ue===void 0&&(ue=new ne,w[D.pointerId]=ue),ue.set(D.pageX,D.pageY)}function pe(D){const ue=D.pointerId===M[0].pointerId?M[1]:M[0];return w[ue.pointerId]}n.domElement.addEventListener("contextmenu",L),n.domElement.addEventListener("pointerdown",le),n.domElement.addEventListener("pointercancel",se),n.domElement.addEventListener("wheel",ye,{passive:!1}),this.update()}}const _g={name:"CopyShader",uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform float opacity;

		uniform sampler2D tDiffuse;

		varying vec2 vUv;

		void main() {

			vec4 texel = texture2D( tDiffuse, vUv );
			gl_FragColor = opacity * texel;


		}`};class ca{constructor(){this.isPass=!0,this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}dispose(){}}const Uw=new Oi(-1,1,1,-1,0,1),Xh=new st;Xh.setAttribute("position",new We([-1,3,0,-1,-1,0,3,-1,0],3));Xh.setAttribute("uv",new We([0,2,0,0,2,0],2));class vg{constructor(e){this._mesh=new Rt(Xh,e)}dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,Uw)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}}class Nw extends ca{constructor(e,t){super(),this.textureID=t!==void 0?t:"tDiffuse",e instanceof tn?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=ko.clone(e.uniforms),this.material=new tn({name:e.name!==void 0?e.name:"unspecified",defines:Object.assign({},e.defines),uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this.fsQuad=new vg(this.material)}render(e,t,n){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=n.texture),this.fsQuad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this.fsQuad.render(e))}dispose(){this.material.dispose(),this.fsQuad.dispose()}}class qf extends ca{constructor(e,t){super(),this.scene=e,this.camera=t,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(e,t,n){const i=e.getContext(),r=e.state;r.buffers.color.setMask(!1),r.buffers.depth.setMask(!1),r.buffers.color.setLocked(!0),r.buffers.depth.setLocked(!0);let a,o;this.inverse?(a=0,o=1):(a=1,o=0),r.buffers.stencil.setTest(!0),r.buffers.stencil.setOp(i.REPLACE,i.REPLACE,i.REPLACE),r.buffers.stencil.setFunc(i.ALWAYS,a,4294967295),r.buffers.stencil.setClear(o),r.buffers.stencil.setLocked(!0),e.setRenderTarget(n),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera),r.buffers.color.setLocked(!1),r.buffers.depth.setLocked(!1),r.buffers.stencil.setLocked(!1),r.buffers.stencil.setFunc(i.EQUAL,1,4294967295),r.buffers.stencil.setOp(i.KEEP,i.KEEP,i.KEEP),r.buffers.stencil.setLocked(!0)}}class Ow extends ca{constructor(){super(),this.needsSwap=!1}render(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}}class kw{constructor(e,t){if(this.renderer=e,this._pixelRatio=e.getPixelRatio(),t===void 0){const n=e.getSize(new ne);this._width=n.width,this._height=n.height,t=new Yt(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:Sn}),t.texture.name="EffectComposer.rt1"}else this._width=t.width,this._height=t.height;this.renderTarget1=t,this.renderTarget2=t.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],this.copyPass=new Nw(_g),this.copyPass.material.blending=Ln,this.clock=new zh}swapBuffers(){const e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}addPass(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(e,t){this.passes.splice(t,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(e){const t=this.passes.indexOf(e);t!==-1&&this.passes.splice(t,1)}isLastEnabledPass(e){for(let t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0}render(e){e===void 0&&(e=this.clock.getDelta());const t=this.renderer.getRenderTarget();let n=!1;for(let i=0,r=this.passes.length;i<r;i++){const a=this.passes[i];if(a.enabled!==!1){if(a.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(i),a.render(this.renderer,this.writeBuffer,this.readBuffer,e,n),a.needsSwap){if(n){const o=this.renderer.getContext(),l=this.renderer.state.buffers.stencil;l.setFunc(o.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),l.setFunc(o.EQUAL,1,4294967295)}this.swapBuffers()}qf!==void 0&&(a instanceof qf?n=!0:a instanceof Ow&&(n=!1))}}this.renderer.setRenderTarget(t)}reset(e){if(e===void 0){const t=this.renderer.getSize(new ne);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,e=this.renderTarget1.clone(),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(e,t){this._width=e,this._height=t;const n=this._width*this._pixelRatio,i=this._height*this._pixelRatio;this.renderTarget1.setSize(n,i),this.renderTarget2.setSize(n,i);for(let r=0;r<this.passes.length;r++)this.passes[r].setSize(n,i)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.copyPass.dispose()}}class Fw extends ca{constructor(e,t,n,i,r){super(),this.scene=e,this.camera=t,this.overrideMaterial=n,this.clearColor=i,this.clearAlpha=r!==void 0?r:0,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new be}render(e,t,n){const i=e.autoClear;e.autoClear=!1;let r,a;this.overrideMaterial!==void 0&&(a=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor&&(e.getClearColor(this._oldClearColor),r=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),this.clearDepth&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:n),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor&&e.setClearColor(this._oldClearColor,r),this.overrideMaterial!==void 0&&(this.scene.overrideMaterial=a),e.autoClear=i}}class Ti extends ca{constructor(e,t,n,i){super(),this.renderScene=t,this.renderCamera=n,this.selectedObjects=i!==void 0?i:[],this.visibleEdgeColor=new be(1,1,1),this.hiddenEdgeColor=new be(.1,.04,.02),this.edgeGlow=0,this.usePatternTexture=!1,this.edgeThickness=1,this.edgeStrength=3,this.downSampleRatio=2,this.pulsePeriod=0,this._visibilityCache=new Map,this.resolution=e!==void 0?new ne(e.x,e.y):new ne(256,256);const r=Math.round(this.resolution.x/this.downSampleRatio),a=Math.round(this.resolution.y/this.downSampleRatio);this.renderTargetMaskBuffer=new Yt(this.resolution.x,this.resolution.y),this.renderTargetMaskBuffer.texture.name="OutlinePass.mask",this.renderTargetMaskBuffer.texture.generateMipmaps=!1,this.depthMaterial=new Vo,this.depthMaterial.side=vn,this.depthMaterial.depthPacking=hh,this.depthMaterial.blending=Ln,this.prepareMaskMaterial=this.getPrepareMaskMaterial(),this.prepareMaskMaterial.side=vn,this.prepareMaskMaterial.fragmentShader=h(this.prepareMaskMaterial.fragmentShader,this.renderCamera),this.renderTargetDepthBuffer=new Yt(this.resolution.x,this.resolution.y,{type:Sn}),this.renderTargetDepthBuffer.texture.name="OutlinePass.depth",this.renderTargetDepthBuffer.texture.generateMipmaps=!1,this.renderTargetMaskDownSampleBuffer=new Yt(r,a,{type:Sn}),this.renderTargetMaskDownSampleBuffer.texture.name="OutlinePass.depthDownSample",this.renderTargetMaskDownSampleBuffer.texture.generateMipmaps=!1,this.renderTargetBlurBuffer1=new Yt(r,a,{type:Sn}),this.renderTargetBlurBuffer1.texture.name="OutlinePass.blur1",this.renderTargetBlurBuffer1.texture.generateMipmaps=!1,this.renderTargetBlurBuffer2=new Yt(Math.round(r/2),Math.round(a/2),{type:Sn}),this.renderTargetBlurBuffer2.texture.name="OutlinePass.blur2",this.renderTargetBlurBuffer2.texture.generateMipmaps=!1,this.edgeDetectionMaterial=this.getEdgeDetectionMaterial(),this.renderTargetEdgeBuffer1=new Yt(r,a,{type:Sn}),this.renderTargetEdgeBuffer1.texture.name="OutlinePass.edge1",this.renderTargetEdgeBuffer1.texture.generateMipmaps=!1,this.renderTargetEdgeBuffer2=new Yt(Math.round(r/2),Math.round(a/2),{type:Sn}),this.renderTargetEdgeBuffer2.texture.name="OutlinePass.edge2",this.renderTargetEdgeBuffer2.texture.generateMipmaps=!1;const o=4,l=4;this.separableBlurMaterial1=this.getSeperableBlurMaterial(o),this.separableBlurMaterial1.uniforms.texSize.value.set(r,a),this.separableBlurMaterial1.uniforms.kernelRadius.value=1,this.separableBlurMaterial2=this.getSeperableBlurMaterial(l),this.separableBlurMaterial2.uniforms.texSize.value.set(Math.round(r/2),Math.round(a/2)),this.separableBlurMaterial2.uniforms.kernelRadius.value=l,this.overlayMaterial=this.getOverlayMaterial();const c=_g;this.copyUniforms=ko.clone(c.uniforms),this.materialCopy=new tn({uniforms:this.copyUniforms,vertexShader:c.vertexShader,fragmentShader:c.fragmentShader,blending:Ln,depthTest:!1,depthWrite:!1}),this.enabled=!0,this.needsSwap=!1,this._oldClearColor=new be,this.oldClearAlpha=1,this.fsQuad=new vg(null),this.tempPulseColor1=new be,this.tempPulseColor2=new be,this.textureMatrix=new nt;function h(u,f){const d=f.isPerspectiveCamera?"perspective":"orthographic";return u.replace(/DEPTH_TO_VIEW_Z/g,d+"DepthToViewZ")}}dispose(){this.renderTargetMaskBuffer.dispose(),this.renderTargetDepthBuffer.dispose(),this.renderTargetMaskDownSampleBuffer.dispose(),this.renderTargetBlurBuffer1.dispose(),this.renderTargetBlurBuffer2.dispose(),this.renderTargetEdgeBuffer1.dispose(),this.renderTargetEdgeBuffer2.dispose(),this.depthMaterial.dispose(),this.prepareMaskMaterial.dispose(),this.edgeDetectionMaterial.dispose(),this.separableBlurMaterial1.dispose(),this.separableBlurMaterial2.dispose(),this.overlayMaterial.dispose(),this.materialCopy.dispose(),this.fsQuad.dispose()}setSize(e,t){this.renderTargetMaskBuffer.setSize(e,t),this.renderTargetDepthBuffer.setSize(e,t);let n=Math.round(e/this.downSampleRatio),i=Math.round(t/this.downSampleRatio);this.renderTargetMaskDownSampleBuffer.setSize(n,i),this.renderTargetBlurBuffer1.setSize(n,i),this.renderTargetEdgeBuffer1.setSize(n,i),this.separableBlurMaterial1.uniforms.texSize.value.set(n,i),n=Math.round(n/2),i=Math.round(i/2),this.renderTargetBlurBuffer2.setSize(n,i),this.renderTargetEdgeBuffer2.setSize(n,i),this.separableBlurMaterial2.uniforms.texSize.value.set(n,i)}changeVisibilityOfSelectedObjects(e){const t=this._visibilityCache;function n(i){i.isMesh&&(e===!0?i.visible=t.get(i):(t.set(i,i.visible),i.visible=e))}for(let i=0;i<this.selectedObjects.length;i++)this.selectedObjects[i].traverse(n)}changeVisibilityOfNonSelectedObjects(e){const t=this._visibilityCache,n=[];function i(a){a.isMesh&&n.push(a)}for(let a=0;a<this.selectedObjects.length;a++)this.selectedObjects[a].traverse(i);function r(a){if(a.isMesh||a.isSprite){let o=!1;for(let l=0;l<n.length;l++)if(n[l].id===a.id){o=!0;break}if(o===!1){const l=a.visible;(e===!1||t.get(a)===!0)&&(a.visible=e),t.set(a,l)}}else(a.isPoints||a.isLine)&&(e===!0?a.visible=t.get(a):(t.set(a,a.visible),a.visible=e))}this.renderScene.traverse(r)}updateTextureMatrix(){this.textureMatrix.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),this.textureMatrix.multiply(this.renderCamera.projectionMatrix),this.textureMatrix.multiply(this.renderCamera.matrixWorldInverse)}render(e,t,n,i,r){if(this.selectedObjects.length>0){e.getClearColor(this._oldClearColor),this.oldClearAlpha=e.getClearAlpha();const a=e.autoClear;e.autoClear=!1,r&&e.state.buffers.stencil.setTest(!1),e.setClearColor(16777215,1),this.changeVisibilityOfSelectedObjects(!1);const o=this.renderScene.background;if(this.renderScene.background=null,this.renderScene.overrideMaterial=this.depthMaterial,e.setRenderTarget(this.renderTargetDepthBuffer),e.clear(),e.render(this.renderScene,this.renderCamera),this.changeVisibilityOfSelectedObjects(!0),this._visibilityCache.clear(),this.updateTextureMatrix(),this.changeVisibilityOfNonSelectedObjects(!1),this.renderScene.overrideMaterial=this.prepareMaskMaterial,this.prepareMaskMaterial.uniforms.cameraNearFar.value.set(this.renderCamera.near,this.renderCamera.far),this.prepareMaskMaterial.uniforms.depthTexture.value=this.renderTargetDepthBuffer.texture,this.prepareMaskMaterial.uniforms.textureMatrix.value=this.textureMatrix,e.setRenderTarget(this.renderTargetMaskBuffer),e.clear(),e.render(this.renderScene,this.renderCamera),this.renderScene.overrideMaterial=null,this.changeVisibilityOfNonSelectedObjects(!0),this._visibilityCache.clear(),this.renderScene.background=o,this.fsQuad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetMaskBuffer.texture,e.setRenderTarget(this.renderTargetMaskDownSampleBuffer),e.clear(),this.fsQuad.render(e),this.tempPulseColor1.copy(this.visibleEdgeColor),this.tempPulseColor2.copy(this.hiddenEdgeColor),this.pulsePeriod>0){const l=.625+Math.cos(performance.now()*.01/this.pulsePeriod)*.75/2;this.tempPulseColor1.multiplyScalar(l),this.tempPulseColor2.multiplyScalar(l)}this.fsQuad.material=this.edgeDetectionMaterial,this.edgeDetectionMaterial.uniforms.maskTexture.value=this.renderTargetMaskDownSampleBuffer.texture,this.edgeDetectionMaterial.uniforms.texSize.value.set(this.renderTargetMaskDownSampleBuffer.width,this.renderTargetMaskDownSampleBuffer.height),this.edgeDetectionMaterial.uniforms.visibleEdgeColor.value=this.tempPulseColor1,this.edgeDetectionMaterial.uniforms.hiddenEdgeColor.value=this.tempPulseColor2,e.setRenderTarget(this.renderTargetEdgeBuffer1),e.clear(),this.fsQuad.render(e),this.fsQuad.material=this.separableBlurMaterial1,this.separableBlurMaterial1.uniforms.colorTexture.value=this.renderTargetEdgeBuffer1.texture,this.separableBlurMaterial1.uniforms.direction.value=Ti.BlurDirectionX,this.separableBlurMaterial1.uniforms.kernelRadius.value=this.edgeThickness,e.setRenderTarget(this.renderTargetBlurBuffer1),e.clear(),this.fsQuad.render(e),this.separableBlurMaterial1.uniforms.colorTexture.value=this.renderTargetBlurBuffer1.texture,this.separableBlurMaterial1.uniforms.direction.value=Ti.BlurDirectionY,e.setRenderTarget(this.renderTargetEdgeBuffer1),e.clear(),this.fsQuad.render(e),this.fsQuad.material=this.separableBlurMaterial2,this.separableBlurMaterial2.uniforms.colorTexture.value=this.renderTargetEdgeBuffer1.texture,this.separableBlurMaterial2.uniforms.direction.value=Ti.BlurDirectionX,e.setRenderTarget(this.renderTargetBlurBuffer2),e.clear(),this.fsQuad.render(e),this.separableBlurMaterial2.uniforms.colorTexture.value=this.renderTargetBlurBuffer2.texture,this.separableBlurMaterial2.uniforms.direction.value=Ti.BlurDirectionY,e.setRenderTarget(this.renderTargetEdgeBuffer2),e.clear(),this.fsQuad.render(e),this.fsQuad.material=this.overlayMaterial,this.overlayMaterial.uniforms.maskTexture.value=this.renderTargetMaskBuffer.texture,this.overlayMaterial.uniforms.edgeTexture1.value=this.renderTargetEdgeBuffer1.texture,this.overlayMaterial.uniforms.edgeTexture2.value=this.renderTargetEdgeBuffer2.texture,this.overlayMaterial.uniforms.patternTexture.value=this.patternTexture,this.overlayMaterial.uniforms.edgeStrength.value=this.edgeStrength,this.overlayMaterial.uniforms.edgeGlow.value=this.edgeGlow,this.overlayMaterial.uniforms.usePatternTexture.value=this.usePatternTexture,r&&e.state.buffers.stencil.setTest(!0),e.setRenderTarget(n),this.fsQuad.render(e),e.setClearColor(this._oldClearColor,this.oldClearAlpha),e.autoClear=a}this.renderToScreen&&(this.fsQuad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=n.texture,e.setRenderTarget(null),this.fsQuad.render(e))}getPrepareMaskMaterial(){return new tn({uniforms:{depthTexture:{value:null},cameraNearFar:{value:new ne(.5,.5)},textureMatrix:{value:null}},vertexShader:`#include <morphtarget_pars_vertex>
				#include <skinning_pars_vertex>

				varying vec4 projTexCoord;
				varying vec4 vPosition;
				uniform mat4 textureMatrix;

				void main() {

					#include <skinbase_vertex>
					#include <begin_vertex>
					#include <morphtarget_vertex>
					#include <skinning_vertex>
					#include <project_vertex>

					vPosition = mvPosition;

					vec4 worldPosition = vec4( transformed, 1.0 );

					#ifdef USE_INSTANCING

						worldPosition = instanceMatrix * worldPosition;

					#endif
					
					worldPosition = modelMatrix * worldPosition;

					projTexCoord = textureMatrix * worldPosition;

				}`,fragmentShader:`#include <packing>
				varying vec4 vPosition;
				varying vec4 projTexCoord;
				uniform sampler2D depthTexture;
				uniform vec2 cameraNearFar;

				void main() {

					float depth = unpackRGBAToDepth(texture2DProj( depthTexture, projTexCoord ));
					float viewZ = - DEPTH_TO_VIEW_Z( depth, cameraNearFar.x, cameraNearFar.y );
					float depthTest = (-vPosition.z > viewZ) ? 1.0 : 0.0;
					gl_FragColor = vec4(0.0, depthTest, 1.0, 1.0);

				}`})}getEdgeDetectionMaterial(){return new tn({uniforms:{maskTexture:{value:null},texSize:{value:new ne(.5,.5)},visibleEdgeColor:{value:new E(1,1,1)},hiddenEdgeColor:{value:new E(1,1,1)}},vertexShader:`varying vec2 vUv;

				void main() {
					vUv = uv;
					gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
				}`,fragmentShader:`varying vec2 vUv;

				uniform sampler2D maskTexture;
				uniform vec2 texSize;
				uniform vec3 visibleEdgeColor;
				uniform vec3 hiddenEdgeColor;

				void main() {
					vec2 invSize = 1.0 / texSize;
					vec4 uvOffset = vec4(1.0, 0.0, 0.0, 1.0) * vec4(invSize, invSize);
					vec4 c1 = texture2D( maskTexture, vUv + uvOffset.xy);
					vec4 c2 = texture2D( maskTexture, vUv - uvOffset.xy);
					vec4 c3 = texture2D( maskTexture, vUv + uvOffset.yw);
					vec4 c4 = texture2D( maskTexture, vUv - uvOffset.yw);
					float diff1 = (c1.r - c2.r)*0.5;
					float diff2 = (c3.r - c4.r)*0.5;
					float d = length( vec2(diff1, diff2) );
					float a1 = min(c1.g, c2.g);
					float a2 = min(c3.g, c4.g);
					float visibilityFactor = min(a1, a2);
					vec3 edgeColor = 1.0 - visibilityFactor > 0.001 ? visibleEdgeColor : hiddenEdgeColor;
					gl_FragColor = vec4(edgeColor, 1.0) * vec4(d);
				}`})}getSeperableBlurMaterial(e){return new tn({defines:{MAX_RADIUS:e},uniforms:{colorTexture:{value:null},texSize:{value:new ne(.5,.5)},direction:{value:new ne(.5,.5)},kernelRadius:{value:1}},vertexShader:`varying vec2 vUv;

				void main() {
					vUv = uv;
					gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
				}`,fragmentShader:`#include <common>
				varying vec2 vUv;
				uniform sampler2D colorTexture;
				uniform vec2 texSize;
				uniform vec2 direction;
				uniform float kernelRadius;

				float gaussianPdf(in float x, in float sigma) {
					return 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;
				}

				void main() {
					vec2 invSize = 1.0 / texSize;
					float sigma = kernelRadius/2.0;
					float weightSum = gaussianPdf(0.0, sigma);
					vec4 diffuseSum = texture2D( colorTexture, vUv) * weightSum;
					vec2 delta = direction * invSize * kernelRadius/float(MAX_RADIUS);
					vec2 uvOffset = delta;
					for( int i = 1; i <= MAX_RADIUS; i ++ ) {
						float x = kernelRadius * float(i) / float(MAX_RADIUS);
						float w = gaussianPdf(x, sigma);
						vec4 sample1 = texture2D( colorTexture, vUv + uvOffset);
						vec4 sample2 = texture2D( colorTexture, vUv - uvOffset);
						diffuseSum += ((sample1 + sample2) * w);
						weightSum += (2.0 * w);
						uvOffset += delta;
					}
					gl_FragColor = diffuseSum/weightSum;
				}`})}getOverlayMaterial(){return new tn({uniforms:{maskTexture:{value:null},edgeTexture1:{value:null},edgeTexture2:{value:null},patternTexture:{value:null},edgeStrength:{value:1},edgeGlow:{value:1},usePatternTexture:{value:0}},vertexShader:`varying vec2 vUv;

				void main() {
					vUv = uv;
					gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
				}`,fragmentShader:`varying vec2 vUv;

				uniform sampler2D maskTexture;
				uniform sampler2D edgeTexture1;
				uniform sampler2D edgeTexture2;
				uniform sampler2D patternTexture;
				uniform float edgeStrength;
				uniform float edgeGlow;
				uniform bool usePatternTexture;

				void main() {
					vec4 edgeValue1 = texture2D(edgeTexture1, vUv);
					vec4 edgeValue2 = texture2D(edgeTexture2, vUv);
					vec4 maskColor = texture2D(maskTexture, vUv);
					vec4 patternColor = texture2D(patternTexture, 6.0 * vUv);
					float visibilityFactor = 1.0 - maskColor.g > 0.0 ? 1.0 : 0.5;
					vec4 edgeValue = edgeValue1 + edgeValue2 * edgeGlow;
					vec4 finalColor = edgeStrength * maskColor.r * edgeValue;
					if(usePatternTexture)
						finalColor += + visibilityFactor * (1.0 - maskColor.r) * (1.0 - patternColor.r);
					gl_FragColor = finalColor;
				}`,blending:yo,depthTest:!1,depthWrite:!1,transparent:!0})}}Ti.BlurDirectionX=new ne(1,0);Ti.BlurDirectionY=new ne(0,1);var yg=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function Bw(s){return s&&s.__esModule&&Object.prototype.hasOwnProperty.call(s,"default")?s.default:s}function zw(s){if(s.__esModule)return s;var e=s.default;if(typeof e=="function"){var t=function n(){return this instanceof n?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(s).forEach(function(n){var i=Object.getOwnPropertyDescriptor(s,n);Object.defineProperty(t,n,i.get?i:{enumerable:!0,get:function(){return s[n]}})}),t}var xg={exports:{}};(function(s,e){(function(t,n){s.exports=n()})(yg,function(){var t=function(){function n(d){return a.appendChild(d.dom),d}function i(d){for(var p=0;p<a.children.length;p++)a.children[p].style.display=p===d?"block":"none";r=d}var r=0,a=document.createElement("div");a.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",a.addEventListener("click",function(d){d.preventDefault(),i(++r%a.children.length)},!1);var o=(performance||Date).now(),l=o,c=0,h=n(new t.Panel("FPS","#0ff","#002")),u=n(new t.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var f=n(new t.Panel("MB","#f08","#201"));return i(0),{REVISION:16,dom:a,addPanel:n,showPanel:i,begin:function(){o=(performance||Date).now()},end:function(){c++;var d=(performance||Date).now();if(u.update(d-o,200),d>l+1e3&&(h.update(1e3*c/(d-l),100),l=d,c=0,f)){var p=performance.memory;f.update(p.usedJSHeapSize/1048576,p.jsHeapSizeLimit/1048576)}return d},update:function(){o=this.end()},domElement:a,setMode:i}};return t.Panel=function(n,i,r){var a=1/0,o=0,l=Math.round,c=l(window.devicePixelRatio||1),h=80*c,u=48*c,f=3*c,d=2*c,p=3*c,m=15*c,_=74*c,g=30*c,y=document.createElement("canvas");y.width=h,y.height=u,y.style.cssText="width:80px;height:48px";var v=y.getContext("2d");return v.font="bold "+9*c+"px Helvetica,Arial,sans-serif",v.textBaseline="top",v.fillStyle=r,v.fillRect(0,0,h,u),v.fillStyle=i,v.fillText(n,f,d),v.fillRect(p,m,_,g),v.fillStyle=r,v.globalAlpha=.9,v.fillRect(p,m,_,g),{dom:y,update:function(x,M){a=Math.min(a,x),o=Math.max(o,x),v.fillStyle=r,v.globalAlpha=1,v.fillRect(0,0,h,m),v.fillStyle=i,v.fillText(l(x)+" "+n+" ("+l(a)+"-"+l(o)+")",f,d),v.drawImage(y,p+c,m,_-c,g,p,m,_-c,g),v.fillRect(p+_-c,m,c,g),v.fillStyle=r,v.globalAlpha=.9,v.fillRect(p+_-c,m,c,l((1-x/M)*g))}}},t})})(xg);var Vw=xg.exports;const Hw=Bw(Vw);function Gw(s){let e;return{c(){e=ce("div"),this.h()},l(t){e=he(t,"DIV",{class:!0}),G(e).forEach(R),this.h()},h(){b(e,"class","stats absolute isolate top-0 left-0")},m(t,n){ae(t,e,n),s[1](e)},p:Ze,i:Ze,o:Ze,d(t){t&&R(e),s[1](null)}}}function Ww(s,e,t){const n=hl();let i,r,a,o;const l=()=>{i.begin()},c=()=>{i.end()};Bn(()=>{a=n.registerOnAfterRender(l),o=n.registerOnAfterRender(c),i=new Hw,r.appendChild(i.dom),i.showPanel(1)}),Fi(()=>{a==null||a(),o==null||o()});function h(u){_i[u?"unshift":"push"](()=>{r=u,t(0,r)})}return[r,h]}class Xw extends Mt{constructor(e){super(),bt(this,e,Ww,Gw,St,{})}}function Zf(s){let e,t,n;const i=s[3].default,r=Bi(i,s,s[2],null);return t=new Xw({}),{c(){r&&r.c(),e=Le(),Te(t.$$.fragment)},l(a){r&&r.l(a),e=Ie(a),Ae(t.$$.fragment,a)},m(a,o){r&&r.m(a,o),ae(a,e,o),Ce(t,a,o),n=!0},p(a,o){r&&r.p&&(!n||o&4)&&zi(r,i,a,a[2],n?Hi(i,a[2],o,null):Vi(a[2]),null)},i(a){n||(W(r,a),W(t.$$.fragment,a),n=!0)},o(a){K(r,a),K(t.$$.fragment,a),n=!1},d(a){r&&r.d(a),a&&R(e),Re(t,a)}}}function $w(s){let e,t,n,i,r,a=s[1]&&Zf(s);return{c(){e=ce("div"),t=ce("div"),n=ce("div"),i=Le(),a&&a.c(),this.h()},l(o){e=he(o,"DIV",{});var l=G(e);t=he(l,"DIV",{class:!0});var c=G(t);n=he(c,"DIV",{class:!0}),G(n).forEach(R),i=Ie(c),a&&a.l(c),c.forEach(R),l.forEach(R),this.h()},h(){b(n,"class","w-full h-full overflow-hidden isolate"),b(t,"class","relative w-screen h-screen")},m(o,l){ae(o,e,l),k(e,t),k(t,n),s[4](n),k(t,i),a&&a.m(t,null),r=!0},p(o,[l]){o[1]?a?(a.p(o,l),l&2&&W(a,1)):(a=Zf(o),a.c(),W(a,1),a.m(t,null)):a&&(wt(),K(a,1,1,()=>{a=null}),Et())},i(o){r||(W(a),r=!0)},o(o){K(a),r=!1},d(o){o&&R(e),s[4](null),a&&a.d()}}}const Mg="graph",hl=()=>jd(Mg),Yw=s=>Jd(Mg,s);function qw(s,e,t){let{$$slots:n={},$$scope:i}=e,r,a,o,l,c,h,u,f=!1;function d(){c=new gg(o,l.domElement),c.rotateSpeed=1,c.zoomSpeed=1,c.panSpeed=1,c.enablePan=!1,c.enableZoom=!0,c.enableRotate=!1,c.enableDamping=!0,c.dampingFactor=.1,c.minDistance=.5,c.maxDistance=1e3,c.reset(),c.addEventListener("change",()=>{c.saveState()})}function p(){a=new Xo,a.add(new Fh(16777215,.5));const T=Math.max(r.clientWidth,r.clientHeight)*2;o=new Oi(r.clientWidth/-2,r.clientWidth/2,r.clientHeight/2,r.clientHeight/-2,-T*10,T*10),o.position.z=2e3,o.position.x=2e3,o.position.y=2e3;const I=new kh(16777215,1);I.position.set(0,500,500),I.lookAt(0,0,0),o.add(I),a.add(o)}function m(T){o instanceof Oi?(o.left=r.clientWidth/-2,o.right=r.clientWidth/2,o.top=r.clientHeight/2,o.bottom=r.clientHeight/-2,o.updateProjectionMatrix()):o instanceof en&&(o.aspect=r.clientWidth/r.clientHeight,o.updateProjectionMatrix()),l.setSize(r.clientWidth,r.clientHeight),h.setSize(r.clientWidth,r.clientHeight),u.setSize(r.clientWidth,r.clientHeight)}Bn(()=>{p(),l=new Ho({alpha:!1,antialias:!0,powerPreference:"high-performance",failIfMajorPerformanceCaveat:!0,precision:"lowp"}),l.setPixelRatio(window.devicePixelRatio||1),l.setClearColor(0,0),l.setSize(r.clientWidth,r.clientHeight),r.appendChild(l.domElement),u=new kw(l);const T=new Fw(a,o);u.addPass(T),h=new Ti(new ne(r.clientWidth,r.clientHeight),a,o),h.visibleEdgeColor.set("#ff0000"),h.hiddenEdgeColor.set("#ff0000"),h.edgeStrength=100,h.edgeThickness=3,h.pulsePeriod=2,u.addPass(h),d();const I=S=>{for(const C of _)C(l,a,o);$_(S),c.update(),u.render();for(const C of g)C(l,a,o);requestAnimationFrame(I)};window.addEventListener("resize",m),t(1,f=!0),I(0)});const _=new Set,g=new Set;Yw({getValues:x,registerOnBeforeRender:T=>(_.add(T),()=>{_.delete(T)}),registerOnAfterRender:T=>(g.add(T),()=>{g.delete(T)})});function x(){return{scene:a,camera:o,renderer:l,domElement:r}}Fi(()=>{window.removeEventListener("resize",m),M(),l.dispose()}),new ne(0,0),new ne(0,0);function M(){console.log("clearScene")}function w(T){_i[T?"unshift":"push"](()=>{r=T,t(0,r)})}return s.$$set=T=>{"$$scope"in T&&t(2,i=T.$$scope)},[r,f,i,n,w]}class Zw extends Mt{constructor(e){super(),bt(this,e,qw,$w,St,{})}}function jw(s){const e=s-1;return e*e*e+1}function ir(s,{delay:e=0,duration:t=400,easing:n=Ig}={}){const i=+getComputedStyle(s).opacity;return{delay:e,duration:t,easing:n,css:r=>`opacity: ${r*i}`}}function jf(s,{delay:e=0,duration:t=400,easing:n=jw,x:i=0,y:r=0,opacity:a=0}={}){const o=getComputedStyle(s),l=+o.opacity,c=o.transform==="none"?"":o.transform,h=l*(1-a),[u,f]=eu(i),[d,p]=eu(r);return{delay:e,duration:t,easing:n,css:(m,_)=>`
			transform: ${c} translate(${(1-m)*u}${f}, ${(1-m)*d}${p});
			opacity: ${l-h*_}`}}function Jw(s){let e,t,n,i,r,a,o,l,c,h,u,f,d,p,m,_,g,y;return{c(){e=ce("div"),t=ce("div"),n=Le(),i=ce("div"),r=ce("div"),a=Je("svg"),o=Je("circle"),l=Je("path"),c=Le(),h=ce("span"),u=Ne("Loading..."),f=Le(),d=ce("p"),p=Ne("Please wait while the content is being loaded."),this.h()},l(v){e=he(v,"DIV",{class:!0});var x=G(e);t=he(x,"DIV",{class:!0}),G(t).forEach(R),n=Ie(x),i=he(x,"DIV",{class:!0});var M=G(i);r=he(M,"DIV",{class:!0});var w=G(r);a=Ke(w,"svg",{class:!0,xmlns:!0,fill:!0,viewBox:!0});var T=G(a);o=Ke(T,"circle",{class:!0,cx:!0,cy:!0,r:!0,stroke:!0,"stroke-width":!0}),G(o).forEach(R),l=Ke(T,"path",{class:!0,fill:!0,d:!0}),G(l).forEach(R),T.forEach(R),c=Ie(w),h=he(w,"SPAN",{});var I=G(h);u=Oe(I,"Loading..."),I.forEach(R),w.forEach(R),f=Ie(M),d=he(M,"P",{});var S=G(d);p=Oe(S,"Please wait while the content is being loaded."),S.forEach(R),M.forEach(R),x.forEach(R),this.h()},h(){b(t,"class","fixed inset-0 bg-gray-800 dark:bg-gray-950 opacity-75"),b(o,"class","opacity-25"),b(o,"cx","12"),b(o,"cy","12"),b(o,"r","10"),b(o,"stroke","currentColor"),b(o,"stroke-width","4"),b(l,"class","opacity-75"),b(l,"fill","currentColor"),b(l,"d","M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"),b(a,"class","animate-spin mr-2 h-5 w-5 text-gray-700 dark:text-gray-200"),b(a,"xmlns","http://www.w3.org/2000/svg"),b(a,"fill","none"),b(a,"viewBox","0 0 24 24"),b(r,"class","flex items-center mb-4"),b(i,"class","bg-white dark:bg-background-900 text-gray-500 dark:text-gray-100 rounded-lg p-4 z-20 shadow-lg"),b(e,"class","fixed isolate inset-0 flex items-center justify-center backdrop-blur-sm z-50 svelte-jhlyyp"),Lt(e,"visible",s[0])},m(v,x){ae(v,e,x),k(e,t),k(e,n),k(e,i),k(i,r),k(r,a),k(a,o),k(a,l),k(r,c),k(r,h),k(h,u),k(i,f),k(i,d),k(d,p),_=!0,g||(y=po(ep.call(null,e)),g=!0)},p(v,[x]){(!_||x&1)&&Lt(e,"visible",v[0])},i(v){_||(Dr(()=>{_&&(m||(m=Zn(e,ir,{},!0)),m.run(1))}),_=!0)},o(v){m||(m=Zn(e,ir,{},!1)),m.run(0),_=!1},d(v){v&&R(e),v&&m&&m.end(),g=!1,y()}}}function Kw(s,e,t){let{isLoading:n=!1}=e;return s.$$set=i=>{"isLoading"in i&&t(0,n=i.isLoading)},[n]}class Qw extends Mt{constructor(e){super(),bt(this,e,Kw,Jw,St,{isLoading:0})}}function Jf(s){let e,t;return{c(){e=ce("h2"),t=Ne(s[0]),this.h()},l(n){e=he(n,"H2",{class:!0});var i=G(e);t=Oe(i,s[0]),i.forEach(R),this.h()},h(){b(e,"class","font-bold mb-2"),Lt(e,"pt-2",s[2]),Lt(e,"px-4",s[2])},m(n,i){ae(n,e,i),k(e,t)},p(n,i){i&1&&Ct(t,n[0]),i&4&&Lt(e,"pt-2",n[2]),i&4&&Lt(e,"px-4",n[2])},d(n){n&&R(e)}}}function eE(s){let e,t,n,i,r=s[0]!==""&&Jf(s);const a=s[4].default,o=Bi(a,s,s[3],null);return{c(){e=ce("div"),r&&r.c(),t=Le(),o&&o.c(),this.h()},l(l){e=he(l,"DIV",{class:!0});var c=G(e);r&&r.l(c),t=Ie(c),o&&o.l(c),c.forEach(R),this.h()},h(){b(e,"class",n="m-1 mb-4 text-left rounded-xl backdrop-blur-lg bg-background-50/75 dark:bg-background-900/75 ring-1 ring-background-900/5 dark:ring-background-950/5 shadow-lg "+s[1]),Lt(e,"p-4",!s[2])},m(l,c){ae(l,e,c),r&&r.m(e,null),k(e,t),o&&o.m(e,null),i=!0},p(l,[c]){l[0]!==""?r?r.p(l,c):(r=Jf(l),r.c(),r.m(e,t)):r&&(r.d(1),r=null),o&&o.p&&(!i||c&8)&&zi(o,a,l,l[3],i?Hi(a,l[3],c,null):Vi(l[3]),null),(!i||c&2&&n!==(n="m-1 mb-4 text-left rounded-xl backdrop-blur-lg bg-background-50/75 dark:bg-background-900/75 ring-1 ring-background-900/5 dark:ring-background-950/5 shadow-lg "+l[1]))&&b(e,"class",n),(!i||c&6)&&Lt(e,"p-4",!l[2])},i(l){i||(W(o,l),i=!0)},o(l){K(o,l),i=!1},d(l){l&&R(e),r&&r.d(),o&&o.d(l)}}}function tE(s,e,t){let{$$slots:n={},$$scope:i}=e,{title:r=""}=e,{class:a=""}=e,{noPad:o=!1}=e;return s.$$set=l=>{"title"in l&&t(0,r=l.title),"class"in l&&t(1,a=l.class),"noPad"in l&&t(2,o=l.noPad),"$$scope"in l&&t(3,i=l.$$scope)},[r,a,o,i,n]}class uo extends Mt{constructor(e){super(),bt(this,e,tE,eE,St,{title:0,class:1,noPad:2})}}function nE(s){let e,t;const n=s[1].default,i=Bi(n,s,s[0],null);return{c(){e=ce("span"),i&&i.c(),this.h()},l(r){e=he(r,"SPAN",{class:!0,style:!0});var a=G(e);i&&i.l(a),a.forEach(R),this.h()},h(){b(e,"class","px-2 py-1 dark:border-background-600 dark:bg-background-800 border rounded-lg text-center"),ta(e,"font-family","monospace")},m(r,a){ae(r,e,a),i&&i.m(e,null),t=!0},p(r,[a]){i&&i.p&&(!t||a&1)&&zi(i,n,r,r[0],t?Hi(n,r[0],a,null):Vi(r[0]),null)},i(r){t||(W(i,r),t=!0)},o(r){K(i,r),t=!1},d(r){r&&R(e),i&&i.d(r)}}}function iE(s,e,t){let{$$slots:n={},$$scope:i}=e;return s.$$set=r=>{"$$scope"in r&&t(0,i=r.$$scope)},[i,n]}class Kl extends Mt{constructor(e){super(),bt(this,e,iE,nE,St,{})}}function Kf(s){let e,t;return{c(){e=Ne(s[3]),t=Ne(":")},l(n){e=Oe(n,s[3]),t=Oe(n,":")},m(n,i){ae(n,e,i),ae(n,t,i)},p(n,i){i&8&&Ct(e,n[3])},d(n){n&&R(e),n&&R(t)}}}function sE(s){let e,t=s[3]!==void 0&&Kf(s);return{c(){t&&t.c(),e=Pt()},l(n){t&&t.l(n),e=Pt()},m(n,i){t&&t.m(n,i),ae(n,e,i)},p(n,i){n[3]!==void 0?t?t.p(n,i):(t=Kf(n),t.c(),t.m(e.parentNode,e)):t&&(t.d(1),t=null)},d(n){t&&t.d(n),n&&R(e)}}}function rE(s){let e,t=s[4](s[0])+"",n;return{c(){e=ce("span"),n=Ne(t),this.h()},l(i){e=he(i,"SPAN",{class:!0});var r=G(e);n=Oe(r,t),r.forEach(R),this.h()},h(){b(e,"class","font-black")},m(i,r){ae(i,e,r),k(e,n)},p(i,r){r&17&&t!==(t=i[4](i[0])+"")&&Ct(n,t)},d(i){i&&R(e)}}}function aE(s){let e;return{c(){e=Ne(s[1])},l(t){e=Oe(t,s[1])},m(t,n){ae(t,e,n)},p(t,n){n&2&&Ct(e,t[1])},d(t){t&&R(e)}}}function oE(s){let e;return{c(){e=Ne(s[2])},l(t){e=Oe(t,s[2])},m(t,n){ae(t,e,n)},p(t,n){n&4&&Ct(e,t[2])},d(t){t&&R(e)}}}function lE(s){let e,t,n,i,r,a,o,l,c,h,u,f,d,p,m;return n=new Wg({props:{$$slots:{default:[sE]},$$scope:{ctx:s}}}),r=new Kl({props:{$$slots:{default:[rE]},$$scope:{ctx:s}}}),l=new Kl({props:{$$slots:{default:[aE]},$$scope:{ctx:s}}}),f=new Kl({props:{$$slots:{default:[oE]},$$scope:{ctx:s}}}),{c(){e=ce("div"),t=ce("div"),Te(n.$$.fragment),i=Le(),Te(r.$$.fragment),a=Le(),o=ce("div"),Te(l.$$.fragment),c=Le(),h=ce("input"),u=Le(),Te(f.$$.fragment),this.h()},l(_){e=he(_,"DIV",{class:!0});var g=G(e);t=he(g,"DIV",{class:!0});var y=G(t);Ae(n.$$.fragment,y),i=Ie(y),Ae(r.$$.fragment,y),y.forEach(R),a=Ie(g),o=he(g,"DIV",{class:!0});var v=G(o);Ae(l.$$.fragment,v),c=Ie(v),h=he(v,"INPUT",{type:!0,class:!0,min:!0,max:!0,step:!0}),u=Ie(v),Ae(f.$$.fragment,v),v.forEach(R),g.forEach(R),this.h()},h(){b(t,"class","flex justify-between items-center mb-2"),b(h,"type","range"),b(h,"class","slider-input appearance-none w-full h-2 rounded border border-slate-300 bg-slate-200 dark:border-background-600 dark:bg-background-800 transition-opacity"),b(h,"min",s[1]),b(h,"max",s[2]),b(h,"step","1"),b(o,"class","flex items-center gap-1"),b(e,"class","slider mb-4 mt-2")},m(_,g){ae(_,e,g),k(e,t),Ce(n,t,null),k(t,i),Ce(r,t,null),k(e,a),k(e,o),Ce(l,o,null),k(o,c),k(o,h),tu(h,s[0]),k(o,u),Ce(f,o,null),d=!0,p||(m=[qn(h,"change",s[8]),qn(h,"input",s[8]),qn(h,"selectstart",s[9]),qn(h,"input",s[5]),qn(h,"change",s[6])],p=!0)},p(_,[g]){const y={};g&4104&&(y.$$scope={dirty:g,ctx:_}),n.$set(y);const v={};g&4113&&(v.$$scope={dirty:g,ctx:_}),r.$set(v);const x={};g&4098&&(x.$$scope={dirty:g,ctx:_}),l.$set(x),(!d||g&2)&&b(h,"min",_[1]),(!d||g&4)&&b(h,"max",_[2]),g&1&&tu(h,_[0]);const M={};g&4100&&(M.$$scope={dirty:g,ctx:_}),f.$set(M)},i(_){d||(W(n.$$.fragment,_),W(r.$$.fragment,_),W(l.$$.fragment,_),W(f.$$.fragment,_),d=!0)},o(_){K(n.$$.fragment,_),K(r.$$.fragment,_),K(l.$$.fragment,_),K(f.$$.fragment,_),d=!1},d(_){_&&R(e),Re(n),Re(r),Re(l),Re(f),p=!1,Ao(m)}}}function cE(s,e,t){let{min:n=0}=e,{max:i=100}=e,{label:r=void 0}=e,{displayFunction:a=m=>m+""}=e,{initialValue:o=void 0}=e,{value:l=o??0}=e;const c=Kd();let h=!1;const u=()=>{h||(h=!0,c("start",!0)),c("input",{value:l,label:r})},f=()=>{h=!1,c("change",{value:l,label:r})};function d(){l=Dg(this.value),t(0,l),t(7,o),t(1,n),t(2,i)}const p=()=>console.log("start");return s.$$set=m=>{"min"in m&&t(1,n=m.min),"max"in m&&t(2,i=m.max),"label"in m&&t(3,r=m.label),"displayFunction"in m&&t(4,a=m.displayFunction),"initialValue"in m&&t(7,o=m.initialValue),"value"in m&&t(0,l=m.value)},s.$$.update=()=>{s.$$.dirty&128&&t(0,l=o??0),s.$$.dirty&7&&t(0,l=Math.max(n,Math.min(i,l)))},[l,n,i,r,a,u,f,o,d,p]}class bg extends Mt{constructor(e){super(),bt(this,e,cE,lE,St,{min:1,max:2,label:3,displayFunction:4,initialValue:7,value:0})}}function Qf(s,e,t){const n=s.slice();return n[13]=e[t],n[15]=t,n}function hE(s){var r;const e=s.slice(),t=Math.min(...e[1].options);e[10]=t;const n=Math.max(...e[1].options);e[11]=n;const i=(r=e[2])==null?void 0:r[e[0]];return e[12]=i,e}function uE(s){let e,t,n=s[1].items,i=[];for(let a=0;a<n.length;a+=1)i[a]=ed(Qf(s,n,a));const r=a=>K(i[a],1,1,()=>{i[a]=null});return{c(){e=ce("div");for(let a=0;a<i.length;a+=1)i[a].c();this.h()},l(a){e=he(a,"DIV",{class:!0});var o=G(e);for(let l=0;l<i.length;l+=1)i[l].l(o);o.forEach(R),this.h()},h(){b(e,"class","flex justify-stretch gap-2")},m(a,o){ae(a,e,o);for(let l=0;l<i.length;l+=1)i[l]&&i[l].m(e,null);t=!0},p(a,o){if(o&22){n=a[1].items;let l;for(l=0;l<n.length;l+=1){const c=Qf(a,n,l);i[l]?(i[l].p(c,o),W(i[l],1)):(i[l]=ed(c),i[l].c(),W(i[l],1),i[l].m(e,null))}for(wt(),l=n.length;l<i.length;l+=1)r(l);Et()}},i(a){if(!t){for(let o=0;o<n.length;o+=1)W(i[o]);t=!0}},o(a){i=i.filter(Boolean);for(let o=0;o<i.length;o+=1)K(i[o]);t=!1},d(a){a&&R(e),kn(i,a)}}}function fE(s){let e,t;return e=new bg({props:{label:s[1].label,initialValue:s[12],min:s[10],max:s[11],displayFunction:s[9]}}),e.$on("change",s[6]),{c(){Te(e.$$.fragment)},l(n){Ae(e.$$.fragment,n)},m(n,i){Ce(e,n,i),t=!0},p(n,i){const r={};i&2&&(r.label=n[1].label),i&5&&(r.initialValue=n[12]),i&2&&(r.min=n[10]),i&2&&(r.max=n[11]),e.$set(r)},i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Re(e,n)}}}function dE(s){let e,t;return e=new tp({props:{label:s[1].label||s[5],singular:!0,required:s[1].required,meta:s[0],values:s[1].options,optionConstructor:s[7],optionOrderer:mE}}),e.$on("select",s[8]),{c(){Te(e.$$.fragment)},l(n){Ae(e.$$.fragment,n)},m(n,i){Ce(e,n,i),t=!0},p(n,i){const r={};i&2&&(r.label=n[1].label||n[5]),i&2&&(r.required=n[1].required),i&1&&(r.meta=n[0]),i&2&&(r.values=n[1].options),e.$set(r)},i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Re(e,n)}}}function ed(s){var n;let e,t;return e=new Sg({props:{state:s[2],style:"flex-shrink: 0; flex-grow: "+(((n=s[1].grow)==null?void 0:n[s[15]])??1)+";",onValueChange:s[4],option:s[13],key:s[1].keys[s[15]]}}),{c(){Te(e.$$.fragment)},l(i){Ae(e.$$.fragment,i)},m(i,r){Ce(e,i,r),t=!0},p(i,r){var o;const a={};r&4&&(a.state=i[2]),r&2&&(a.style="flex-shrink: 0; flex-grow: "+(((o=i[1].grow)==null?void 0:o[i[15]])??1)+";"),r&16&&(a.onValueChange=i[4]),r&2&&(a.option=i[13]),r&2&&(a.key=i[1].keys[i[15]]),e.$set(a)},i(i){t||(W(e.$$.fragment,i),t=!0)},o(i){K(e.$$.fragment,i),t=!1},d(i){Re(e,i)}}}function pE(s){let e,t,n,i;const r=[dE,fE,uE],a=[];function o(c,h){return c[1].type==="string"?0:c[1].type==="number"?1:c[1].type==="row"?2:-1}function l(c,h){return h===1?hE(c):c}return~(t=o(s))&&(n=a[t]=r[t](l(s,t))),{c(){e=ce("div"),n&&n.c(),this.h()},l(c){e=he(c,"DIV",{style:!0});var h=G(e);n&&n.l(h),h.forEach(R),this.h()},h(){b(e,"style",s[3])},m(c,h){ae(c,e,h),~t&&a[t].m(e,null),i=!0},p(c,[h]){let u=t;t=o(c),t===u?~t&&a[t].p(l(c,t),h):(n&&(wt(),K(a[u],1,1,()=>{a[u]=null}),Et()),~t?(n=a[t],n?n.p(l(c,t),h):(n=a[t]=r[t](l(c,t)),n.c()),W(n,1),n.m(e,null)):n=null),(!i||h&8)&&b(e,"style",c[3])},i(c){i||(W(n),i=!0)},o(c){K(n),i=!1},d(c){c&&R(e),~t&&a[t].d()}}}const mE=(s,e)=>s.label.localeCompare(e.label);function gE(s,e,t){let{key:n}=e,{option:i}=e,{state:r=void 0}=e,{style:a=void 0}=e,{onValueChange:o}=e;const l=n.toString(),c=d=>{o(n,d.detail.value)},h=(d,p,m)=>({label:d,value:d,id:p,initiallySelected:(r==null?void 0:r[m])===d}),u=d=>{const{meta:p,selected:m}=d.detail,_=p;m.length>0?o(_,m[0].value):o(_,void 0)},f=d=>{switch(n){case"size":return`${(d/1024/1024).toFixed(3)} MB`;default:return`${d}`}};return s.$$set=d=>{"key"in d&&t(0,n=d.key),"option"in d&&t(1,i=d.option),"state"in d&&t(2,r=d.state),"style"in d&&t(3,a=d.style),"onValueChange"in d&&t(4,o=d.onValueChange)},[n,i,r,a,o,l,c,h,u,f]}class Sg extends Mt{constructor(e){super(),bt(this,e,gE,pE,St,{key:0,option:1,state:2,style:3,onValueChange:4})}}const _E=s=>({}),td=s=>({}),vE=s=>({}),nd=s=>({}),yE=s=>({}),id=s=>({});function sd(s){let e,t,n,i,r,a,o,l,c,h,u=s[4].title&&rd(s);const f=s[6].default,d=Bi(f,s,s[5],null);let p=s[4].footer&&ad(s);return{c(){e=ce("div"),t=ce("div"),u&&u.c(),n=Le(),d&&d.c(),i=Le(),p&&p.c(),this.h()},l(m){e=he(m,"DIV",{role:!0,class:!0});var _=G(e);t=he(_,"DIV",{class:!0});var g=G(t);u&&u.l(g),n=Ie(g),d&&d.l(g),i=Ie(g),p&&p.l(g),g.forEach(R),_.forEach(R),this.h()},h(){b(t,"class",r="modal rounded-3xl shadow-xl backdrop-blur-lg bg-background-50/75 dark:bg-background-900/75 "+s[1]+" svelte-10yvmj1"),b(e,"role","dialog"),b(e,"class","modal-overlay "+Xg+" fixed top-0 bottom-0 left-0 right-0 w-full h-full bg-opacity-80 dark:bg-opacity-60 bg-slate-200 dark:bg-background-950 svelte-10yvmj1")},m(m,_){ae(m,e,_),k(e,t),u&&u.m(t,null),k(t,n),d&&d.m(t,null),k(t,i),p&&p.m(t,null),l=!0,c||(h=[po(ep.call(null,e)),qn(e,"mousedown",Ng(s[3]))],c=!0)},p(m,_){m[4].title?u?(u.p(m,_),_&16&&W(u,1)):(u=rd(m),u.c(),W(u,1),u.m(t,n)):u&&(wt(),K(u,1,1,()=>{u=null}),Et()),d&&d.p&&(!l||_&32)&&zi(d,f,m,m[5],l?Hi(f,m[5],_,null):Vi(m[5]),null),m[4].footer?p?(p.p(m,_),_&16&&W(p,1)):(p=ad(m),p.c(),W(p,1),p.m(t,null)):p&&(wt(),K(p,1,1,()=>{p=null}),Et()),(!l||_&2&&r!==(r="modal rounded-3xl shadow-xl backdrop-blur-lg bg-background-50/75 dark:bg-background-900/75 "+m[1]+" svelte-10yvmj1"))&&b(t,"class",r)},i(m){l||(W(u),W(d,m),W(p),Dr(()=>{l&&(a||(a=Zn(t,jf,{y:-120,delay:25,duration:150},!0)),a.run(1))}),Dr(()=>{l&&(o||(o=Zn(e,ir,{duration:100},!0)),o.run(1))}),l=!0)},o(m){K(u),K(d,m),K(p),a||(a=Zn(t,jf,{y:-120,delay:25,duration:150},!1)),a.run(0),o||(o=Zn(e,ir,{duration:100},!1)),o.run(0),l=!1},d(m){m&&R(e),u&&u.d(),d&&d.d(m),p&&p.d(),m&&a&&a.end(),m&&o&&o.end(),c=!1,Ao(h)}}}function rd(s){let e,t,n;const i=s[6].title,r=Bi(i,s,s[5],nd);return{c(){e=ce("div"),t=ce("h2"),r&&r.c(),this.h()},l(a){e=he(a,"DIV",{class:!0});var o=G(e);t=he(o,"H2",{class:!0});var l=G(t);r&&r.l(l),l.forEach(R),o.forEach(R),this.h()},h(){b(t,"class","font-bold text-xl"),b(e,"class","pb-4 mb-2 border-b")},m(a,o){ae(a,e,o),k(e,t),r&&r.m(t,null),n=!0},p(a,o){r&&r.p&&(!n||o&32)&&zi(r,i,a,a[5],n?Hi(i,a[5],o,vE):Vi(a[5]),nd)},i(a){n||(W(r,a),n=!0)},o(a){K(r,a),n=!1},d(a){a&&R(e),r&&r.d(a)}}}function ad(s){let e,t;const n=s[6].footer,i=Bi(n,s,s[5],td);return{c(){e=ce("div"),i&&i.c()},l(r){e=he(r,"DIV",{});var a=G(e);i&&i.l(a),a.forEach(R)},m(r,a){ae(r,e,a),i&&i.m(e,null),t=!0},p(r,a){i&&i.p&&(!t||a&32)&&zi(i,n,r,r[5],t?Hi(n,r[5],a,_E):Vi(r[5]),td)},i(r){t||(W(i,r),t=!0)},o(r){K(i,r),t=!1},d(r){r&&R(e),i&&i.d(r)}}}function xE(s){let e,t,n,i,r,a,o;const l=s[6].trigger,c=Bi(l,s,s[5],id);let h=s[0]&&sd(s);return{c(){e=ce("span"),c&&c.c(),n=Le(),h&&h.c(),i=Pt(),this.h()},l(u){e=he(u,"SPAN",{class:!0});var f=G(e);c&&c.l(f),f.forEach(R),n=Ie(u),h&&h.l(u),i=Pt(),this.h()},h(){b(e,"class",t=nu(s[2])+" svelte-10yvmj1")},m(u,f){ae(u,e,f),c&&c.m(e,null),ae(u,n,f),h&&h.m(u,f),ae(u,i,f),r=!0,a||(o=[qn(e,"keypress",s[3]),qn(e,"click",s[3])],a=!0)},p(u,[f]){c&&c.p&&(!r||f&32)&&zi(c,l,u,u[5],r?Hi(l,u[5],f,yE):Vi(u[5]),id),(!r||f&4&&t!==(t=nu(u[2])+" svelte-10yvmj1"))&&b(e,"class",t),u[0]?h?(h.p(u,f),f&1&&W(h,1)):(h=sd(u),h.c(),W(h,1),h.m(i.parentNode,i)):h&&(wt(),K(h,1,1,()=>{h=null}),Et())},i(u){r||(W(c,u),W(h),r=!0)},o(u){K(c,u),K(h),r=!1},d(u){u&&R(e),c&&c.d(u),u&&R(n),h&&h.d(u),u&&R(i),a=!1,Ao(o)}}}var ha=(s=>(s.small="small",s.medium="medium",s.large="large",s))(ha||{});const ME=()=>jd("dialog");function bE(s,e,t){let{$$slots:n={},$$scope:i}=e;const r=Ug(n);let{size:a=ha.medium}=e,{dialogOpen:o=!1}=e,{class:l=void 0}=e;const c=u=>{o&&u.preventDefault()};Bn(()=>{window.addEventListener("touchmove",c,{passive:!1}),window.addEventListener("wheel",c,{passive:!1})}),Fi(()=>{window.removeEventListener("touchmove",c),window.removeEventListener("wheel",c)}),Jd("dialog",{close:()=>t(0,o=!1),open:()=>t(0,o=!0),toggle:()=>(h(),o)});const h=()=>{t(0,o=!o)};return s.$$set=u=>{"size"in u&&t(1,a=u.size),"dialogOpen"in u&&t(0,o=u.dialogOpen),"class"in u&&t(2,l=u.class),"$$scope"in u&&t(5,i=u.$$scope)},[o,a,l,h,r,i,n]}class $h extends Mt{constructor(e){super(),bt(this,e,bE,xE,St,{size:1,dialogOpen:0,class:2})}}function SE(s){let e;return{c(){e=ce("div"),this.h()},l(t){e=he(t,"DIV",{class:!0}),G(e).forEach(R),this.h()},h(){b(e,"class",s[0])},m(t,n){ae(t,e,n),s[4](e)},p(t,[n]){n&1&&b(e,"class",t[0])},i:Ze,o:Ze,d(t){t&&R(e),s[4](null)}}}function wE(s,e,t){let n;Kn(s,go,h=>t(5,n=h));let i,{editor:r}=e,{initialCode:a=""}=e,{class:o=void 0}=e,l=go.subscribe(h=>{r==null||r.updateOptions({theme:h.theme==="dark"?"vs-dark":"vs-light"})});Bn(async()=>{self.MonacoEnvironment={async getWorker(u,f){let d;switch(f){case"sql":d=await ml(()=>import("./sql.worker.4a8d2569.js"),["./sql.worker.4a8d2569.js","./editorSimpleWorker.ef28a780.js"],import.meta.url);break;default:d=await ml(()=>import("./editor.worker.c246269b.js"),[],import.meta.url);break}return new d.default}};const h=await ml(()=>import("./editor.main.4529b949.js").then(u=>u.e),["./editor.main.4529b949.js","./editorSimpleWorker.ef28a780.js","./preload-helper.a4192956.js","../assets/editor.2e67203f.css"],import.meta.url);t(2,r=h.editor.create(i,{value:a,language:"sql",theme:n.theme==="dark"?"vs-dark":"vs-light"}))}),Fi(()=>{l()});function c(h){_i[h?"unshift":"push"](()=>{i=h,t(1,i)})}return s.$$set=h=>{"editor"in h&&t(2,r=h.editor),"initialCode"in h&&t(3,a=h.initialCode),"class"in h&&t(0,o=h.class)},[o,i,r,a,c]}class EE extends Mt{constructor(e){super(),bt(this,e,wE,SE,St,{editor:2,initialCode:3,class:0})}}function od(s,e,t){const n=s.slice();return n[8]=e[t],n}function ld(s,e,t){const n=s.slice();n[12]=e[t],n[16]=t;const i=n[11].get(n[16]);n[13]=i;const r=n[11].numCols;return n[14]=r,n}function cd(s,e,t){const n=s.slice();return n[12]=e[t],n[18]=t,n}function hd(s,e,t){const n=s.slice();return n[19]=e[t],n}function ud(s){let e,t,n={ctx:s,current:null,token:null,hasCatch:!0,pending:PE,then:AE,catch:TE,value:11,error:22};return mo(t=s[1],n),{c(){e=Pt(),n.block.c()},l(i){e=Pt(),n.block.l(i)},m(i,r){ae(i,e,r),n.block.m(i,n.anchor=r),n.mount=()=>e.parentNode,n.anchor=e},p(i,r){s=i,n.ctx=s,r&2&&t!==(t=s[1])&&mo(t,n)||Qd(n,s,r)},d(i){i&&R(e),n.block.d(i),n.token=null,n=null}}}function TE(s){let e,t,n=s[22].message+"",i;return{c(){e=ce("div"),t=Ne("Error: "),i=Ne(n),this.h()},l(r){e=he(r,"DIV",{class:!0});var a=G(e);t=Oe(a,"Error: "),i=Oe(a,n),a.forEach(R),this.h()},h(){b(e,"class","text-red-500")},m(r,a){ae(r,e,a),k(e,t),k(e,i)},p(r,a){a&2&&n!==(n=r[22].message+"")&&Ct(i,n)},d(r){r&&R(e)}}}function AE(s){let e;function t(r,a){return r[11]!==void 0?RE:CE}let n=t(s),i=n(s);return{c(){i.c(),e=Pt()},l(r){i.l(r),e=Pt()},m(r,a){i.m(r,a),ae(r,e,a)},p(r,a){n===(n=t(r))&&i?i.p(r,a):(i.d(1),i=n(r),i&&(i.c(),i.m(e.parentNode,e)))},d(r){i.d(r),r&&R(e)}}}function CE(s){let e,t;return{c(){e=ce("div"),t=Ne("No data"),this.h()},l(n){e=he(n,"DIV",{class:!0});var i=G(e);t=Oe(i,"No data"),i.forEach(R),this.h()},h(){b(e,"class","text-red-500")},m(n,i){ae(n,e,i),k(e,t)},p:Ze,d(n){n&&R(e)}}}function RE(s){let e,t,n,i,r,a,o,l,c=s[11].schema.fields,h=[];for(let d=0;d<c.length;d+=1)h[d]=fd(hd(s,c,d));let u={length:s[11].numRows},f=[];for(let d=0;d<u.length;d+=1)f[d]=pd(ld(s,u,d));return{c(){e=ce("table"),t=ce("thead"),n=ce("tr"),i=ce("th"),r=Ne("ID"),a=Le();for(let d=0;d<h.length;d+=1)h[d].c();o=Le(),l=ce("tbody");for(let d=0;d<f.length;d+=1)f[d].c();this.h()},l(d){e=he(d,"TABLE",{class:!0});var p=G(e);t=he(p,"THEAD",{class:!0});var m=G(t);n=he(m,"TR",{});var _=G(n);i=he(_,"TH",{class:!0});var g=G(i);r=Oe(g,"ID"),g.forEach(R),a=Ie(_);for(let v=0;v<h.length;v+=1)h[v].l(_);_.forEach(R),m.forEach(R),o=Ie(p),l=he(p,"TBODY",{});var y=G(l);for(let v=0;v<f.length;v+=1)f[v].l(y);y.forEach(R),p.forEach(R),this.h()},h(){b(i,"class","px-4 py-2"),b(t,"class","bg-gray-200 dark:bg-gray-600"),b(e,"class","table-auto w-full border-collapse")},m(d,p){ae(d,e,p),k(e,t),k(t,n),k(n,i),k(i,r),k(n,a);for(let m=0;m<h.length;m+=1)h[m]&&h[m].m(n,null);k(e,o),k(e,l);for(let m=0;m<f.length;m+=1)f[m]&&f[m].m(l,null)},p(d,p){if(p&2){c=d[11].schema.fields;let m;for(m=0;m<c.length;m+=1){const _=hd(d,c,m);h[m]?h[m].p(_,p):(h[m]=fd(_),h[m].c(),h[m].m(n,null))}for(;m<h.length;m+=1)h[m].d(1);h.length=c.length}if(p&2){u={length:d[11].numRows};let m;for(m=0;m<u.length;m+=1){const _=ld(d,u,m);f[m]?f[m].p(_,p):(f[m]=pd(_),f[m].c(),f[m].m(l,null))}for(;m<f.length;m+=1)f[m].d(1);f.length=u.length}},d(d){d&&R(e),kn(h,d),kn(f,d)}}}function fd(s){let e,t=s[19].name+"",n;return{c(){e=ce("th"),n=Ne(t),this.h()},l(i){e=he(i,"TH",{class:!0});var r=G(e);n=Oe(r,t),r.forEach(R),this.h()},h(){b(e,"class","px-4 py-2")},m(i,r){ae(i,e,r),k(e,n)},p(i,r){r&2&&t!==(t=i[19].name+"")&&Ct(n,t)},d(i){i&&R(e)}}}function dd(s){var i;let e,t=(((i=s[13])==null?void 0:i[s[11].schema.fields[s[18]].name])??"")+"",n;return{c(){e=ce("td"),n=Ne(t),this.h()},l(r){e=he(r,"TD",{class:!0});var a=G(e);n=Oe(a,t),a.forEach(R),this.h()},h(){b(e,"class","px-4 py-2")},m(r,a){ae(r,e,a),k(e,n)},p(r,a){var o;a&2&&t!==(t=(((o=r[13])==null?void 0:o[r[11].schema.fields[r[18]].name])??"")+"")&&Ct(n,t)},d(r){r&&R(e)}}}function pd(s){let e,t,n,i,r,a={length:s[14]},o=[];for(let l=0;l<a.length;l+=1)o[l]=dd(cd(s,a,l));return{c(){e=ce("tr"),t=ce("td"),n=Ne(s[16]),i=Le();for(let l=0;l<o.length;l+=1)o[l].c();r=Le(),this.h()},l(l){e=he(l,"TR",{class:!0});var c=G(e);t=he(c,"TD",{class:!0});var h=G(t);n=Oe(h,s[16]),h.forEach(R),i=Ie(c);for(let u=0;u<o.length;u+=1)o[u].l(c);r=Ie(c),c.forEach(R),this.h()},h(){b(t,"class","px-4 py-2"),b(e,"class",s[16]%2===0?"dark:bg-background-800 bg-white":"dark:bg-background-900 bg-gray-100")},m(l,c){ae(l,e,c),k(e,t),k(t,n),k(e,i);for(let h=0;h<o.length;h+=1)o[h]&&o[h].m(e,null);k(e,r)},p(l,c){if(c&2){a={length:l[14]};let h;for(h=0;h<a.length;h+=1){const u=cd(l,a,h);o[h]?o[h].p(u,c):(o[h]=dd(u),o[h].c(),o[h].m(e,r))}for(;h<o.length;h+=1)o[h].d(1);o.length=a.length}},d(l){l&&R(e),kn(o,l)}}}function PE(s){return{c:Ze,l:Ze,m:Ze,p:Ze,d:Ze}}function md(s){let e,t,n=s[8].query+"",i,r,a,o=s[8].executionTime.toLocaleString()+"",l,c,h,u,f;function d(){return s[7](s[8])}return{c(){e=ce("div"),t=ce("p"),i=Ne(n),r=Le(),a=ce("div"),l=Ne(o),c=Ne("ms"),h=Le(),this.h()},l(p){e=he(p,"DIV",{class:!0,style:!0});var m=G(e);t=he(m,"P",{class:!0});var _=G(t);i=Oe(_,n),_.forEach(R),r=Ie(m),a=he(m,"DIV",{class:!0});var g=G(a);l=Oe(g,o),c=Oe(g,"ms"),g.forEach(R),h=Ie(m),m.forEach(R),this.h()},h(){b(t,"class","line-clamp-2 overflow-ellipsis"),b(a,"class","absolute right-2 bottom-2 text-sm bg-cyan-500 text-cyan-200 px-2 rounded-lg"),Lt(a,"bg-red-600",!s[8].success),Lt(a,"text-red-100",!s[8].success),b(e,"class","relative border-b select-none cursor-pointer first:border-t py-2 px-2 hover:text-background-900 text-background-500 hover:bg-background-100 dark:hover:bg-background-600"),ta(e,"font-family","monospace")},m(p,m){ae(p,e,m),k(e,t),k(t,i),k(e,r),k(e,a),k(a,l),k(a,c),k(e,h),u||(f=qn(e,"click",d),u=!0)},p(p,m){s=p,m&4&&n!==(n=s[8].query+"")&&Ct(i,n),m&4&&o!==(o=s[8].executionTime.toLocaleString()+"")&&Ct(l,o),m&4&&Lt(a,"bg-red-600",!s[8].success),m&4&&Lt(a,"text-red-100",!s[8].success)},d(p){p&&R(e),u=!1,f()}}}function LE(s){let e;return{c(){e=Ne("Execute")},l(t){e=Oe(t,"Execute")},m(t,n){ae(t,e,n)},d(t){t&&R(e)}}}function IE(s){let e,t,n,i,r,a,o,l,c,h,u,f,d,p,m,_,g,y,v,x,M,w,T,I,S;function C(N){s[6](N)}let V={class:"h-[60vh] w-full"};s[0]!==void 0&&(V.editor=s[0]),l=new EE({props:V}),_i.push(()=>Co(l,"editor",C));let X=s[1]&&ud(s),F=s[2].previousQueries,B=[];for(let N=0;N<F.length;N+=1)B[N]=md(od(s,F,N));return I=new nn({props:{color:Dt.PRIMARY,$$slots:{default:[LE]},$$scope:{ctx:s}}}),I.$on("click",s[3]),{c(){e=ce("div"),t=ce("div"),n=ce("div"),i=ce("h3"),r=Ne("Query"),a=Le(),o=ce("div"),Te(l.$$.fragment),h=Le(),u=ce("div"),f=ce("h3"),d=Ne("Output"),p=Le(),m=ce("div"),X&&X.c(),_=Le(),g=ce("div"),y=ce("h3"),v=Ne("History"),x=Le(),M=ce("div");for(let N=0;N<B.length;N+=1)B[N].c();w=Le(),T=ce("div"),Te(I.$$.fragment),this.h()},l(N){e=he(N,"DIV",{});var Y=G(e);t=he(Y,"DIV",{class:!0});var O=G(t);n=he(O,"DIV",{class:!0});var Z=G(n);i=he(Z,"H3",{class:!0});var q=G(i);r=Oe(q,"Query"),q.forEach(R),a=Ie(Z),o=he(Z,"DIV",{class:!0});var Q=G(o);Ae(l.$$.fragment,Q),Q.forEach(R),Z.forEach(R),h=Ie(O),u=he(O,"DIV",{class:!0});var H=G(u);f=he(H,"H3",{class:!0});var ee=G(f);d=Oe(ee,"Output"),ee.forEach(R),p=Ie(H),m=he(H,"DIV",{class:!0,style:!0});var _e=G(m);X&&X.l(_e),_e.forEach(R),H.forEach(R),_=Ie(O),g=he(O,"DIV",{class:!0});var ge=G(g);y=he(ge,"H3",{class:!0});var Se=G(y);v=Oe(Se,"History"),Se.forEach(R),x=Ie(ge),M=he(ge,"DIV",{class:!0});var Fe=G(M);for(let Xe=0;Xe<B.length;Xe+=1)B[Xe].l(Fe);Fe.forEach(R),ge.forEach(R),O.forEach(R),w=Ie(Y),T=he(Y,"DIV",{class:!0});var $e=G(T);Ae(I.$$.fragment,$e),$e.forEach(R),Y.forEach(R),this.h()},h(){b(i,"class","font-semibold text-lg mb-3"),b(o,"class","border"),b(n,"class","col-span-3"),b(f,"class","font-semibold text-lg mb-3"),b(m,"class","h-[60vh] overflow-auto border-t border-b border-r"),ta(m,"font-family","monospace"),b(u,"class","col-span-3"),b(y,"class","font-semibold text-lg mb-3"),b(M,"class","h-[60vh] overflow-scroll"),b(g,"class","col-span-2"),b(t,"class","grid grid-cols-8 max-h-full"),b(T,"class","flex justify-end pt-5")},m(N,Y){ae(N,e,Y),k(e,t),k(t,n),k(n,i),k(i,r),k(n,a),k(n,o),Ce(l,o,null),k(t,h),k(t,u),k(u,f),k(f,d),k(u,p),k(u,m),X&&X.m(m,null),k(t,_),k(t,g),k(g,y),k(y,v),k(g,x),k(g,M);for(let O=0;O<B.length;O+=1)B[O]&&B[O].m(M,null);k(e,w),k(e,T),Ce(I,T,null),S=!0},p(N,[Y]){const O={};if(!c&&Y&1&&(c=!0,O.editor=N[0],Ro(()=>c=!1)),l.$set(O),N[1]?X?X.p(N,Y):(X=ud(N),X.c(),X.m(m,null)):X&&(X.d(1),X=null),Y&5){F=N[2].previousQueries;let q;for(q=0;q<F.length;q+=1){const Q=od(N,F,q);B[q]?B[q].p(Q,Y):(B[q]=md(Q),B[q].c(),B[q].m(M,null))}for(;q<B.length;q+=1)B[q].d(1);B.length=F.length}const Z={};Y&8388608&&(Z.$$scope={dirty:Y,ctx:N}),I.$set(Z)},i(N){S||(W(l.$$.fragment,N),W(I.$$.fragment,N),S=!0)},o(N){K(l.$$.fragment,N),K(I.$$.fragment,N),S=!1},d(N){N&&R(e),Re(l),X&&X.d(),kn(B,N),Re(I)}}}function DE(s,e,t){let n;Kn(s,Ur,u=>t(2,n=u));let i,r,{storageKey:a="query-editor"}=e,{initialQuery:o=""}=e;Bn(async()=>{t(4,o=sessionStorage.getItem(a)||o),r==null||r.setValue(o)}),Fi(()=>{});function l(){const u=r.getValue();sessionStorage.setItem(a,u);try{t(1,i=Ur.executeQuery(u))}catch(f){console.error(f),t(1,i=Promise.reject(f))}finally{}}function c(u){r=u,t(0,r)}const h=u=>{r.setValue(u.query)};return s.$$set=u=>{"storageKey"in u&&t(5,a=u.storageKey),"initialQuery"in u&&t(4,o=u.initialQuery)},s.$$.update=()=>{s.$$.dirty&17&&r&&(r.layout(),r.setValue(o))},[r,i,n,l,o,a,c,h]}class UE extends Mt{constructor(e){super(),bt(this,e,DE,IE,St,{storageKey:5,initialQuery:4})}}function gd(s,e,t){const n=s.slice();return n[12]=e[t][0],n[13]=e[t][1],n}function _d(s,e,t){const n=s.slice();return n[16]=e[t],n}function vd(s){const e=ME();s[19]=e}function yd(s,e,t){const n=s.slice();return n[20]=e[t][0],n[21]=e[t][1],n}function NE(s){let e,t;return e=new k0({props:{size:"20"}}),{c(){Te(e.$$.fragment)},l(n){Ae(e.$$.fragment,n)},m(n,i){Ce(e,n,i),t=!0},i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Re(e,n)}}}function OE(s){let e,t;return e=new b0({props:{size:"20"}}),{c(){Te(e.$$.fragment)},l(n){Ae(e.$$.fragment,n)},m(n,i){Ce(e,n,i),t=!0},i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Re(e,n)}}}function kE(s){let e,t,n,i;const r=[OE,NE],a=[];function o(l,c){return l[3].theme===t0.Dark?0:1}return t=o(s),n=a[t]=r[t](s),{c(){e=ce("div"),n.c(),this.h()},l(l){e=he(l,"DIV",{class:!0});var c=G(e);n.l(c),c.forEach(R),this.h()},h(){b(e,"class","py")},m(l,c){ae(l,e,c),a[t].m(e,null),i=!0},p(l,c){let h=t;t=o(l),t!==h&&(wt(),K(a[h],1,1,()=>{a[h]=null}),Et(),n=a[t],n||(n=a[t]=r[t](l),n.c()),W(n,1),n.m(e,null))},i(l){i||(W(n),i=!0)},o(l){K(n),i=!1},d(l){l&&R(e),a[t].d()}}}function FE(s){let e,t;return e=new UE({}),{c(){Te(e.$$.fragment)},l(n){Ae(e.$$.fragment,n)},m(n,i){Ce(e,n,i),t=!0},i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Re(e,n)}}}function BE(s){let e;return{c(){e=Ne("SQL Editor")},l(t){e=Oe(t,"SQL Editor")},m(t,n){ae(t,e,n)},d(t){t&&R(e)}}}function zE(s){let e,t;return e=new sp({props:{slot:"leading",size:"20"}}),{c(){Te(e.$$.fragment)},l(n){Ae(e.$$.fragment,n)},m(n,i){Ce(e,n,i),t=!0},p:Ze,i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Re(e,n)}}}function VE(s){let e,t;return e=new nn({props:{slot:"trigger",color:Dt.SECONDARY,size:mn.LG,$$slots:{leading:[zE],default:[BE]},$$scope:{ctx:s}}}),{c(){Te(e.$$.fragment)},l(n){Ae(e.$$.fragment,n)},m(n,i){Ce(e,n,i),t=!0},p(n,i){const r={};i&16777216&&(r.$$scope={dirty:i,ctx:n}),e.$set(r)},i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Re(e,n)}}}function HE(s){let e;return{c(){e=Ne("SQL Query Editor")},l(t){e=Oe(t,"SQL Query Editor")},m(t,n){ae(t,e,n)},d(t){t&&R(e)}}}function GE(s){let e,t,n;return t=new U0({props:{size:"20"}}),{c(){e=ce("div"),Te(t.$$.fragment),this.h()},l(i){e=he(i,"DIV",{class:!0});var r=G(e);Ae(t.$$.fragment,r),r.forEach(R),this.h()},h(){b(e,"class","py")},m(i,r){ae(i,e,r),Ce(t,e,null),n=!0},p:Ze,i(i){n||(W(t.$$.fragment,i),n=!0)},o(i){K(t.$$.fragment,i),n=!1},d(i){i&&R(e),Re(t)}}}function xd(s){let e,t,n,i;return t=new uo({props:{$$slots:{default:[QE]},$$scope:{ctx:s}}}),{c(){e=ce("div"),Te(t.$$.fragment)},l(r){e=he(r,"DIV",{});var a=G(e);Ae(t.$$.fragment,a),a.forEach(R)},m(r,a){ae(r,e,a),Ce(t,e,null),i=!0},p(r,a){const o={};a&16777267&&(o.$$scope={dirty:a,ctx:r}),t.$set(o)},i(r){i||(W(t.$$.fragment,r),Dr(()=>{i&&(n||(n=Zn(e,lu,{duration:100},!0)),n.run(1))}),i=!0)},o(r){K(t.$$.fragment,r),n||(n=Zn(e,lu,{duration:100},!1)),n.run(0),i=!1},d(r){r&&R(e),Re(t),r&&n&&n.end()}}}function WE(s){let e;return{c(){e=Ne("Reset")},l(t){e=Oe(t,"Reset")},m(t,n){ae(t,e,n)},d(t){t&&R(e)}}}function XE(s){let e,t;return e=new L0({props:{size:"12"}}),{c(){Te(e.$$.fragment)},l(n){Ae(e.$$.fragment,n)},m(n,i){Ce(e,n,i),t=!0},p:Ze,i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Re(e,n)}}}function $E(s){let e,t;return e=new n0({props:{size:"15"}}),{c(){Te(e.$$.fragment)},l(n){Ae(e.$$.fragment,n)},m(n,i){Ce(e,n,i),t=!0},p:Ze,i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Re(e,n)}}}function Md(s){let e,t,n=(s[21].displayName??s[21].name)+"",i,r,a,o,l;function c(){return s[9](s[20])}return a=new nn({props:{variant:ip.LINK,size:mn.SM,$$slots:{default:[$E]},$$scope:{ctx:s}}}),a.$on("click",c),{c(){e=ce("li"),t=ce("div"),i=Ne(n),r=Le(),Te(a.$$.fragment),o=Le(),this.h()},l(h){e=he(h,"LI",{class:!0});var u=G(e);t=he(u,"DIV",{});var f=G(t);i=Oe(f,n),f.forEach(R),r=Ie(u),Ae(a.$$.fragment,u),o=Ie(u),u.forEach(R),this.h()},h(){b(e,"class","flex py-1 justify-between items-center")},m(h,u){ae(h,e,u),k(e,t),k(t,i),k(e,r),Ce(a,e,null),k(e,o),l=!0},p(h,u){s=h,(!l||u&16)&&n!==(n=(s[21].displayName??s[21].name)+"")&&Ct(i,n);const f={};u&16777216&&(f.$$scope={dirty:u,ctx:s}),a.$set(f)},i(h){l||(W(a.$$.fragment,h),l=!0)},o(h){K(a.$$.fragment,h),l=!1},d(h){h&&R(e),Re(a)}}}function YE(s){vd(s);let e,t;function n(...i){return s[10](s[19],...i)}return e=new $g({}),e.$on("selectTable",n),e.$on("selectDataset",s[7]),{c(){Te(e.$$.fragment)},l(i){Ae(e.$$.fragment,i)},m(i,r){Ce(e,i,r),t=!0},p(i,r){s=i,vd(s)},i(i){t||(W(e.$$.fragment,i),t=!0)},o(i){K(e.$$.fragment,i),t=!1},d(i){Re(e,i)}}}function qE(s){let e;return{c(){e=Ne("Load More")},l(t){e=Oe(t,"Load More")},m(t,n){ae(t,e,n)},d(t){t&&R(e)}}}function ZE(s){let e,t;return e=new C0({props:{size:"12"}}),{c(){Te(e.$$.fragment)},l(n){Ae(e.$$.fragment,n)},m(n,i){Ce(e,n,i),t=!0},p:Ze,i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Re(e,n)}}}function jE(s){let e,t;return e=new nn({props:{slot:"trigger",size:mn.SM,$$slots:{trailing:[ZE],default:[qE]},$$scope:{ctx:s}}}),{c(){Te(e.$$.fragment)},l(n){Ae(e.$$.fragment,n)},m(n,i){Ce(e,n,i),t=!0},p(n,i){const r={};i&16777216&&(r.$$scope={dirty:i,ctx:n}),e.$set(r)},i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Re(e,n)}}}function bd(s){let e,t,n,i,r,a,o,l;e=new np({});let c=Object.values(au),h=[];for(let d=0;d<c.length;d+=1)h[d]=Sd(_d(s,c,d));const u=d=>K(h[d],1,1,()=>{h[d]=null});let f=s[1]&&s[0].graphOptions&&wd(s);return{c(){Te(e.$$.fragment),t=Le(),n=ce("h3"),i=Ne("Graph Type"),r=Le();for(let d=0;d<h.length;d+=1)h[d].c();a=Le(),f&&f.c(),o=Pt(),this.h()},l(d){Ae(e.$$.fragment,d),t=Ie(d),n=he(d,"H3",{class:!0});var p=G(n);i=Oe(p,"Graph Type"),p.forEach(R),r=Ie(d);for(let m=0;m<h.length;m+=1)h[m].l(d);a=Ie(d),f&&f.l(d),o=Pt(),this.h()},h(){b(n,"class","font-semibold text-lg mb-2")},m(d,p){Ce(e,d,p),ae(d,t,p),ae(d,n,p),k(n,i),ae(d,r,p);for(let m=0;m<h.length;m+=1)h[m]&&h[m].m(d,p);ae(d,a,p),f&&f.m(d,p),ae(d,o,p),l=!0},p(d,p){if(p&1){c=Object.values(au);let m;for(m=0;m<c.length;m+=1){const _=_d(d,c,m);h[m]?(h[m].p(_,p),W(h[m],1)):(h[m]=Sd(_),h[m].c(),W(h[m],1),h[m].m(a.parentNode,a))}for(wt(),m=c.length;m<h.length;m+=1)u(m);Et()}d[1]&&d[0].graphOptions?f?(f.p(d,p),p&3&&W(f,1)):(f=wd(d),f.c(),W(f,1),f.m(o.parentNode,o)):f&&(wt(),K(f,1,1,()=>{f=null}),Et())},i(d){if(!l){W(e.$$.fragment,d);for(let p=0;p<c.length;p+=1)W(h[p]);W(f),l=!0}},o(d){K(e.$$.fragment,d),h=h.filter(Boolean);for(let p=0;p<h.length;p+=1)K(h[p]);K(f),l=!1},d(d){Re(e,d),d&&R(t),d&&R(n),d&&R(r),kn(h,d),d&&R(a),f&&f.d(d),d&&R(o)}}}function JE(s){let e,t,n,i,r=s[16]+"",a,o;return t=new rp({}),{c(){e=ce("div"),Te(t.$$.fragment),n=Le(),i=ce("p"),a=Ne(r),this.h()},l(l){e=he(l,"DIV",{class:!0});var c=G(e);Ae(t.$$.fragment,c),n=Ie(c),i=he(c,"P",{class:!0});var h=G(i);a=Oe(h,r),h.forEach(R),c.forEach(R),this.h()},h(){b(i,"class","text-sm"),b(e,"class","flex gap-2 flex-col items-center")},m(l,c){ae(l,e,c),Ce(t,e,null),k(e,n),k(e,i),k(i,a),o=!0},p:Ze,i(l){o||(W(t.$$.fragment,l),o=!0)},o(l){K(t.$$.fragment,l),o=!1},d(l){l&&R(e),Re(t)}}}function Sd(s){var i;let e,t;function n(){return s[11](s[16])}return e=new nn({props:{color:s[16]===((i=s[0].graphOptions)==null?void 0:i.getType())?Dt.PRIMARY:Dt.SECONDARY,$$slots:{default:[JE]},$$scope:{ctx:s}}}),e.$on("click",n),{c(){Te(e.$$.fragment)},l(r){Ae(e.$$.fragment,r)},m(r,a){Ce(e,r,a),t=!0},p(r,a){var l;s=r;const o={};a&1&&(o.color=s[16]===((l=s[0].graphOptions)==null?void 0:l.getType())?Dt.PRIMARY:Dt.SECONDARY),a&16777216&&(o.$$scope={dirty:a,ctx:s}),e.$set(o)},i(r){t||(W(e.$$.fragment,r),t=!0)},o(r){K(e.$$.fragment,r),t=!1},d(r){Re(e,r)}}}function wd(s){let e,t,n,i,r,a,o,l,c,h;e=new np({});let u=Object.entries(s[0].graphOptions.filterOptions??{}),f=[];for(let p=0;p<u.length;p+=1)f[p]=Td(gd(s,u,p));const d=p=>K(f[p],1,1,()=>{f[p]=null});return c=new nn({props:{color:Dt.SECONDARY,$$slots:{default:[KE]},$$scope:{ctx:s}}}),{c(){Te(e.$$.fragment),t=Le(),n=ce("h3"),i=Ne("Visualization options"),r=Le(),a=ce("div"),o=ce("div");for(let p=0;p<f.length;p+=1)f[p].c();l=Le(),Te(c.$$.fragment),this.h()},l(p){Ae(e.$$.fragment,p),t=Ie(p),n=he(p,"H3",{class:!0});var m=G(n);i=Oe(m,"Visualization options"),m.forEach(R),r=Ie(p),a=he(p,"DIV",{class:!0});var _=G(a);o=he(_,"DIV",{class:!0});var g=G(o);for(let y=0;y<f.length;y+=1)f[y].l(g);g.forEach(R),l=Ie(_),Ae(c.$$.fragment,_),_.forEach(R),this.h()},h(){b(n,"class","font-semibold text-lg"),b(o,"class","mb-4"),b(a,"class","flex flex-col gap-2")},m(p,m){Ce(e,p,m),ae(p,t,m),ae(p,n,m),k(n,i),ae(p,r,m),ae(p,a,m),k(a,o);for(let _=0;_<f.length;_+=1)f[_]&&f[_].m(o,null);k(a,l),Ce(c,a,null),h=!0},p(p,m){if(m&33){u=Object.entries(p[0].graphOptions.filterOptions??{});let g;for(g=0;g<u.length;g+=1){const y=gd(p,u,g);f[g]?(f[g].p(y,m),W(f[g],1)):(f[g]=Td(y),f[g].c(),W(f[g],1),f[g].m(o,null))}for(wt(),g=u.length;g<f.length;g+=1)d(g);Et()}const _={};m&16777216&&(_.$$scope={dirty:m,ctx:p}),c.$set(_)},i(p){if(!h){W(e.$$.fragment,p);for(let m=0;m<u.length;m+=1)W(f[m]);W(c.$$.fragment,p),h=!0}},o(p){K(e.$$.fragment,p),f=f.filter(Boolean);for(let m=0;m<f.length;m+=1)K(f[m]);K(c.$$.fragment,p),h=!1},d(p){Re(e,p),p&&R(t),p&&R(n),p&&R(r),p&&R(a),kn(f,p),Re(c)}}}function Ed(s){let e,t;return e=new Sg({props:{onValueChange:s[0].graphOptions.setFilterOption,option:s[13],state:s[5],key:s[12]}}),{c(){Te(e.$$.fragment)},l(n){Ae(e.$$.fragment,n)},m(n,i){Ce(e,n,i),t=!0},p(n,i){const r={};i&1&&(r.onValueChange=n[0].graphOptions.setFilterOption),i&1&&(r.option=n[13]),i&32&&(r.state=n[5]),i&1&&(r.key=n[12]),e.$set(r)},i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Re(e,n)}}}function Td(s){let e,t,n=typeof s[13]<"u"&&Ed(s);return{c(){n&&n.c(),e=Pt()},l(i){n&&n.l(i),e=Pt()},m(i,r){n&&n.m(i,r),ae(i,e,r),t=!0},p(i,r){typeof i[13]<"u"?n?(n.p(i,r),r&1&&W(n,1)):(n=Ed(i),n.c(),W(n,1),n.m(e.parentNode,e)):n&&(wt(),K(n,1,1,()=>{n=null}),Et())},i(i){t||(W(n),t=!0)},o(i){K(n),t=!1},d(i){n&&n.d(i),i&&R(e)}}}function KE(s){let e;return{c(){e=Ne("Reset")},l(t){e=Oe(t,"Reset")},m(t,n){ae(t,e,n)},d(t){t&&R(e)}}}function QE(s){let e,t,n,i,r,a,o,l,c,h,u=Object.keys(s[4].tables).length>0,f,d;r=new nn({props:{size:mn.SM,$$slots:{trailing:[XE],default:[WE]},$$scope:{ctx:s}}}),r.$on("click",Yn.reset);let p=Object.entries(s[4].tables),m=[];for(let y=0;y<p.length;y+=1)m[y]=Md(yd(s,p,y));const _=y=>K(m[y],1,1,()=>{m[y]=null});c=new $h({props:{size:ha.small,$$slots:{trigger:[jE],default:[YE]},$$scope:{ctx:s}}});let g=u&&bd(s);return{c(){e=ce("div"),t=ce("h3"),n=Ne("Loaded table"),i=Le(),Te(r.$$.fragment),a=Le(),o=ce("ul");for(let y=0;y<m.length;y+=1)m[y].c();l=Le(),Te(c.$$.fragment),h=Le(),g&&g.c(),f=Pt(),this.h()},l(y){e=he(y,"DIV",{class:!0});var v=G(e);t=he(v,"H3",{class:!0});var x=G(t);n=Oe(x,"Loaded table"),x.forEach(R),i=Ie(v),Ae(r.$$.fragment,v),v.forEach(R),a=Ie(y),o=he(y,"UL",{});var M=G(o);for(let w=0;w<m.length;w+=1)m[w].l(M);M.forEach(R),l=Ie(y),Ae(c.$$.fragment,y),h=Ie(y),g&&g.l(y),f=Pt(),this.h()},h(){b(t,"class","font-semibold text-lg"),b(e,"class","flex justify-between items-center")},m(y,v){ae(y,e,v),k(e,t),k(t,n),k(e,i),Ce(r,e,null),ae(y,a,v),ae(y,o,v);for(let x=0;x<m.length;x+=1)m[x]&&m[x].m(o,null);ae(y,l,v),Ce(c,y,v),ae(y,h,v),g&&g.m(y,v),ae(y,f,v),d=!0},p(y,v){const x={};if(v&16777216&&(x.$$scope={dirty:v,ctx:y}),r.$set(x),v&16){p=Object.entries(y[4].tables);let w;for(w=0;w<p.length;w+=1){const T=yd(y,p,w);m[w]?(m[w].p(T,v),W(m[w],1)):(m[w]=Md(T),m[w].c(),W(m[w],1),m[w].m(o,null))}for(wt(),w=p.length;w<m.length;w+=1)_(w);Et()}const M={};v&16777216&&(M.$$scope={dirty:v,ctx:y}),c.$set(M),v&16&&(u=Object.keys(y[4].tables).length>0),u?g?(g.p(y,v),v&16&&W(g,1)):(g=bd(y),g.c(),W(g,1),g.m(f.parentNode,f)):g&&(wt(),K(g,1,1,()=>{g=null}),Et())},i(y){if(!d){W(r.$$.fragment,y);for(let v=0;v<p.length;v+=1)W(m[v]);W(c.$$.fragment,y),W(g),d=!0}},o(y){K(r.$$.fragment,y),m=m.filter(Boolean);for(let v=0;v<m.length;v+=1)K(m[v]);K(c.$$.fragment,y),K(g),d=!1},d(y){y&&R(e),Re(r),y&&R(a),y&&R(o),kn(m,y),y&&R(l),Re(c,y),y&&R(h),g&&g.d(y),y&&R(f)}}}function eT(s){let e,t,n,i,r,a,o,l,c;n=new nn({props:{size:mn.LG,color:Dt.SECONDARY,$$slots:{default:[kE]},$$scope:{ctx:s}}}),n.$on("click",go.toggleThemeMode),r=new $h({props:{size:ha.large,$$slots:{title:[HE],trigger:[VE],default:[FE]},$$scope:{ctx:s}}}),o=new nn({props:{size:mn.LG,color:s[2]?Dt.PRIMARY:Dt.SECONDARY,$$slots:{default:[GE]},$$scope:{ctx:s}}}),o.$on("click",s[8]);let h=s[2]&&xd(s);return{c(){e=ce("div"),t=ce("div"),Te(n.$$.fragment),i=Le(),Te(r.$$.fragment),a=Le(),Te(o.$$.fragment),l=Le(),h&&h.c(),this.h()},l(u){e=he(u,"DIV",{class:!0});var f=G(e);t=he(f,"DIV",{class:!0});var d=G(t);Ae(n.$$.fragment,d),i=Ie(d),Ae(r.$$.fragment,d),a=Ie(d),Ae(o.$$.fragment,d),d.forEach(R),l=Ie(f),h&&h.l(f),f.forEach(R),this.h()},h(){b(t,"class","mb-4 gap-3 flex justify-end mr-1"),b(e,"class","absolute right-4 pt-4 t-0 top-0 w-96 max-h-full overflow-y-auto")},m(u,f){ae(u,e,f),k(e,t),Ce(n,t,null),k(t,i),Ce(r,t,null),k(t,a),Ce(o,t,null),k(e,l),h&&h.m(e,null),c=!0},p(u,[f]){const d={};f&16777224&&(d.$$scope={dirty:f,ctx:u}),n.$set(d);const p={};f&16777216&&(p.$$scope={dirty:f,ctx:u}),r.$set(p);const m={};f&4&&(m.color=u[2]?Dt.PRIMARY:Dt.SECONDARY),f&16777216&&(m.$$scope={dirty:f,ctx:u}),o.$set(m),u[2]?h?(h.p(u,f),f&4&&W(h,1)):(h=xd(u),h.c(),W(h,1),h.m(e,null)):h&&(wt(),K(h,1,1,()=>{h=null}),Et())},i(u){c||(W(n.$$.fragment,u),W(r.$$.fragment,u),W(o.$$.fragment,u),W(h),c=!0)},o(u){K(n.$$.fragment,u),K(r.$$.fragment,u),K(o.$$.fragment,u),K(h),c=!1},d(u){u&&R(e),Re(n),Re(r),Re(o),h&&h.d()}}}function tT(s,e,t){let n,i,r,a,o=Ze,l=()=>(o(),o=Og(c,g=>t(5,a=g)),c);Kn(s,Yn,g=>t(0,n=g)),Kn(s,go,g=>t(3,i=g)),Kn(s,Ur,g=>t(4,r=g)),s.$$.on_destroy.push(()=>o());let c,h=!0;Bn(async()=>{});function u(g){const{buildInTables:y,externalTables:v}=g.detail;y&&Yn.selectBuildInTables(y.dataset,y.paths.map(x=>x.value)),v&&v.fileList&&Yn.selectTablesFromFiles(v.fileList),v&&v.url&&Yn.selectTableFromURL(v.url)}function f(g){Yn.selectDataset(g.detail)}function d(){t(2,h=!h)}const p=g=>Yn.removeTable(g),m=(g,y)=>{u(y),g.close()},_=g=>Yn.selectGraphType(g);return s.$$.update=()=>{s.$$.dirty&1&&n.graphOptions&&l(t(1,c=n.graphOptions.optionsStore))},[n,c,h,i,r,a,u,f,d,p,m,_]}class nT extends Mt{constructor(e){super(),bt(this,e,tT,eT,St,{})}}function iT(s){throw new Error('Could not dynamically require "'+s+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var Yc={exports:{}};const sT=zw(Dw);(function(s,e){(function(){var t=this,n=typeof iT<"u",i=t.THREE||n&&sT;if(!i)throw new Error("MeshLine requires three.js");class r extends i.BufferGeometry{constructor(){super(),this.isMeshLine=!0,this.type="MeshLine",this.positions=[],this.previous=[],this.next=[],this.side=[],this.width=[],this.indices_array=[],this.uvs=[],this.counters=[],this._points=[],this._geom=null,this.widthCallback=null,this.matrixWorld=new i.Matrix4,Object.defineProperties(this,{geometry:{enumerable:!0,get:function(){return this}},geom:{enumerable:!0,get:function(){return this._geom},set:function(h){this.setGeometry(h,this.widthCallback)}},points:{enumerable:!0,get:function(){return this._points},set:function(h){this.setPoints(h,this.widthCallback)}}})}}r.prototype.setMatrixWorld=function(c){this.matrixWorld=c},r.prototype.setGeometry=function(c,h){this._geometry=c,this.setPoints(c.getAttribute("position").array,h)},r.prototype.setPoints=function(c,h){if(!(c instanceof Float32Array)&&!(c instanceof Array)){console.error("ERROR: The BufferArray of points is not instancied correctly.");return}if(this._points=c,this.widthCallback=h,this.positions=[],this.counters=[],c.length&&c[0]instanceof i.Vector3)for(var u=0;u<c.length;u++){var f=c[u],d=u/c.length;this.positions.push(f.x,f.y,f.z),this.positions.push(f.x,f.y,f.z),this.counters.push(d),this.counters.push(d)}else for(var u=0;u<c.length;u+=3){var d=u/c.length;this.positions.push(c[u],c[u+1],c[u+2]),this.positions.push(c[u],c[u+1],c[u+2]),this.counters.push(d),this.counters.push(d)}this.process()};function a(c,h){var u=new i.Matrix4,f=new i.Ray,d=new i.Sphere,p=new i.Vector3,m=this.geometry;if(m.boundingSphere||m.computeBoundingSphere(),d.copy(m.boundingSphere),d.applyMatrix4(this.matrixWorld),c.ray.intersectSphere(d,p)!==!1){u.copy(this.matrixWorld).invert(),f.copy(c.ray).applyMatrix4(u);var _=new i.Vector3,g=new i.Vector3,y=new i.Vector3,v=this instanceof i.LineSegments?2:1,x=m.index,M=m.attributes;if(x!==null)for(var w=x.array,T=M.position.array,I=M.width.array,S=0,C=w.length-1;S<C;S+=v){var V=w[S],X=w[S+1];_.fromArray(T,V*3),g.fromArray(T,X*3);var F=I[Math.floor(S/3)]!==void 0?I[Math.floor(S/3)]:1,B=c.params.Line.threshold+this.material.lineWidth*F/2,N=B*B,Y=f.distanceSqToSegment(_,g,p,y);if(!(Y>N)){p.applyMatrix4(this.matrixWorld);var O=c.ray.origin.distanceTo(p);O<c.near||O>c.far||(h.push({distance:O,point:y.clone().applyMatrix4(this.matrixWorld),index:S,face:null,faceIndex:null,object:this}),S=C)}}}}r.prototype.raycast=a,r.prototype.compareV3=function(c,h){var u=c*6,f=h*6;return this.positions[u]===this.positions[f]&&this.positions[u+1]===this.positions[f+1]&&this.positions[u+2]===this.positions[f+2]},r.prototype.copyV3=function(c){var h=c*6;return[this.positions[h],this.positions[h+1],this.positions[h+2]]},r.prototype.process=function(){var c=this.positions.length/6;this.previous=[],this.next=[],this.side=[],this.width=[],this.indices_array=[],this.uvs=[];var h,u;this.compareV3(0,c-1)?u=this.copyV3(c-2):u=this.copyV3(0),this.previous.push(u[0],u[1],u[2]),this.previous.push(u[0],u[1],u[2]);for(var f=0;f<c;f++){if(this.side.push(1),this.side.push(-1),this.widthCallback?h=this.widthCallback(f/(c-1)):h=1,this.width.push(h),this.width.push(h),this.uvs.push(f/(c-1),0),this.uvs.push(f/(c-1),1),f<c-1){u=this.copyV3(f),this.previous.push(u[0],u[1],u[2]),this.previous.push(u[0],u[1],u[2]);var d=f*2;this.indices_array.push(d,d+1,d+2),this.indices_array.push(d+2,d+1,d+3)}f>0&&(u=this.copyV3(f),this.next.push(u[0],u[1],u[2]),this.next.push(u[0],u[1],u[2]))}this.compareV3(c-1,0)?u=this.copyV3(1):u=this.copyV3(c-1),this.next.push(u[0],u[1],u[2]),this.next.push(u[0],u[1],u[2]),!this._attributes||this._attributes.position.count!==this.positions.length?this._attributes={position:new i.BufferAttribute(new Float32Array(this.positions),3),previous:new i.BufferAttribute(new Float32Array(this.previous),3),next:new i.BufferAttribute(new Float32Array(this.next),3),side:new i.BufferAttribute(new Float32Array(this.side),1),width:new i.BufferAttribute(new Float32Array(this.width),1),uv:new i.BufferAttribute(new Float32Array(this.uvs),2),index:new i.BufferAttribute(new Uint16Array(this.indices_array),1),counters:new i.BufferAttribute(new Float32Array(this.counters),1)}:(this._attributes.position.copyArray(new Float32Array(this.positions)),this._attributes.position.needsUpdate=!0,this._attributes.previous.copyArray(new Float32Array(this.previous)),this._attributes.previous.needsUpdate=!0,this._attributes.next.copyArray(new Float32Array(this.next)),this._attributes.next.needsUpdate=!0,this._attributes.side.copyArray(new Float32Array(this.side)),this._attributes.side.needsUpdate=!0,this._attributes.width.copyArray(new Float32Array(this.width)),this._attributes.width.needsUpdate=!0,this._attributes.uv.copyArray(new Float32Array(this.uvs)),this._attributes.uv.needsUpdate=!0,this._attributes.index.copyArray(new Uint16Array(this.indices_array)),this._attributes.index.needsUpdate=!0),this.setAttribute("position",this._attributes.position),this.setAttribute("previous",this._attributes.previous),this.setAttribute("next",this._attributes.next),this.setAttribute("side",this._attributes.side),this.setAttribute("width",this._attributes.width),this.setAttribute("uv",this._attributes.uv),this.setAttribute("counters",this._attributes.counters),this.setIndex(this._attributes.index),this.computeBoundingSphere(),this.computeBoundingBox()};function o(c,h,u,f,d){var p;if(c=c.subarray||c.slice?c:c.buffer,u=u.subarray||u.slice?u:u.buffer,c=h?c.subarray?c.subarray(h,d&&h+d):c.slice(h,d&&h+d):c,u.set)u.set(c,f);else for(p=0;p<c.length;p++)u[p+f]=c[p];return u}r.prototype.advance=function(c){var h=this._attributes.position.array,u=this._attributes.previous.array,f=this._attributes.next.array,d=h.length;o(h,0,u,0,d),o(h,6,h,0,d-6),h[d-6]=c.x,h[d-5]=c.y,h[d-4]=c.z,h[d-3]=c.x,h[d-2]=c.y,h[d-1]=c.z,o(h,6,f,0,d-6),f[d-6]=c.x,f[d-5]=c.y,f[d-4]=c.z,f[d-3]=c.x,f[d-2]=c.y,f[d-1]=c.z,this._attributes.position.needsUpdate=!0,this._attributes.previous.needsUpdate=!0,this._attributes.next.needsUpdate=!0},i.ShaderChunk.meshline_vert=["",i.ShaderChunk.logdepthbuf_pars_vertex,i.ShaderChunk.fog_pars_vertex,"","attribute vec3 previous;","attribute vec3 next;","attribute float side;","attribute float width;","attribute float counters;","","uniform vec2 resolution;","uniform float lineWidth;","uniform vec3 color;","uniform float opacity;","uniform float sizeAttenuation;","","varying vec2 vUV;","varying vec4 vColor;","varying float vCounters;","","vec2 fix( vec4 i, float aspect ) {","","    vec2 res = i.xy / i.w;","    res.x *= aspect;","	 vCounters = counters;","    return res;","","}","","void main() {","","    float aspect = resolution.x / resolution.y;","","    vColor = vec4( color, opacity );","    vUV = uv;","","    mat4 m = projectionMatrix * modelViewMatrix;","    vec4 finalPosition = m * vec4( position, 1.0 );","    vec4 prevPos = m * vec4( previous, 1.0 );","    vec4 nextPos = m * vec4( next, 1.0 );","","    vec2 currentP = fix( finalPosition, aspect );","    vec2 prevP = fix( prevPos, aspect );","    vec2 nextP = fix( nextPos, aspect );","","    float w = lineWidth * width;","","    vec2 dir;","    if( nextP == currentP ) dir = normalize( currentP - prevP );","    else if( prevP == currentP ) dir = normalize( nextP - currentP );","    else {","        vec2 dir1 = normalize( currentP - prevP );","        vec2 dir2 = normalize( nextP - currentP );","        dir = normalize( dir1 + dir2 );","","        vec2 perp = vec2( -dir1.y, dir1.x );","        vec2 miter = vec2( -dir.y, dir.x );","        //w = clamp( w / dot( miter, perp ), 0., 4. * lineWidth * width );","","    }","","    //vec2 normal = ( cross( vec3( dir, 0. ), vec3( 0., 0., 1. ) ) ).xy;","    vec4 normal = vec4( -dir.y, dir.x, 0., 1. );","    normal.xy *= .5 * w;","    normal *= projectionMatrix;","    if( sizeAttenuation == 0. ) {","        normal.xy *= finalPosition.w;","        normal.xy /= ( vec4( resolution, 0., 1. ) * projectionMatrix ).xy;","    }","","    finalPosition.xy += normal.xy * side;","","    gl_Position = finalPosition;","",i.ShaderChunk.logdepthbuf_vertex,i.ShaderChunk.fog_vertex&&"    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",i.ShaderChunk.fog_vertex,"}"].join(`
`),i.ShaderChunk.meshline_frag=["",i.ShaderChunk.fog_pars_fragment,i.ShaderChunk.logdepthbuf_pars_fragment,"","uniform sampler2D map;","uniform sampler2D alphaMap;","uniform float useMap;","uniform float useAlphaMap;","uniform float useDash;","uniform float dashArray;","uniform float dashOffset;","uniform float dashRatio;","uniform float visibility;","uniform float alphaTest;","uniform vec2 repeat;","","varying vec2 vUV;","varying vec4 vColor;","varying float vCounters;","","void main() {","",i.ShaderChunk.logdepthbuf_fragment,"","    vec4 c = vColor;","    if( useMap == 1. ) c *= texture2D( map, vUV * repeat );","    if( useAlphaMap == 1. ) c.a *= texture2D( alphaMap, vUV * repeat ).a;","    if( c.a < alphaTest ) discard;","    if( useDash == 1. ){","        c.a *= ceil(mod(vCounters + dashOffset, dashArray) - (dashArray * dashRatio));","    }","    gl_FragColor = c;","    gl_FragColor.a *= step(vCounters, visibility);","",i.ShaderChunk.fog_fragment,"}"].join(`
`);class l extends i.ShaderMaterial{constructor(h){super({uniforms:Object.assign({},i.UniformsLib.fog,{lineWidth:{value:1},map:{value:null},useMap:{value:0},alphaMap:{value:null},useAlphaMap:{value:0},color:{value:new i.Color(16777215)},opacity:{value:1},resolution:{value:new i.Vector2(1,1)},sizeAttenuation:{value:1},dashArray:{value:0},dashOffset:{value:0},dashRatio:{value:.5},useDash:{value:0},visibility:{value:1},alphaTest:{value:0},repeat:{value:new i.Vector2(1,1)}}),vertexShader:i.ShaderChunk.meshline_vert,fragmentShader:i.ShaderChunk.meshline_frag}),this.isMeshLineMaterial=!0,this.type="MeshLineMaterial",Object.defineProperties(this,{lineWidth:{enumerable:!0,get:function(){return this.uniforms.lineWidth.value},set:function(u){this.uniforms.lineWidth.value=u}},map:{enumerable:!0,get:function(){return this.uniforms.map.value},set:function(u){this.uniforms.map.value=u}},useMap:{enumerable:!0,get:function(){return this.uniforms.useMap.value},set:function(u){this.uniforms.useMap.value=u}},alphaMap:{enumerable:!0,get:function(){return this.uniforms.alphaMap.value},set:function(u){this.uniforms.alphaMap.value=u}},useAlphaMap:{enumerable:!0,get:function(){return this.uniforms.useAlphaMap.value},set:function(u){this.uniforms.useAlphaMap.value=u}},color:{enumerable:!0,get:function(){return this.uniforms.color.value},set:function(u){this.uniforms.color.value=u}},opacity:{enumerable:!0,get:function(){return this.uniforms.opacity.value},set:function(u){this.uniforms.opacity.value=u}},resolution:{enumerable:!0,get:function(){return this.uniforms.resolution.value},set:function(u){this.uniforms.resolution.value.copy(u)}},sizeAttenuation:{enumerable:!0,get:function(){return this.uniforms.sizeAttenuation.value},set:function(u){this.uniforms.sizeAttenuation.value=u}},dashArray:{enumerable:!0,get:function(){return this.uniforms.dashArray.value},set:function(u){this.uniforms.dashArray.value=u,this.useDash=u!==0?1:0}},dashOffset:{enumerable:!0,get:function(){return this.uniforms.dashOffset.value},set:function(u){this.uniforms.dashOffset.value=u}},dashRatio:{enumerable:!0,get:function(){return this.uniforms.dashRatio.value},set:function(u){this.uniforms.dashRatio.value=u}},useDash:{enumerable:!0,get:function(){return this.uniforms.useDash.value},set:function(u){this.uniforms.useDash.value=u}},visibility:{enumerable:!0,get:function(){return this.uniforms.visibility.value},set:function(u){this.uniforms.visibility.value=u}},alphaTest:{enumerable:!0,get:function(){return this.uniforms.alphaTest.value},set:function(u){this.uniforms.alphaTest.value=u}},repeat:{enumerable:!0,get:function(){return this.uniforms.repeat.value},set:function(u){this.uniforms.repeat.value.copy(u)}}}),this.setValues(h)}}l.prototype.copy=function(c){return i.ShaderMaterial.prototype.copy.call(this,c),this.lineWidth=c.lineWidth,this.map=c.map,this.useMap=c.useMap,this.alphaMap=c.alphaMap,this.useAlphaMap=c.useAlphaMap,this.color.copy(c.color),this.opacity=c.opacity,this.resolution.copy(c.resolution),this.sizeAttenuation=c.sizeAttenuation,this.dashArray.copy(c.dashArray),this.dashOffset.copy(c.dashOffset),this.dashRatio.copy(c.dashRatio),this.useDash=c.useDash,this.visibility=c.visibility,this.alphaTest=c.alphaTest,this.repeat.copy(c.repeat),this},s.exports&&(e=s.exports={MeshLine:r,MeshLineMaterial:l,MeshLineRaycast:a}),e.MeshLine=r,e.MeshLineMaterial=l,e.MeshLineRaycast=a}).call(yg)})(Yc,Yc.exports);var Lr=Yc.exports;class Ad extends Om{constructor(t,n){const i=document.createElement("canvas");i.width=t.length*n.fontSize,i.height=n.fontSize*n.fontLineHeight;const r=i.getContext("2d");if(!r)throw new Error("Failed to create canvas context");r.font=`${n.fontSize}px ${n.font}`,r.fillStyle=new be(n.color).getStyle(),r.textAlign="center",r.textBaseline="middle";const a=i.width,o=i.height,l=a/2,c=o/2;r.fillText(t,l,c);super(i);Ue(this,"canvas");Ue(this,"context");this.canvas=i,this.context=r}dispose(){var t;(t=this.canvas)==null||t.remove(),super.dispose()}}var mt=(s=>(s.X="x",s.Y="y",s.Z="z",s))(mt||{});const fo={color:13421772,font:"Courier New",fontSize:100,fontLineHeight:1.2,text:""},Ql={lineWidth:2,lineColor:13421772,label:fo},to={size:new E(1,1,1),labelScale:.1,origin:new E(0,0,0),x:{...Ql,textOptions:{...fo},labelText:"X",segments:10},y:{...Ql,textOptions:{...fo},labelText:"X"},z:{...Ql,textOptions:{...fo},labelText:"Z"}},wi=class wi extends $t{constructor(t,n){super();Ue(this,"options");Ue(this,"direction");Ue(this,"axis");Ue(this,"axisMesh");Ue(this,"label");Ue(this,"segmentLines",new $t);Ue(this,"segmentLabels",new $t);Ue(this,"onBeforeRender",(t,n,i,r,a,o)=>{const l=new E;i.getWorldDirection(l);const h=this.direction.clone().transformDirection(this.matrixWorld),u=l.dot(h),f=Math.max(1-Math.pow(Math.abs(u),2),0);this.segmentLabels.children.forEach(d=>d.material.opacity=f)});switch(this.axis=t,this.options=n,t){case"x":this.direction=new E(1,0,0);break;case"y":this.direction=new E(0,1,0);break;case"z":this.direction=new E(0,0,1);break}this.createAxis(),this.renderAxisSegments()}get fontAspectRation(){return wi.fontAspectRation}createAxis(){const t=new st().setFromPoints([new E(0,0,0),this.direction]),n=new Lr.MeshLine;n.setGeometry(t);const i=new Lr.MeshLineMaterial({color:this.options.lineColor,lineWidth:this.options.lineWidth}),r=new Rt(n.geometry,i);this.axisMesh=r,this.add(r);const a=`${this.options.labelText} [${this.axis}]`,o=new $r({transparent:!0,depthWrite:!1,map:new Ad(a,this.options.textOptions)}),l=new wo(o),c=this.options.labelScale??wi.defaultLabelSize,h=this.direction.clone().multiplyScalar(.5);l.position.set(h.x===0?-c:h.x,h.y===0?-c:h.y,h.z===0?-c:h.z);const u=a.length*this.fontAspectRation;this.axis==="y"&&(l.position.x=-.1-u*.05),l.scale.set(c*u,c,c),this.label=l,this.add(l)}renderSegmentLabel(t,n){const i=t.length*this.fontAspectRation,r=this.options.segments,a=new wo(new $r({transparent:!0,depthWrite:!1,map:new Ad(t,{...this.options.textOptions,fontSize:this.options.textOptions.fontSize*.5})})),o=this.direction.clone().multiplyScalar(n/r),l=this.options.labelScale??wi.defaultSegmentSize,c=4/r,h=(this.axis==="y"?.7:.2)+.1*c;return a.position.set(o.x===0?-h*l:o.x,o.y===0?-h*l:o.y,o.z===0?-h*l:o.z),a.scale.set(l*i,l,l).multiplyScalar(c),a}labelFormatter(t){if(!this.options.segments)return"";if(this.options.labelForSegment){const n=this.options.labelForSegment(this.axis,t,this.options.segments);if(n!==void 0)return n}return(t/this.options.segments).toPrecision(2).toString()}renderAxisSegments(){if(!this.options.segments)return;this.segmentLabels.clear(),this.segmentLines.clear();const t=new st().setFromPoints([new E(0,0,0),new E(1,0,0)]);for(let n=0;n<=this.options.segments;n++){const i=new Lr.MeshLineMaterial({color:this.options.lineColor,lineWidth:this.options.lineWidth}),r=new Rt(t,i);r.position.set(0,0,0),this.segmentLines.add(r);const a=this.labelFormatter(n);if(a===null)continue;const o=this.renderSegmentLabel(a,n);this.segmentLabels.add(o)}this.add(this.segmentLabels),this.add(this.segmentLines)}};Ue(wi,"defaultSegmentSize",5e-4),Ue(wi,"defaultLabelSize",.001),Ue(wi,"fontAspectRation",3/4);let qc=wi;class rT extends vt{constructor(t={}){super();Ue(this,"options");Ue(this,"mapAxis",new Map);Ue(this,"onBeforeRender",(t,n,i,r,a,o)=>{this.mapAxis.forEach(l=>l.onBeforeRender(t,n,i,r,a,o))});const n={...to};for(const i of["x","y","z"]){const r={...to[i],labelForSegment:t.labelForSegment??to.labelForSegment,labelScale:t.labelScale??to.labelScale,...t[i]??{}};n[i]=r;const a=new qc(i,r);this.mapAxis.set(i,a),this.add(a)}this.options=n}setup(){this.clear()}destroy(){this.removeFromParent(),this.remove(),this.clear()}}const Cd=["#2B2B2B","#3E3E3E","#515151","#646464","#777777","#8A8A8A","#9D9D9D","#B0B0B0","#C3C3C3","#D6D6D6"];class aT{constructor(e){Ue(this,"scene");Ue(this,"orientationCube");Ue(this,"orientationEdges");Ue(this,"renderer");Ue(this,"camera");Ue(this,"trackedCamera");Ue(this,"raycaster",new Wh);Ue(this,"stopped",!1);Ue(this,"cubeSize",20);Ue(this,"bevelSize",.1);Ue(this,"selectionColor",new be(Er.RdYlBu[4][1]));Ue(this,"color",new be(Cd[9]));Ue(this,"borderColor",new be(Cd[3]));Ue(this,"mousePosition",new ne(0,0));Ue(this,"mouseClientPosition",new ne(0,0));Ue(this,"mouseInside",!1);Ue(this,"mouseDownPos",{x:0,y:0});Ue(this,"mouseUpPos",{x:0,y:0});Ue(this,"controls");Ue(this,"selection");const t=e.getBoundingClientRect();this.camera=new Oi(t.width/-8,t.width/8,t.height/8,t.height/-8,-t.width*4,t.width*4),this.camera.position.z=Math.min(t.width,t.height),this.setupEvents(e),this.setupScene(),this.renderCube(),this.renderCubeEdges(),this.renderer=new Ho({antialias:!0,alpha:!0}),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setClearColor(0,0),this.renderer.setSize(t.width,t.height),e.appendChild(this.renderer.domElement),this.setupControls(),this.startAnimationLoop()}destroy(){this.stopped=!0}onCanvasHover(e){const t=this.renderer.domElement.getBoundingClientRect();this.mouseClientPosition.x=e.clientX-t.left,this.mouseClientPosition.y=e.clientY-t.top,this.mousePosition.x=this.mouseClientPosition.x/t.width*2-1,this.mousePosition.y=-(this.mouseClientPosition.y/t.height)*2+1}onCanvasClick(e){this.lookAtSelection()}setupControls(){this.controls=new gg(this.camera,this.renderer.domElement),this.controls.rotateSpeed=1,this.controls.zoomSpeed=1,this.controls.panSpeed=1,this.controls.enableZoom=!1,this.controls.enablePan=!1,this.controls.enableDamping=!0,this.controls.dampingFactor=.1}setupEvents(e){e.addEventListener("mousemove",this.onCanvasHover.bind(this)),e.addEventListener("mousedown",t=>{this.mouseDownPos.x=t.clientX,this.mouseDownPos.y=t.clientY}),e.addEventListener("mouseup",t=>{this.mouseUpPos.x=t.clientX,this.mouseUpPos.y=t.clientY,this.mouseDownPos.x===this.mouseUpPos.x&&this.mouseDownPos.y===this.mouseUpPos.y&&this.onCanvasClick(t)}),e.addEventListener("mouseenter",()=>{this.mouseInside=!0}),e.addEventListener("mouseleave",()=>{this.mouseInside=!1})}setupScene(){this.scene=new Xo}renderCube(){const e=new Wi(1,1,1),t=[new Qt({color:this.color}),new Qt({color:this.color}),new Qt({color:this.color}),new Qt({color:this.color}),new Qt({color:this.color}),new Qt({color:this.color})];this.orientationCube=new Rt(e,t),this.orientationCube.scale.set(this.cubeSize,this.cubeSize,this.cubeSize),this.scene.add(this.orientationCube)}renderCubeEdges(){const e=new Li;e.moveTo(0,0),e.lineTo(this.bevelSize,0),e.lineTo(0,this.bevelSize),e.lineTo(0,0);const t={steps:1,depth:1,bevelEnabled:!1},n=[{pos:[.5,.5,.5],rot:[0,-Math.PI/2,0]},{pos:[-.5,.5,-.5],rot:[0,Math.PI/2,0]},{pos:[-.5,.5,-.5],rot:[0,0,Math.PI/2]},{pos:[.5,.5,-.5],rot:[0,0,0]},{pos:[.5,-.5,.5],rot:[0,-Math.PI/2,-Math.PI/2]},{pos:[-.5,-.5,-.5],rot:[0,Math.PI/2,-Math.PI/2]},{pos:[-.5,-.5,-.5],rot:[0,0,Math.PI]},{pos:[.5,-.5,-.5],rot:[0,0,-Math.PI/2]},{pos:[.5,.5,.5],rot:[Math.PI/2,0,0]},{pos:[.5,-.5,-.5],rot:[-Math.PI/2,0,0]},{pos:[-.5,-.5,-.5],rot:[-Math.PI/2,0,Math.PI/2]},{pos:[-.5,-.5,.5],rot:[-Math.PI/2,0,Math.PI]}],i=new $t;n.forEach((r,a)=>{const o=new aa(e,t),l=new Qt({color:this.color}),c=new Rt(o,l);c.position.set(...r.pos).multiplyScalar(this.cubeSize),c.scale.multiplyScalar(this.cubeSize),c.rotation.set(...r.rot),c.userData.index=a,i.add(c);const h=new Ah(o),u=new Vn(h,new cn({color:this.borderColor}));u.position.copy(c.position),u.scale.copy(c.scale),u.rotation.copy(c.rotation),i.add(u)}),this.orientationEdges=i,this.scene.add(this.orientationEdges)}lookAtFaceDirection(e){console.log("looking at side",e);let t=null;switch(e){case 0:t=new E(1,0,0);break;case 1:t=new E(-1,0,0);break;case 2:t=new E(0,1,0);break;case 3:t=new E(0,-1,0);break;case 4:t=new E(0,0,1);break;case 5:t=new E(0,0,-1);break}return t}lookAtEdgeDirection(e){switch(console.log("looking at edge",e),e){case 0:return new E(0,1,1);case 1:return new E(0,1,-1);case 2:return new E(-1,1,0);case 3:return new E(1,1,0);case 4:return new E(0,-1,1);case 5:return new E(0,-1,-1);case 6:return new E(-1,-1);case 7:return new E(1,-1)}return null}lookAtSelection(){if(!this.selection)return;let e=null;switch(this.selection.type){case 0:e=this.lookAtFaceDirection(this.selection.index);break;case 1:e=this.lookAtEdgeDirection(this.selection.index);break;case 2:console.error("Not implemented")}if(e===null)return;const t=this.camera.position.clone(),n=e.multiplyScalar(300),i=t.distanceTo(n),r=Math.min(200,i*2);new X_(t).to(n,r).easing(js.Cubic.In).onUpdate(()=>{this.camera.position.set(t.x,t.y,t.z)}).start()}handleEdgeSelection(){var i;if(!this.orientationEdges)return!1;const e=this.raycaster.intersectObjects(this.orientationEdges.children);if(e.length===0)return!1;const t=(i=e.find(r=>r.object.userData.index!==void 0))==null?void 0:i.object;if(!t)return!1;const n=t.userData.index;return this.selection&&this.selection.type===0&&n===this.selection.index?!0:(this.clearSelection(),n===void 0?!1:(this.selection={type:1,index:n},!0))}handleSideSelection(){if(!this.orientationEdges||!this.orientationCube)return!1;const e=this.raycaster.intersectObject(this.orientationCube);if(e.length===0)return!1;const t=e[0].faceIndex;if(t===void 0)return!1;const n=Math.floor(t/2);return this.selection&&this.selection.type===0&&this.selection.index===n||(this.clearSelection(),this.selection={type:0,index:n}),!0}clearSelection(){this.applyColorToSelectedObject(this.color),this.selection=void 0}applyColorToSelectedObject(e){if(this.selection)switch(this.selection.type){case 0:{if(!this.orientationCube)break;const t=this.orientationCube.material[this.selection.index];t.color=e,t.needsUpdate=!0;break}case 1:{if(!this.orientationEdges)break;const t=this.orientationEdges.children.find(n=>{var i;return n.userData.index===((i=this.selection)==null?void 0:i.index)});if(!t)break;t.material.color=e,t.material.needsUpdate=!0;break}case 2:{console.error("Not implemented yet");break}}}renderSelection(){this.applyColorToSelectedObject(this.selectionColor)}updateSelection(){if(!this.mouseInside){this.clearSelection();return}if(this.handleEdgeSelection()){this.renderSelection();return}if(this.handleSideSelection()){this.renderSelection();return}this.clearSelection()}startAnimationLoop(){this.stopped||(this.trackedCamera&&(this.controls.update(),this.raycaster.setFromCamera(this.mousePosition,this.camera),this.updateSelection(),this.renderer.render(this.scene,this.camera),this.trackedCamera.position.copy(this.camera.position),this.trackedCamera.quaternion.copy(this.camera.quaternion)),requestAnimationFrame(this.startAnimationLoop.bind(this)))}setCurrentCamera(e){this.trackedCamera=e}}function oT(s){let e;return{c(){e=ce("div"),this.h()},l(t){e=he(t,"DIV",{class:!0}),G(e).forEach(R),this.h()},h(){b(e,"class","minimap absolute isolate z-10 right-0 bottom-0 w-[190px] h-[190px]")},m(t,n){ae(t,e,n),s[1](e)},p:Ze,i:Ze,o:Ze,d(t){t&&R(e),s[1](null)}}}function lT(s,e,t){const n=hl();let i,r;const a=()=>{const{camera:l}=n.getValues();i==null||i.setCurrentCamera(l)};Bn(()=>{console.log("Setting up minimap renderer"),i=new aT(r),a()}),Fi(()=>{i==null||i.destroy()});function o(l){_i[l?"unshift":"push"](()=>{r=l,t(0,r)})}return[r,o]}class cT extends Mt{constructor(e){super(),bt(this,e,lT,oT,St,{})}}class hT extends vt{constructor(){super(...arguments);Ue(this,"scene");Ue(this,"camera");Ue(this,"renderContainer")}setup(t,n,i){this.scene=n,this.camera=i,this.renderContainer=t;const r=t.getBoundingClientRect(),a=Math.min(r.width,r.height)*.6;this.scale.set(a,a,a),this.position.y=-.5*a}}const Ir=class Ir extends st{constructor(t,n=void 0,i=!1,r=!0,a=!1,o=!1){super();Ue(this,"normalizedData");Ue(this,"previousNormalizedData");Ue(this,"width");Ue(this,"depth");Ue(this,"indexBuffer");Ue(this,"pointBuffer");if(this.drawsSideWalls=a,this.drawsBottom=o,i)this.normalizedData=t,this.previousNormalizedData=n;else{let l=-1/0;t.forEach(c=>{c.forEach(h=>{l=Math.max(l,h)})}),console.log("Max value",l),l!==0?(this.normalizedData=t.map(c=>c.map(h=>h/l)),n&&(this.previousNormalizedData=n.map(c=>c.map(h=>h/l)))):(this.normalizedData=t,this.previousNormalizedData=n)}if(this.depth=this.normalizedData[0].length,this.width=this.normalizedData.length,n&&(n.length!==this.depth||n[0].length!==this.width))throw new Error("Previous data has different dimensions");if(r)for(let l=0;l<this.normalizedData.length;l++)for(let c=0;c<this.normalizedData[l].length;c++){if(l<1||c<1||l>=this.normalizedData.length-1||c>=this.normalizedData[l].length-1)continue;if(this.normalizedData[l][c]===0){const u=this.interpolate(this.normalizedData,l,c);u!==null&&(this.normalizedData[l][c]=u)}}this.computeGeometry()}get buffer(){return this.pointBuffer}get planeDims(){return{width:this.width,depth:this.depth}}get pointsPerPlane(){return this.width*this.depth}get numPolygonsPerPlane(){return(this.width-1)*(this.depth-1)*2}interpolate(t,n,i){if(n<1||i<1||n>=t.length-1||i>=t[n].length-1)return t[n][i];const r=t[n][i];return r!==0?r:t[n-1][i-1]!==0&&t[n+1][i+1]!==0?(t[n-1][i-1]+t[n+1][i+1])/2:t[n-1][i]!==0&&t[n+1][i]!==0?(t[n-1][i]+t[n+1][i])/2:t[n][i-1]!==0&&t[n][i+1]!==0?(t[n][i-1]+t[n][i+1])/2:null}setupBuffers(){const{pointsPerPlane:t,width:n,depth:i}=this,r=t*(this.drawsBottom?2:1)*Ir.pointComponentSize;this.pointBuffer?this.pointBuffer.length!==r&&(delete this.pointBuffer,this.pointBuffer=new Float32Array(r)):this.pointBuffer=new Float32Array(r);const a=this.drawsSideWalls?(n-1+i-1)*2*3*2:0,o=this.numPolygonsPerPlane*3*(this.drawsBottom?2:1),l=a+o;this.indexBuffer?this.indexBuffer.length!==l&&(delete this.indexBuffer,this.indexBuffer=new Uint32Array(l)):this.indexBuffer=new Uint32Array(l)}computeGeometry(){var f;const{normalizedData:t,width:n,depth:i,pointsPerPlane:r}=this;if(this.setupBuffers(),this.pointBuffer===void 0||this.indexBuffer===void 0)throw new Error("Buffers not initialized");const a=this.pointBuffer,o=this.indexBuffer,l=3,c=(n-1)*(i-1)*(this.drawsBottom?2:1),h=this.previousNormalizedData!==void 0,u=c*3;for(let d=0;d<i;d++)for(let p=0;p<n;p++){const m=d*n+p,_=m*l,g=(d*(n-1)+p)*6;a[_]=p/(n-1),a[_+1]=t[d][p],a[_+2]=d/(i-1),this.drawsBottom&&(a[_+r*l]=p/(n-1),a[_+r*l+1]=h?((f=this.previousNormalizedData)==null?void 0:f[d][p])??0:0,a[_+r*l+2]=d/(i-1)),!(d===i-1||p===n-1)&&(o[g]=m+n,o[g+1]=m+1,o[g+2]=m,o[g+3]=m+n,o[g+4]=m+n+1,o[g+5]=m+1,this.drawsBottom&&(o[g+u]=o[g]+r,o[g+u+1]=o[g+1]+r,o[g+u+2]=o[g+2]+r,o[g+u+3]=o[g+3]+r,o[g+u+4]=o[g+4]+r,o[g+u+5]=o[g+5]+r))}if(this.drawsSideWalls){const d=c*3*2;for(let m=0;m<n-1;m++){const _=d+m*6;o[_]=m,o[_+1]=m+1,o[_+2]=r+m,o[_+3]=m+1,o[_+4]=r+m+1,o[_+5]=r+m;const g=d+(n-1+m)*6;o[g]=r*2-n+m,o[g+1]=m+1+r-n,o[g+2]=m+r-n,o[g+3]=r*2-n+m,o[g+4]=r*2-n+m+1,o[g+5]=m+1+r-n}const p=d+(n-1)*6*2;for(let m=0;m<i-1;m++){const _=p+m*6;o[_]=m*n,o[_+1]=(m+1)*n,o[_+2]=r+m*n,o[_+3]=(m+1)*n,o[_+4]=r+(m+1)*n,o[_+5]=r+m*n;const g=p+(i-1+m)*6;o[g]=m*n+n-1,o[g+1]=m*n+n-1+n,o[g+2]=r+m*n+n-1,o[g+3]=m*n+n-1+n,o[g+4]=r+m*n+n-1+n,o[g+5]=r+m*n+n-1}}this.setAttribute("position",new At(a,Ir.pointComponentSize)),this.setIndex(new Oo(o,1)),this.computeVertexNormals()}};Ue(Ir,"pointComponentSize",3);let To=Ir;const Cn=1;class uT extends hT{constructor(){super();Ue(this,"data");Ue(this,"grids");Ue(this,"dataDepth",0);Ue(this,"dataWidth",0);Ue(this,"planeGroup",new $t);Ue(this,"selectionMesh");Ue(this,"selectionMeshX");Ue(this,"selectionMeshZ");Ue(this,"selectionMeshX2");Ue(this,"selectionMeshZ2");Ue(this,"min",0);Ue(this,"max",0);Ue(this,"axisLabelRenderer");Ue(this,"raycaster",new Wh);Ue(this,"axisRenderer");Ue(this,"onBeforeRender",(t,n,i,r,a,o)=>{var d;if((d=this.axisRenderer)==null||d.onBeforeRender(t,n,i,r,a,o),!this.grids)return;const l=new E;i.getWorldDirection(l);const c=new E(0,1,0),h=this.grids.children,u=h.map((p,m)=>[m,p.position.distanceTo(i.position)]).sort(([,p],[,m])=>p-m),f=3;for(let p=0;p<h.length;p++){const[m,_]=u[p],g=h[m],y=g.material;let v=0;if(p>=f){const x=c.clone().transformDirection(g.matrixWorld),M=l.dot(x);v=Math.max(Math.abs(M),0)}Array.isArray(y)?y.forEach(x=>{x.opacity=v,x.transparent=!0,x.needsUpdate=!0}):(y.opacity=v,y.transparent=!0,y.needsUpdate=!0)}});Ue(this,"currentSelection");console.log("Setup complete"),this.raycaster.layers.set(Cn)}get planes(){return this.planeGroup.children}get yAxisNormalizationFactor(){return this.max===0?NaN:1/this.max}onResize(t){console.log("Resizing plane renderer")}destroy(){var t;console.log("Destroying plane renderer"),this.cleanup(),(t=this.scene)==null||t.remove(this)}setAxisLabelRenderer(t){this.axisLabelRenderer=t}setup(t,n,i){super.setup(t,n,i)}renderLine(t,n,i,r=2){const a=new st().setFromPoints([t,n]),o=new Lr.MeshLine;o.setGeometry(a);const l=new Lr.MeshLineMaterial({color:i,lineWidth:r});return new Rt(o.geometry,l)}renderSelectionLines(t,n){var i,r,a,o;(i=this.selectionMeshX)==null||i.removeFromParent(),this.selectionMeshX=void 0,(r=this.selectionMeshZ)==null||r.removeFromParent(),this.selectionMeshZ=void 0,(a=this.selectionMeshX2)==null||a.removeFromParent(),this.selectionMeshX2=void 0,(o=this.selectionMeshZ2)==null||o.removeFromParent(),this.selectionMeshZ2=void 0,!(!t||!n)&&(this.selectionMeshZ=this.renderLine(new E(n.position.x,n.position.y,-.5),n.position.clone(),65280),this.selectionMeshZ2=this.renderLine(new E(n.position.x,n.position.y,-.5),new E(n.position.x,0,-.5),65280),this.selectionMeshX=this.renderLine(new E(-.5,n.position.y,n.position.z),n.position.clone(),16711935),this.selectionMeshX2=this.renderLine(new E(-.5,n.position.y,n.position.z),new E(-.5,0,n.position.z),16711935),this.add(this.selectionMeshX,this.selectionMeshX2,this.selectionMeshZ,this.selectionMeshZ2))}getInfoAtPoint(t){var p,m,_,g,y;if(!this.camera||!this.planeGroup){this.currentSelection=void 0,this.selectionMesh&&(this.selectionMesh.visible=!1),this.renderSelectionLines();return}this.raycaster.setFromCamera(t,this.camera),this.raycaster.layers.set(Cn);const n=this.raycaster.intersectObjects(this.planeGroup.children,!0);if(n.length===0){this.currentSelection=void 0,this.selectionMesh&&(this.renderSelectionLines(),this.selectionMesh.visible=!1);return}const i=n[0],r=i.instanceId,a=i.object;if(this.currentSelection&&this.currentSelection.mesh===a)return this.currentSelection;const o=a.userData.index,l=a.userData.childIndex,c=l?(_=(m=(p=this.data)==null?void 0:p.layers[o])==null?void 0:m.layers)==null?void 0:_[l]:(g=this.data)==null?void 0:g.layers[o];if(!c){this.currentSelection=void 0;return}const h=r%c.points.length,u=Math.floor(r/c.points[0].length),f=c.points[u][h],d=new E(h/(c.points[0].length-1),f/this.max,u/(c.points.length-1));return this.currentSelection={layer:c,x:h,y:f,z:u,mesh:a,normalizedCoords:d,parent:l?(y=this.data)==null?void 0:y.layers[o]:void 0},this.selectionMesh&&(this.selectionMesh.visible=!0,this.selectionMesh.position.set(-.5+d.x,d.y,-.5+d.z),this.renderSelectionLines(this.currentSelection,this.selectionMesh)),this.currentSelection}renderPlane(t,n,i,r){const a=t.points,o=new To(a,void 0,!0),l=new Ph({color:i,opacity:1,depthWrite:!0,side:vn}),c=new Rt(o,l);return c.userData={index:n,name:t.name,meta:t.meta,childIndex:r},this.dataDepth=o.planeDims.depth,this.dataWidth=o.planeDims.width,c}renderPlaneDots(t,n,i,r=15658751){const a=t.buffer;if(!a)throw new Error("Cannot render layer dots without previously buffered DataPlaneShapeGeometry");const o=new $t,l=.008,c=new Ii(l),h=new Ii(l*2),u=new Rh({color:r,depthWrite:!1,transparent:!0,opacity:.4}),f=new Qt({color:r,depthWrite:!0}),d=new Eo(c,u,t.pointsPerPlane),p=new Eo(h,f,t.pointsPerPlane),m=new nt,_=this.yAxisNormalizationFactor;for(let g=0;g<t.pointsPerPlane;g++){const y=g*To.pointComponentSize;m.setPosition(a[y],a[y+1]*_,a[y+2]),d.setMatrixAt(g,m),p.setMatrixAt(g,m)}return p.visible=!1,p.layers.set(Cn),p.userData={index:n,childIndex:i},o.add(p,d),o}setupSelection(){const t=new Ii(.02),n=new Qt({color:Er.Oranges[4][2],transparent:!0,opacity:.8});this.selectionMesh=new Rt(t,n),this.selectionMesh.visible=!1,this.add(this.selectionMesh)}updateWithData(t,n=Yg){var h;if(!t.layers.length){console.warn("No data provided");return}this.cleanup(),this.planeGroup=new $t,this.setupSelection(),this.data=t;let i=1/0,r=-1/0;const a=new Array(t.layers.length),o=new Array(t.layers.length);for(const[u,f]of t.layers.entries()){r=Math.max(r,f.max),i=Math.min(i,f.min);const d=new be(f.color??n[u%n.length]);a[u]=this.renderPlane(f,u,d),o[u]=((h=f.layers)==null?void 0:h.map((p,m)=>{const _=new be(p.color??n[u%n.length]);return this.renderPlane(p,u,_,m)}))??[]}this.min=i,this.max=r;const l=1/r,c=a.map((u,f)=>{const d=u.geometry;if(!d)throw Error("Plane mesh be initialized before dot geometry can be created");return this.renderPlaneDots(d,f)});for(const[u,f]of a.entries()){const d=new $t,p=new $t;f.scale.y=l,p.add(f),p.add(c[u]),p.userData.hitMesh=c[u].children[0],d.add(p);const m=new $t;o[u].length!==0&&m.add(...o[u].map((_,g)=>{const y=new $t,v=_.geometry;if(!v)throw Error("Plane mesh be initialized before dot geometry can be created");const x=this.renderPlaneDots(v,u,g);return _.scale.y=l,y.add(_),y.add(x),y.visible=!1,x.children[0].layers.disable(Cn),y.userData.hitMesh=x.children[0],y})),d.add(m),this.planeGroup.add(d)}this.planeGroup.position.set(-.5,0,-.5),this.add(this.planeGroup),this.setupGridHelper(),this.setupAxisRenderer()}cleanup(){var t;this.axisRenderer&&(this.axisRenderer.destroy(),this.axisRenderer=void 0),this.planeGroup.clear(),(t=this.grids)==null||t.clear(),this.clear()}toggleLayerVisibility(t){var r;const n=this.planes[t].children[0];n.visible=!n.visible;const i=(r=n.userData)==null?void 0:r.hitMesh;return i&&(n.visible?i.layers.enable(Cn):i.layers.disable(Cn)),n.visible}toggleSublayerVisibility(t,n){var o;const i=this.planes[t].children[1];if(i.children.length<=n)return!1;const r=i.children[n];r.visible=!r.visible;const a=(o=r.userData)==null?void 0:o.hitMesh;return a&&(r.visible?a.layers.enable(Cn):a.layers.disable(Cn)),r.visible}getLayerVisibility(){return this.planes.map(t=>[t.children[0].visible,t.children[1].children.map(n=>n.visible)])}makeSelectionActive(){}showAllLayers(){this.planes.forEach(t=>{t.children[0].visible=!0,t.layers.enable(Cn),t.children[1].children.forEach(n=>{n.visible=!0,n.layers.enable(Cn)})})}hideAllLayers(){this.planes.forEach(t=>{t.children[0].visible=!1,t.layers.disable(Cn),t.children[1].children.forEach(n=>{n.visible=!1,n.layers.disable(Cn)})})}setupAxisRenderer(){var t,n,i,r,a,o;this.axisRenderer=new rT({size:new E(1,1,1),labelScale:.075,labelForSegment:this.axisLabelRenderer,x:{labelText:((n=(t=this.data)==null?void 0:t.labels)==null?void 0:n.x)??"x",segments:this.dataWidth-1},y:{labelText:((r=(i=this.data)==null?void 0:i.labels)==null?void 0:r.y)??"y",segments:10},z:{labelText:((o=(a=this.data)==null?void 0:a.labels)==null?void 0:o.z)??"z",segments:this.dataDepth-1}}),this.axisRenderer.position.set(-.5,0,-.5),this.add(this.axisRenderer)}createGrid(t=1,n=1){const i=this.dataWidth-1,r=this.dataDepth-1,a=i<r,o=a?r:i,l=new mg(t*n,o*n,8947848,8947848);return a?l.scale.x=r/i:l.scale.z=i/r,l}setupGridHelper(){this.grids?this.grids.clear():this.grids=new $t;const t=[[new E(0,1,0),new E(0,1,0)],[new E(0,0,0),new E(0,0,0)],[new E(1,0,0),new E(0,.5,-.5)],[new E(0,0,1),new E(-.5,.5,0)],[new E(-1,0,0),new E(0,.5,.5)],[new E(0,0,1),new E(.5,.5,0)]];for(const[n,i]of t){const r=this.createGrid();r.setRotationFromAxisAngle(n,Math.PI/2),r.position.set(i.x,i.y,i.z),this.grids.add(r)}this.add(this.grids)}}function Rd(s){let e;return{c(){e=ce("p"),this.h()},l(t){e=he(t,"P",{class:!0}),G(e).forEach(R),this.h()},h(){b(e,"class","w-6 h-8 -mt-7 border-b border-l border-slate-300 pointer-events-none dark:border-background-700")},m(t,n){ae(t,e,n)},d(t){t&&R(e)}}}function fT(s){let e,t,n,i,r,a,o,l,c,h,u,f,d,p,m=s[0]&&Rd();const _=s[7].default,g=Bi(_,s,s[6],null);return{c(){e=ce("li"),t=ce("div"),n=ce("div"),m&&m.c(),i=Le(),r=ce("p"),a=Ne(s[1]),o=Le(),l=ce("div"),h=Le(),u=ce("div"),g&&g.c(),this.h()},l(y){e=he(y,"LI",{class:!0});var v=G(e);t=he(v,"DIV",{class:!0});var x=G(t);n=he(x,"DIV",{class:!0});var M=G(n);m&&m.l(M),i=Ie(M),r=he(M,"P",{class:!0});var w=G(r);a=Oe(w,s[1]),w.forEach(R),M.forEach(R),o=Ie(x),l=he(x,"DIV",{class:!0,style:!0}),G(l).forEach(R),x.forEach(R),h=Ie(v),u=he(v,"DIV",{});var T=G(u);g&&g.l(T),T.forEach(R),v.forEach(R),this.h()},h(){b(r,"class","px-1 rounded-md text-sm flex-shrink text-ellipsis overflow-hidden"),Lt(r,"bg-orange-400",s[4]),Lt(r,"text-orange-800",s[4]),b(n,"class","flex gap-1 flex-shrink items-center"),b(l,"class","flex-shrink-0 rounded-full border border-slate-800"),b(l,"style",c=`background-color: ${s[2]}; width: ${s[0]?12:17}px; height: ${s[0]?12:17}px`),b(t,"class","flex gap-2 justify-between items-center cursor-pointer"),Lt(t,"opacity-30",!s[3]),b(e,"class",s[5])},m(y,v){ae(y,e,v),k(e,t),k(t,n),m&&m.m(n,null),k(n,i),k(n,r),k(r,a),k(t,o),k(t,l),k(e,h),k(e,u),g&&g.m(u,null),f=!0,d||(p=qn(t,"click",kg(s[8])),d=!0)},p(y,[v]){y[0]?m||(m=Rd(),m.c(),m.m(n,i)):m&&(m.d(1),m=null),(!f||v&2)&&Ct(a,y[1]),(!f||v&16)&&Lt(r,"bg-orange-400",y[4]),(!f||v&16)&&Lt(r,"text-orange-800",y[4]),(!f||v&5&&c!==(c=`background-color: ${y[2]}; width: ${y[0]?12:17}px; height: ${y[0]?12:17}px`))&&b(l,"style",c),(!f||v&8)&&Lt(t,"opacity-30",!y[3]),g&&g.p&&(!f||v&64)&&zi(g,_,y,y[6],f?Hi(_,y[6],v,null):Vi(y[6]),null),(!f||v&32)&&b(e,"class",y[5])},i(y){f||(W(g,y),f=!0)},o(y){K(g,y),f=!1},d(y){y&&R(e),m&&m.d(),g&&g.d(y),d=!1,p()}}}function dT(s,e,t){let{$$slots:n={},$$scope:i}=e,{nested:r=!1}=e,{name:a}=e,{color:o="#eeeeee"}=e,{visible:l=!0}=e,{selected:c=!1}=e,{class:h=void 0}=e;function u(f){Fg.call(this,s,f)}return s.$$set=f=>{"nested"in f&&t(0,r=f.nested),"name"in f&&t(1,a=f.name),"color"in f&&t(2,o=f.color),"visible"in f&&t(3,l=f.visible),"selected"in f&&t(4,c=f.selected),"class"in f&&t(5,h=f.class),"$$scope"in f&&t(6,i=f.$$scope)},[r,a,o,l,c,h,i,n,u]}class wg extends Mt{constructor(e){super(),bt(this,e,dT,fT,St,{nested:0,name:1,color:2,visible:3,selected:4,class:5})}}function Pd(s,e,t){const n=s.slice();n[6]=e[t][0],n[7]=e[t][1],n[10]=t;const i=n[1][n[10]];return n[8]=i,n}function Ld(s,e,t){const n=s.slice();n[11]=e[t],n[14]=t;const i=n[7][n[14]];return n[12]=i,n}function Id(s){let e,t,n=s[8].layers,i=[];for(let a=0;a<n.length;a+=1)i[a]=Dd(Ld(s,n,a));const r=a=>K(i[a],1,1,()=>{i[a]=null});return{c(){e=ce("ul");for(let a=0;a<i.length;a+=1)i[a].c();this.h()},l(a){e=he(a,"UL",{class:!0});var o=G(e);for(let l=0;l<i.length;l+=1)i[l].l(o);o.forEach(R),this.h()},h(){b(e,"class","pl-2 pr-[2px] overflow-clip")},m(a,o){ae(a,e,o);for(let l=0;l<i.length;l+=1)i[l]&&i[l].m(e,null);t=!0},p(a,o){if(o&15){n=a[8].layers;let l;for(l=0;l<n.length;l+=1){const c=Ld(a,n,l);i[l]?(i[l].p(c,o),W(i[l],1)):(i[l]=Dd(c),i[l].c(),W(i[l],1),i[l].m(e,null))}for(wt(),l=n.length;l<i.length;l+=1)r(l);Et()}},i(a){if(!t){for(let o=0;o<n.length;o+=1)W(i[o]);t=!0}},o(a){i=i.filter(Boolean);for(let o=0;o<i.length;o+=1)K(i[o]);t=!1},d(a){a&&R(e),kn(i,a)}}}function Dd(s){let e,t;function n(...i){return s[4](s[10],s[11],s[14],s[8],...i)}return e=new wg({props:{nested:!0,selected:s[11]===s[2],name:s[11].name,color:s[11].color,visible:s[12]}}),e.$on("click",n),{c(){Te(e.$$.fragment)},l(i){Ae(e.$$.fragment,i)},m(i,r){Ce(e,i,r),t=!0},p(i,r){s=i;const a={};r&6&&(a.selected=s[11]===s[2]),r&2&&(a.name=s[11].name),r&2&&(a.color=s[11].color),r&1&&(a.visible=s[12]),e.$set(a)},i(i){t||(W(e.$$.fragment,i),t=!0)},o(i){K(e.$$.fragment,i),t=!1},d(i){Re(e,i)}}}function pT(s){let e,t,n=s[8].layers&&Id(s);return{c(){n&&n.c(),e=Le()},l(i){n&&n.l(i),e=Ie(i)},m(i,r){n&&n.m(i,r),ae(i,e,r),t=!0},p(i,r){i[8].layers?n?(n.p(i,r),r&2&&W(n,1)):(n=Id(i),n.c(),W(n,1),n.m(e.parentNode,e)):n&&(wt(),K(n,1,1,()=>{n=null}),Et())},i(i){t||(W(n),t=!0)},o(i){K(n),t=!1},d(i){n&&n.d(i),i&&R(e)}}}function Ud(s){let e,t;function n(){return s[5](s[10],s[8])}return e=new wg({props:{class:"pb-2",visible:s[6],selected:s[8]===s[2],name:s[8].name,color:s[8].color,$$slots:{default:[pT]},$$scope:{ctx:s}}}),e.$on("click",n),{c(){Te(e.$$.fragment)},l(i){Ae(e.$$.fragment,i)},m(i,r){Ce(e,i,r),t=!0},p(i,r){s=i;const a={};r&1&&(a.visible=s[6]),r&6&&(a.selected=s[8]===s[2]),r&2&&(a.name=s[8].name),r&2&&(a.color=s[8].color),r&32775&&(a.$$scope={dirty:r,ctx:s}),e.$set(a)},i(i){t||(W(e.$$.fragment,i),t=!0)},o(i){K(e.$$.fragment,i),t=!1},d(i){Re(e,i)}}}function mT(s){let e,t,n=s[0],i=[];for(let a=0;a<n.length;a+=1)i[a]=Ud(Pd(s,n,a));const r=a=>K(i[a],1,1,()=>{i[a]=null});return{c(){e=ce("ul");for(let a=0;a<i.length;a+=1)i[a].c()},l(a){e=he(a,"UL",{});var o=G(e);for(let l=0;l<i.length;l+=1)i[l].l(o);o.forEach(R)},m(a,o){ae(a,e,o);for(let l=0;l<i.length;l+=1)i[l]&&i[l].m(e,null);t=!0},p(a,[o]){if(o&15){n=a[0];let l;for(l=0;l<n.length;l+=1){const c=Pd(a,n,l);i[l]?(i[l].p(c,o),W(i[l],1)):(i[l]=Ud(c),i[l].c(),W(i[l],1),i[l].m(e,null))}for(wt(),l=n.length;l<i.length;l+=1)r(l);Et()}},i(a){if(!t){for(let o=0;o<n.length;o+=1)W(i[o]);t=!0}},o(a){i=i.filter(Boolean);for(let o=0;o<i.length;o+=1)K(i[o]);t=!1},d(a){a&&R(e),kn(i,a)}}}function gT(s,e,t){let{layerVisibility:n}=e,{layers:i}=e,{selection:r=void 0}=e;const a=Kd(),o=(c,h,u,f,d)=>a("select",{index:c,layer:h,subIndex:u,parentLayer:f}),l=(c,h)=>a("select",{index:c,layer:h});return s.$$set=c=>{"layerVisibility"in c&&t(0,n=c.layerVisibility),"layers"in c&&t(1,i=c.layers),"selection"in c&&t(2,r=c.selection)},[n,i,r,a,o,l]}class _T extends Mt{constructor(e){super(),bt(this,e,gT,mT,St,{layerVisibility:0,layers:1,selection:2})}}function vT(s,e,t){class n extends $t{constructor(){super();Ue(this,"meshes",new Map);Ue(this,"colors",{[mt.X]:Er.Oranges[3][0],[mt.Y]:Er.Oranges[3][1],[mt.Z]:Er.Oranges[3][2]});Ue(this,"movementDirection",{[mt.X]:new E(0,0,1),[mt.Y]:new E(0,1,0),[mt.Z]:new E(1,0,0)});for(const d of[mt.X,mt.Y,mt.Z]){const p=this.createPlane(this.colors[d],d);p.visible=!1,this.meshes.set(d,p),this.add(p)}}createPlane(d,p){const m=new ar(1,1),_=new Qt({transparent:!0,opacity:.5,color:d,blendEquation:Ei,side:vn}),g=new Rt(m,_);switch(p){case mt.X:break;case mt.Y:g.rotateOnAxis(new E(1,0,0),Math.PI/2);break;case mt.Z:g.rotateOnAxis(new E(0,1,0),Math.PI/2);break}return g}setAxisValue(d,p){const m=this.meshes.get(d);if(!m)throw new Error(`SliceSelection has no mesh for axis : ${d}`);if(p===void 0)m.visible=!1;else{m.visible=!0;const _=this.movementDirection[d].clone().multiplyScalar(-.5),g=this.movementDirection[d].clone().multiplyScalar(p).add(_);m.position.set(g.x,g.y,g.z),m.material.needsUpdate=!0}}}let{scale:i=1}=e;const r=hl();let{x:a=void 0}=e,{y:o=void 0}=e,{z:l=void 0}=e,{opacity:c=.5}=e,h=new n;return Bn(()=>{const{scene:u,domElement:f}=r.getValues(),d=f.getBoundingClientRect(),p=Math.min(d.width,d.height)*i;h.scale.set(p,p,p),u.add(h)}),Fi(()=>{h.clear(),h.removeFromParent()}),s.$$set=u=>{"scale"in u&&t(0,i=u.scale),"x"in u&&t(1,a=u.x),"y"in u&&t(2,o=u.y),"z"in u&&t(3,l=u.z),"opacity"in u&&t(4,c=u.opacity)},s.$$.update=()=>{s.$$.dirty&2&&h.setAxisValue(mt.X,a),s.$$.dirty&4&&h.setAxisValue(mt.Y,o),s.$$.dirty&8&&h.setAxisValue(mt.Z,l)},[i,a,o,l,c]}class yT extends Mt{constructor(e){super(),bt(this,e,vT,null,St,{scale:0,x:1,y:2,z:3,opacity:4})}}function xT(s){let e;return{c(){e=ce("div"),this.h()},l(t){e=he(t,"DIV",{class:!0}),G(e).forEach(R),this.h()},h(){b(e,"class","d3-graph svelte-prikv3")},m(t,n){ae(t,e,n),s[9](e)},p:Ze,i:Ze,o:Ze,d(t){t&&R(e),s[9](null)}}}function MT(s,e,t){let{data:n}=e,{height:i=200}=e,{width:r=300}=e,{xScale:a=Ws.LINEAR}=e,{yScale:o=Ws.LINEAR}=e,{xAxisOffset:l=30}=e,{yAxisOffset:c=20}=e,h,u,f,d,p,m,_;function g(){t(8,u=n_(h).append("svg").attr("width",r+l+15).attr("height",i+c).append("g")),u.attr("transform","translate("+l+","+c+")"),f=u.append("g").attr("opacity",.4),d=u.append("g").attr("opacity",.4),p=u.append("text").attr("class","d3-text").attr("text-anchor","end").attr("transform",`translate(${r+2}, ${i-30}), rotate(90)`),m=u.append("text").attr("text-anchor","start").attr("class","d3-text").attr("y",c-10).attr("x",l-20)}function y(M,w,T){switch(T){case Ws.LINEAR:return pp().range(M).domain(w);case Ws.LOG:return mp().range(M).domain(w)}}function v(M,w,T){if(!M||M.points.length===0)return;const[I,S]=M.xRange,[C,V]=M.yRange,X=y([0,r],[0,S],w);f.attr("transform","translate(0,"+(i-c)+")").call(e_(X));const F=y([i-c,0],[0,V],T);d.call(t_(F)),u.selectAll("circle").remove(),_&&_.length!==M.points.length&&(_.forEach(B=>B.remove()),_=void 0),_||(_=M.points.map(()=>u.append("path"))),p.text(M.xAxisLabel??"X"),m.text(M.yAxisLabel??"Y"),M.points.forEach((B,N)=>{_==null||_[N].datum(B.data).attr("class","line").attr("fill",B.color??"#69b3a2").attr("fill-opacity",0).attr("stroke-width",2).attr("stroke-linejoin","round").attr("stroke-opacity",.6).attr("stroke",B.color??"yellow").transition().attr("d",H_().x(Y=>X(Y[0])).y(Y=>F(Y[1])).curve(_p)),u.selectAll("circle").data(B.data).enter().append("circle").attr("cx",Y=>X(Y[0])).attr("cy",Y=>F(Y[1])).transition().attr("r",2).attr("fill",B.color??"yellow")})}Bn(async()=>{g()});function x(M){_i[M?"unshift":"push"](()=>{h=M,t(0,h)})}return s.$$set=M=>{"data"in M&&t(1,n=M.data),"height"in M&&t(2,i=M.height),"width"in M&&t(3,r=M.width),"xScale"in M&&t(4,a=M.xScale),"yScale"in M&&t(5,o=M.yScale),"xAxisOffset"in M&&t(6,l=M.xAxisOffset),"yAxisOffset"in M&&t(7,c=M.yAxisOffset)},s.$$.update=()=>{s.$$.dirty&306&&u&&v(n,a,o)},[h,n,i,r,a,o,l,c,u,x]}class bT extends Mt{constructor(e){super(),bt(this,e,MT,xT,St,{data:1,height:2,width:3,xScale:4,yScale:5,xAxisOffset:6,yAxisOffset:7})}}function Nd(s){const e=jg();s[30]=e}function Od(s){let e,t;return e=new yT({props:{scale:.6,x:mt.X===s[3]?s[0]/s[9].tileRange.x:void 0,z:mt.Z===s[3]?s[0]/s[9].tileRange.z:void 0}}),{c(){Te(e.$$.fragment)},l(n){Ae(e.$$.fragment,n)},m(n,i){Ce(e,n,i),t=!0},p(n,i){const r={};i[0]&521&&(r.x=mt.X===n[3]?n[0]/n[9].tileRange.x:void 0),i[0]&521&&(r.z=mt.Z===n[3]?n[0]/n[9].tileRange.z:void 0),e.$set(r)},i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Re(e,n)}}}function kd(s){let e,t,n,i,r,a,o,l,c,h,u;t=new nn({props:{size:mn.SM,variant:ip.LINK,$$slots:{default:[ET]},$$scope:{ctx:s}}}),t.$on("click",s[20]);let f=s[4]&&Fd(s);a=new tp({props:{values:Object.values(Ws),singular:!0,expand:!1,size:mn.SM,optionConstructor:s[23]}}),a.$on("select",s[17]),l=new qg({props:{placement:Zg.TOP,$$slots:{content:[NT],trigger:[UT]},$$scope:{ctx:s}}});let d=!s[13]&&zd(s);return{c(){e=ce("div"),Te(t.$$.fragment),n=Le(),i=ce("div"),f&&f.c(),r=Le(),Te(a.$$.fragment),o=Le(),Te(l.$$.fragment),c=Le(),d&&d.c(),h=Pt(),this.h()},l(p){e=he(p,"DIV",{class:!0});var m=G(e);Ae(t.$$.fragment,m),n=Ie(m),i=he(m,"DIV",{});var _=G(i);f&&f.l(_),r=Ie(_),Ae(a.$$.fragment,_),o=Ie(_),Ae(l.$$.fragment,_),_.forEach(R),m.forEach(R),c=Ie(p),d&&d.l(p),h=Pt(),this.h()},h(){b(e,"class","flex justify-between")},m(p,m){ae(p,e,m),Ce(t,e,null),k(e,n),k(e,i),f&&f.m(i,null),k(i,r),Ce(a,i,null),k(i,o),Ce(l,i,null),ae(p,c,m),d&&d.m(p,m),ae(p,h,m),u=!0},p(p,m){const _={};m[0]&8200|m[1]&1&&(_.$$scope={dirty:m,ctx:p}),t.$set(_),p[4]?f?(f.p(p,m),m[0]&16&&W(f,1)):(f=Fd(p),f.c(),W(f,1),f.m(i,r)):f&&(wt(),K(f,1,1,()=>{f=null}),Et());const g={};m[0]&16384&&(g.optionConstructor=p[23]),a.$set(g);const y={};m[0]&3593|m[1]&1&&(y.$$scope={dirty:m,ctx:p}),l.$set(y),p[13]?d&&(wt(),K(d,1,1,()=>{d=null}),Et()):d?(d.p(p,m),m[0]&8192&&W(d,1)):(d=zd(p),d.c(),W(d,1),d.m(h.parentNode,h))},i(p){u||(W(t.$$.fragment,p),W(f),W(a.$$.fragment,p),W(l.$$.fragment,p),W(d),u=!0)},o(p){K(t.$$.fragment,p),K(f),K(a.$$.fragment,p),K(l.$$.fragment,p),K(d),u=!1},d(p){p&&R(e),Re(t),f&&f.d(),Re(a),Re(l),p&&R(c),d&&d.d(p),p&&R(h)}}}function ST(s){let e,t;return e=new Jg({props:{slot:"trailing",size:"14"}}),{c(){Te(e.$$.fragment)},l(n){Ae(e.$$.fragment,n)},m(n,i){Ce(e,n,i),t=!0},i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Re(e,n)}}}function wT(s){let e,t;return e=new Kg({props:{slot:"trailing",size:"14"}}),{c(){Te(e.$$.fragment)},l(n){Ae(e.$$.fragment,n)},m(n,i){Ce(e,n,i),t=!0},i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Re(e,n)}}}function ET(s){let e,t,n,i,r,a;const o=[wT,ST],l=[];function c(h,u){return h[13]?0:1}return n=c(s),i=l[n]=o[n](s),{c(){e=Ne(s[3]),t=Ne(` Axis
			`),i.c(),r=Pt()},l(h){e=Oe(h,s[3]),t=Oe(h,` Axis
			`),i.l(h),r=Pt()},m(h,u){ae(h,e,u),ae(h,t,u),l[n].m(h,u),ae(h,r,u),a=!0},p(h,u){(!a||u[0]&8)&&Ct(e,h[3]);let f=n;n=c(h),n!==f&&(wt(),K(l[f],1,1,()=>{l[f]=null}),Et(),i=l[n],i||(i=l[n]=o[n](h),i.c()),W(i,1),i.m(r.parentNode,r))},i(h){a||(W(i),a=!0)},o(h){K(i),a=!1},d(h){h&&R(e),h&&R(t),l[n].d(h),h&&R(r)}}}function Fd(s){let e,t,n,i;return e=new nn({props:{disabled:!s[10],color:s[12]?Dt.PRIMARY:Dt.SECONDARY,size:mn.SM,$$slots:{default:[CT]},$$scope:{ctx:s}}}),e.$on("click",s[21]),n=new $h({props:{size:ha.medium,$$slots:{trigger:[LT],default:[RT]},$$scope:{ctx:s}}}),{c(){Te(e.$$.fragment),t=Le(),Te(n.$$.fragment)},l(r){Ae(e.$$.fragment,r),t=Ie(r),Ae(n.$$.fragment,r)},m(r,a){Ce(e,r,a),ae(r,t,a),Ce(n,r,a),i=!0},p(r,a){const o={};a[0]&1024&&(o.disabled=!r[10]),a[0]&4096&&(o.color=r[12]?Dt.PRIMARY:Dt.SECONDARY),a[0]&4096|a[1]&1&&(o.$$scope={dirty:a,ctx:r}),e.$set(o);const l={};a[0]&1039|a[1]&1&&(l.$$scope={dirty:a,ctx:r}),n.$set(l)},i(r){i||(W(e.$$.fragment,r),W(n.$$.fragment,r),i=!0)},o(r){K(e.$$.fragment,r),K(n.$$.fragment,r),i=!1},d(r){Re(e,r),r&&R(t),Re(n,r)}}}function TT(s){let e,t;return e=new a0({props:{size:"14"}}),{c(){Te(e.$$.fragment)},l(n){Ae(e.$$.fragment,n)},m(n,i){Ce(e,n,i),t=!0},i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Re(e,n)}}}function AT(s){let e,t;return e=new c0({props:{size:"14"}}),{c(){Te(e.$$.fragment)},l(n){Ae(e.$$.fragment,n)},m(n,i){Ce(e,n,i),t=!0},i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Re(e,n)}}}function CT(s){let e,t,n,i;const r=[AT,TT],a=[];function o(l,c){return l[12]?0:1}return e=o(s),t=a[e]=r[e](s),{c(){t.c(),n=Pt()},l(l){t.l(l),n=Pt()},m(l,c){a[e].m(l,c),ae(l,n,c),i=!0},p(l,c){let h=e;e=o(l),e!==h&&(wt(),K(a[h],1,1,()=>{a[h]=null}),Et(),t=a[e],t||(t=a[e]=r[e](l),t.c()),W(t,1),t.m(n.parentNode,n))},i(l){i||(W(t),i=!0)},o(l){K(t),i=!1},d(l){a[e].d(l),l&&R(n)}}}function RT(s){let e,t,n;function i(a){s[22](a)}let r={width:window.innerWidth*.7,height:window.innerHeight*.7,options:s[1],axis:s[3],layerVisibility:s[2],allowsExpand:!1};return s[0]!==void 0&&(r.slice=s[0]),e=new Yh({props:r}),_i.push(()=>Co(e,"slice",i)),{c(){Te(e.$$.fragment)},l(a){Ae(e.$$.fragment,a)},m(a,o){Ce(e,a,o),n=!0},p(a,o){const l={};o[0]&2&&(l.options=a[1]),o[0]&8&&(l.axis=a[3]),o[0]&4&&(l.layerVisibility=a[2]),!t&&o[0]&1&&(t=!0,l.slice=a[0],Ro(()=>t=!1)),e.$set(l)},i(a){n||(W(e.$$.fragment,a),n=!0)},o(a){K(e.$$.fragment,a),n=!1},d(a){Re(e,a)}}}function PT(s){let e,t;return e=new y0({props:{size:"14"}}),{c(){Te(e.$$.fragment)},l(n){Ae(e.$$.fragment,n)},m(n,i){Ce(e,n,i),t=!0},p:Ze,i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Re(e,n)}}}function LT(s){let e,t;return e=new nn({props:{slot:"trigger",disabled:!s[10],size:mn.SM,$$slots:{default:[PT]},$$scope:{ctx:s}}}),{c(){Te(e.$$.fragment)},l(n){Ae(e.$$.fragment,n)},m(n,i){Ce(e,n,i),t=!0},p(n,i){const r={};i[0]&1024&&(r.disabled=!n[10]),i[1]&1&&(r.$$scope={dirty:i,ctx:n}),e.$set(r)},i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Re(e,n)}}}function IT(s){let e,t,n,i,r=(s[3]==mt.X?s[9].tileRange.x:s[9].tileRange.z)+"",a,o;return{c(){e=ce("span"),t=Ne("["),n=Ne(s[0]),i=Ne("/"),a=Ne(r),o=Ne("]"),this.h()},l(l){e=he(l,"SPAN",{style:!0});var c=G(e);t=Oe(c,"["),n=Oe(c,s[0]),i=Oe(c,"/"),a=Oe(c,r),o=Oe(c,"]"),c.forEach(R),this.h()},h(){ta(e,"font-family","monospace")},m(l,c){ae(l,e,c),k(e,t),k(e,n),k(e,i),k(e,a),k(e,o)},p(l,c){c[0]&1&&Ct(n,l[0]),c[0]&520&&r!==(r=(l[3]==mt.X?l[9].tileRange.x:l[9].tileRange.z)+"")&&Ct(a,r)},d(l){l&&R(e)}}}function DT(s){let e,t;return e=new E0({props:{size:"14",slot:"leading"}}),{c(){Te(e.$$.fragment)},l(n){Ae(e.$$.fragment,n)},m(n,i){Ce(e,n,i),t=!0},p:Ze,i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Re(e,n)}}}function UT(s){Nd(s);let e,t;function n(){return s[26](s[30])}return e=new nn({props:{disabled:!s[10],size:mn.SM,$$slots:{leading:[DT],default:[IT]},$$scope:{ctx:s}}}),e.$on("click",n),{c(){Te(e.$$.fragment)},l(i){Ae(e.$$.fragment,i)},m(i,r){Ce(e,i,r),t=!0},p(i,r){s=i,Nd(s);const a={};r[0]&1024&&(a.disabled=!s[10]),r[0]&521|r[1]&1&&(a.$$scope={dirty:r,ctx:s}),e.$set(a)},i(i){t||(W(e.$$.fragment,i),t=!0)},o(i){K(e.$$.fragment,i),t=!1},d(i){Re(e,i)}}}function Bd(s){let e,t;return e=new bg({props:{label:"Select slice index",initialValue:2,min:0,max:s[3]==mt.X?s[9].tileRange.x:s[9].tileRange.z}}),e.$on("start",s[24]),e.$on("input",s[16]),e.$on("change",s[25]),{c(){Te(e.$$.fragment)},l(n){Ae(e.$$.fragment,n)},m(n,i){Ce(e,n,i),t=!0},p(n,i){const r={};i[0]&520&&(r.max=n[3]==mt.X?n[9].tileRange.x:n[9].tileRange.z),e.$set(r)},i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Re(e,n)}}}function NT(s){let e,t,n=s[9]&&Bd(s);return{c(){e=ce("div"),n&&n.c(),this.h()},l(i){e=he(i,"DIV",{slot:!0,class:!0});var r=G(e);n&&n.l(r),r.forEach(R),this.h()},h(){b(e,"slot","content"),b(e,"class","p-2")},m(i,r){ae(i,e,r),n&&n.m(e,null),t=!0},p(i,r){i[9]?n?(n.p(i,r),r[0]&512&&W(n,1)):(n=Bd(i),n.c(),W(n,1),n.m(e,null)):n&&(wt(),K(n,1,1,()=>{n=null}),Et())},i(i){t||(W(n),t=!0)},o(i){K(n),t=!1},d(i){i&&R(e),n&&n.d()}}}function zd(s){let e,t,n,i;const r=[kT,OT],a=[];function o(l,c){return l[10]?0:1}return t=o(s),n=a[t]=r[t](s),{c(){e=ce("div"),n.c()},l(l){e=he(l,"DIV",{});var c=G(e);n.l(c),c.forEach(R)},m(l,c){ae(l,e,c),a[t].m(e,null),i=!0},p(l,c){let h=t;t=o(l),t===h?a[t].p(l,c):(wt(),K(a[h],1,1,()=>{a[h]=null}),Et(),n=a[t],n?n.p(l,c):(n=a[t]=r[t](l),n.c()),W(n,1),n.m(e,null))},i(l){i||(W(n),i=!0)},o(l){K(n),i=!1},d(l){l&&R(e),a[t].d()}}}function OT(s){let e,t,n,i,r,a;return t=new sp({}),{c(){e=ce("div"),Te(t.$$.fragment),n=Le(),i=ce("span"),r=Ne("No layers selected"),this.h()},l(o){e=he(o,"DIV",{class:!0});var l=G(e);Ae(t.$$.fragment,l),n=Ie(l),i=he(l,"SPAN",{});var c=G(i);r=Oe(c,"No layers selected"),c.forEach(R),l.forEach(R),this.h()},h(){b(e,"class","w-52 h-52 flex flex-col gap-2 justify-center items-center")},m(o,l){ae(o,e,l),Ce(t,e,null),k(e,n),k(e,i),k(i,r),a=!0},p:Ze,i(o){a||(W(t.$$.fragment,o),a=!0)},o(o){K(t.$$.fragment,o),a=!1},d(o){o&&R(e),Re(t)}}}function kT(s){let e,t,n;return t=new bT({props:{width:s[6],height:s[5],xAxisOffset:s[7],yAxisOffset:s[8],data:s[10],xScale:s[14]}}),{c(){e=ce("div"),Te(t.$$.fragment),this.h()},l(i){e=he(i,"DIV",{class:!0});var r=G(e);Ae(t.$$.fragment,r),r.forEach(R),this.h()},h(){b(e,"class","pr-2")},m(i,r){ae(i,e,r),Ce(t,e,null),n=!0},p(i,r){const a={};r[0]&64&&(a.width=i[6]),r[0]&32&&(a.height=i[5]),r[0]&128&&(a.xAxisOffset=i[7]),r[0]&256&&(a.yAxisOffset=i[8]),r[0]&1024&&(a.data=i[10]),r[0]&16384&&(a.xScale=i[14]),t.$set(a)},i(i){n||(W(t.$$.fragment,i),n=!0)},o(i){K(t.$$.fragment,i),n=!1},d(i){i&&R(e),Re(t)}}}function FT(s){let e,t,n,i=(s[12]||s[11])&&s[9]&&s[4]&&Od(s),r=s[9]&&kd(s);return{c(){i&&i.c(),e=Le(),r&&r.c(),t=Pt()},l(a){i&&i.l(a),e=Ie(a),r&&r.l(a),t=Pt()},m(a,o){i&&i.m(a,o),ae(a,e,o),r&&r.m(a,o),ae(a,t,o),n=!0},p(a,o){(a[12]||a[11])&&a[9]&&a[4]?i?(i.p(a,o),o[0]&6672&&W(i,1)):(i=Od(a),i.c(),W(i,1),i.m(e.parentNode,e)):i&&(wt(),K(i,1,1,()=>{i=null}),Et()),a[9]?r?(r.p(a,o),o[0]&512&&W(r,1)):(r=kd(a),r.c(),W(r,1),r.m(t.parentNode,t)):r&&(wt(),K(r,1,1,()=>{r=null}),Et())},i(a){n||(W(i),W(r),n=!0)},o(a){K(i),K(r),n=!1},d(a){i&&i.d(a),a&&R(e),r&&r.d(a),a&&R(t)}}}function BT(s,e){return!s||e.length!==s.layers.length?[]:s.layers.flatMap((t,n)=>{const[i,r]=e[n],a=(t.layers??[]).filter((o,l)=>r[l]);return i?[t,...a]:a})}function zT(s,e,t){let n,{options:i}=e,{layerVisibility:r}=e,{axis:a=mt.X}=e,{allowsExpand:o=!0}=e,{height:l=200}=e,{width:c=300}=e,{xAxisOffset:h=30}=e,{yAxisOffset:u=20}=e,{slice:f=0}=e,{selected:d=void 0}=e,p,m=i.dataStore;Kn(s,m,O=>t(9,n=O));let _=[],g=!1,y=!1,v=!1,x=Ws.LINEAR;function M(O,Z,q){switch(console.log(O),q){case mt.X:return O[Z].map((H,ee)=>[ee,H]);case mt.Y:throw Error("Y slice rendering not supported");case mt.Z:return O.map((H,ee)=>[ee,H[Z]])}}function w(O,Z,q){switch(q){case mt.X:return O.filter(Q=>Q.z===Z).map(Q=>[Q.rawX,Q.y]);case mt.Y:throw Error("Y slice rendering not supported");case mt.Z:return O.filter(Q=>Q.x===Z).map(Q=>[Q.rawZ,Q.y])}}function T(O,Z){const q=O.map(Q=>{var H;return{name:Q.name,color:Q.color,data:(H=Q.meta)!=null&&H.rows?w(Q.meta.rows,Z,a):M(Q.points,Z,a)}});if(!(!q||q.length===0)&&n)switch(console.log(n.ranges),a){case mt.X:return{xRange:n.ranges.x,yRange:n.ranges.y,xAxisLabel:n.labels.x,yAxisLabel:n.labels.y,points:q};case mt.Y:throw new Error("Y axis not supported");case mt.Z:return{xRange:n.ranges.z,yRange:n.ranges.y,xAxisLabel:n.labels.z,yAxisLabel:n.labels.y,points:q}}}function I(O){t(0,f=O.detail.value)}function S(O){O.detail.selected[0]&&t(14,x=O.detail.selected[0].value)}const C=()=>t(13,v=!v),V=()=>t(12,y=!y);function X(O){f=O,t(0,f),t(9,n),t(3,a)}const F=(O,Z,q)=>({label:O,value:O,initiallySelected:O===x,id:Z}),B=()=>t(11,g=!0),N=()=>t(11,g=!1),Y=O=>O.open();return s.$$set=O=>{"options"in O&&t(1,i=O.options),"layerVisibility"in O&&t(2,r=O.layerVisibility),"axis"in O&&t(3,a=O.axis),"allowsExpand"in O&&t(4,o=O.allowsExpand),"height"in O&&t(5,l=O.height),"width"in O&&t(6,c=O.width),"xAxisOffset"in O&&t(7,h=O.xAxisOffset),"yAxisOffset"in O&&t(8,u=O.yAxisOffset),"slice"in O&&t(0,f=O.slice),"selected"in O&&t(18,d=O.selected)},s.$$.update=()=>{s.$$.dirty[0]&516&&t(19,_=BT(n,r)),s.$$.dirty[0]&521&&(n?t(0,f=Math.min(a===mt.X?n.tileRange.x:n.tileRange.z,f)):t(0,f=0)),s.$$.dirty[0]&524289&&t(10,p=T(_,f))},[f,i,r,a,o,l,c,h,u,n,p,g,y,v,x,m,I,S,d,_,C,V,X,F,B,N,Y]}class Yh extends Mt{constructor(e){super(),bt(this,e,zT,FT,St,{options:1,layerVisibility:2,axis:3,allowsExpand:4,height:5,width:6,xAxisOffset:7,yAxisOffset:8,slice:0,selected:18},null,[-1,-1])}}function VT(s,e){let t,n,i,r,a=0,o=0;function l(u){if(!e.enabled)return;const f=s.getBoundingClientRect();t=u.clientX,n=u.clientY,i=f.left+window.scrollX,r=f.top+window.scrollY,window.addEventListener("mousemove",c),window.addEventListener("mouseup",h)}function c(u){if(!e.enabled)return;const f=u.clientX-t,d=u.clientY-n,p=i+f,m=r+d;a=p-i,o=m-r,s.style.transform=`translate3d(${a}px, ${o}px, 0)`}function h(){window.removeEventListener("mousemove",c),window.removeEventListener("mouseup",h);const u=s.getBoundingClientRect();s.style.left=`${u.left}px`,s.style.top=`${u.top}px`,s.style.transform=""}return s.addEventListener("mousedown",l),{destroy(){s.removeEventListener("mousedown",l),window.removeEventListener("mousemove",c),window.removeEventListener("mouseup",h)}}}function Vd(s,e,t){const n=s.slice();return n[29]=e[t][0],n[30]=e[t][1],n}function HT(s){let e,t,n;function i(a){s[14](a)}let r={options:s[0],layerVisibility:s[1]};return s[5]!==void 0&&(r.slice=s[5]),e=new Yh({props:r}),_i.push(()=>Co(e,"slice",i)),{c(){Te(e.$$.fragment)},l(a){Ae(e.$$.fragment,a)},m(a,o){Ce(e,a,o),n=!0},p(a,o){const l={};o[0]&1&&(l.options=a[0]),o[0]&2&&(l.layerVisibility=a[1]),!t&&o[0]&32&&(t=!0,l.slice=a[5],Ro(()=>t=!1)),e.$set(l)},i(a){n||(W(e.$$.fragment,a),n=!0)},o(a){K(e.$$.fragment,a),n=!1},d(a){Re(e,a)}}}function GT(s){let e,t,n;function i(a){s[15](a)}let r={axis:mt.Z,options:s[0],layerVisibility:s[1]};return s[6]!==void 0&&(r.slice=s[6]),e=new Yh({props:r}),_i.push(()=>Co(e,"slice",i)),{c(){Te(e.$$.fragment)},l(a){Ae(e.$$.fragment,a)},m(a,o){Ce(e,a,o),n=!0},p(a,o){const l={};o[0]&1&&(l.options=a[0]),o[0]&2&&(l.layerVisibility=a[1]),!t&&o[0]&64&&(t=!0,l.slice=a[6],Ro(()=>t=!1)),e.$set(l)},i(a){n||(W(e.$$.fragment,a),n=!0)},o(a){K(e.$$.fragment,a),n=!1},d(a){Re(e,a)}}}function Hd(s){var n;let e,t;return e=new _T({props:{selection:(n=s[2])==null?void 0:n.layer,layerVisibility:s[1],layers:s[7].layers}}),e.$on("select",s[11]),{c(){Te(e.$$.fragment)},l(i){Ae(e.$$.fragment,i)},m(i,r){Ce(e,i,r),t=!0},p(i,r){var o;const a={};r[0]&4&&(a.selection=(o=i[2])==null?void 0:o.layer),r[0]&2&&(a.layerVisibility=i[1]),r[0]&128&&(a.layers=i[7].layers),e.$set(a)},i(i){t||(W(e.$$.fragment,i),t=!0)},o(i){K(e.$$.fragment,i),t=!1},d(i){Re(e,i)}}}function WT(s){let e;return{c(){e=Ne("Show all")},l(t){e=Oe(t,"Show all")},m(t,n){ae(t,e,n)},d(t){t&&R(e)}}}function XT(s){let e;return{c(){e=Ne("Hide all")},l(t){e=Oe(t,"Hide all")},m(t,n){ae(t,e,n)},d(t){t&&R(e)}}}function $T(s){let e,t,n,i,r,a,o,l=s[7]&&Hd(s);return i=new nn({props:{size:mn.SM,color:Dt.SECONDARY,class:"mt-2",disabled:s[1].every($d),$$slots:{default:[WT]},$$scope:{ctx:s}}}),i.$on("click",s[12]),a=new nn({props:{size:mn.SM,color:Dt.SECONDARY,class:"mt-2",disabled:s[1].every(Yd),$$slots:{default:[XT]},$$scope:{ctx:s}}}),a.$on("click",s[13]),{c(){e=ce("div"),l&&l.c(),t=Le(),n=ce("div"),Te(i.$$.fragment),r=Le(),Te(a.$$.fragment),this.h()},l(c){e=he(c,"DIV",{class:!0});var h=G(e);l&&l.l(h),h.forEach(R),t=Ie(c),n=he(c,"DIV",{class:!0});var u=G(n);Ae(i.$$.fragment,u),r=Ie(u),Ae(a.$$.fragment,u),u.forEach(R),this.h()},h(){b(e,"class","max-h-96 px-4 py-2 border-b dark:border-background-800 border-t overflow-auto svelte-9sr1xv"),b(n,"class","px-4 pb-2 svelte-9sr1xv")},m(c,h){ae(c,e,h),l&&l.m(e,null),ae(c,t,h),ae(c,n,h),Ce(i,n,null),k(n,r),Ce(a,n,null),o=!0},p(c,h){c[7]?l?(l.p(c,h),h[0]&128&&W(l,1)):(l=Hd(c),l.c(),W(l,1),l.m(e,null)):l&&(wt(),K(l,1,1,()=>{l=null}),Et());const u={};h[0]&2&&(u.disabled=c[1].every($d)),h[1]&8&&(u.$$scope={dirty:h,ctx:c}),i.$set(u);const f={};h[0]&2&&(f.disabled=c[1].every(Yd)),h[1]&8&&(f.$$scope={dirty:h,ctx:c}),a.$set(f)},i(c){o||(W(l),W(i.$$.fragment,c),W(a.$$.fragment,c),o=!0)},o(c){K(l),K(i.$$.fragment,c),K(a.$$.fragment,c),o=!1},d(c){c&&R(e),l&&l.d(),c&&R(t),c&&R(n),Re(i),Re(a)}}}function Gd(s){let e,t,n,i,r,a,o,l,c=s[2].layer.name+"",h,u,f,d,p,m,_,g,y,v,x=s[7].labels.x+"",M,w,T,I,S=s[2].normalizedCoords.x*s[7].ranges.x[1]+"",C,V,X,F,B,N=s[7].labels.y+"",Y,O,Z,q,Q=s[2].y+"",H,ee,_e,ge,Se,Fe=s[7].labels.z+"",$e,Xe,ut,gt,je=s[2].normalizedCoords.z*s[7].ranges.z[1]+"",U,ve,le,fe,se,Ye,De;d=new nn({props:{size:mn.SM,color:Dt.INVERTED,$$slots:{leading:[qT],default:[YT]},$$scope:{ctx:s}}}),d.$on("click",s[16]),m=new nn({props:{size:mn.SM,color:s[8]?Dt.SECONDARY:Dt.INVERTED,$$slots:{leading:[jT],default:[ZT]},$$scope:{ctx:s}}}),m.$on("click",s[17]);let ye=s[4]&&Wd(s);return{c(){e=ce("div"),t=ce("div"),n=ce("div"),i=ce("div"),r=ce("div"),o=Le(),l=ce("span"),h=Ne(c),u=Le(),f=ce("div"),Te(d.$$.fragment),p=Le(),Te(m.$$.fragment),_=Le(),g=ce("div"),y=ce("span"),v=Ne("[x]"),M=Ne(x),w=Ne(":"),T=Le(),I=ce("span"),C=Ne(S),V=Le(),X=ce("div"),F=ce("span"),B=Ne("[y]"),Y=Ne(N),O=Ne(":"),Z=Le(),q=ce("span"),H=Ne(Q),ee=Le(),_e=ce("div"),ge=ce("span"),Se=Ne("[z]"),$e=Ne(Fe),Xe=Ne(":"),ut=Le(),gt=ce("span"),U=Ne(je),ve=Le(),ye&&ye.c(),this.h()},l(xe){e=he(xe,"DIV",{class:!0,style:!0});var Be=G(e);t=he(Be,"DIV",{class:!0});var dt=G(t);n=he(dt,"DIV",{class:!0});var L=G(n);i=he(L,"DIV",{class:!0});var A=G(i);r=he(A,"DIV",{class:!0,style:!0}),G(r).forEach(R),o=Ie(A),l=he(A,"SPAN",{class:!0});var ie=G(l);h=Oe(ie,c),ie.forEach(R),A.forEach(R),u=Ie(L),f=he(L,"DIV",{class:!0});var me=G(f);Ae(d.$$.fragment,me),p=Ie(me),Ae(m.$$.fragment,me),me.forEach(R),L.forEach(R),_=Ie(dt),g=he(dt,"DIV",{class:!0});var pe=G(g);y=he(pe,"SPAN",{class:!0});var D=G(y);v=Oe(D,"[x]"),M=Oe(D,x),w=Oe(D,":"),D.forEach(R),T=Ie(pe),I=he(pe,"SPAN",{class:!0});var ue=G(I);C=Oe(ue,S),ue.forEach(R),pe.forEach(R),V=Ie(dt),X=he(dt,"DIV",{class:!0});var de=G(X);F=he(de,"SPAN",{class:!0});var J=G(F);B=Oe(J,"[y]"),Y=Oe(J,N),O=Oe(J,":"),J.forEach(R),Z=Ie(de),q=he(de,"SPAN",{class:!0});var ke=G(q);H=Oe(ke,Q),ke.forEach(R),de.forEach(R),ee=Ie(dt),_e=he(dt,"DIV",{class:!0});var qe=G(_e);ge=he(qe,"SPAN",{class:!0});var Ve=G(ge);Se=Oe(Ve,"[z]"),$e=Oe(Ve,Fe),Xe=Oe(Ve,":"),Ve.forEach(R),ut=Ie(qe),gt=he(qe,"SPAN",{class:!0});var ze=G(gt);U=Oe(ze,je),ze.forEach(R),qe.forEach(R),dt.forEach(R),ve=Ie(Be),ye&&ye.l(Be),Be.forEach(R),this.h()},h(){b(r,"class","flex-shrink-0 rounded-full border border-slate-800 svelte-9sr1xv"),b(r,"style",a=`background-color: ${s[2].layer.color}; width: 12px; height:12px; display: inline-block;`),b(l,"class","font-bold svelte-9sr1xv"),b(i,"class","svelte-9sr1xv"),b(f,"class","svelte-9sr1xv"),b(n,"class","flex pb-2 justify-between items-center whitespace-nowrap gap-2 flex-nowrap svelte-9sr1xv"),b(y,"class","svelte-9sr1xv"),b(I,"class","svelte-9sr1xv"),b(g,"class","flex justify-between gap-2 svelte-9sr1xv"),b(F,"class","svelte-9sr1xv"),b(q,"class","svelte-9sr1xv"),b(X,"class","flex justify-between gap-2 svelte-9sr1xv"),b(ge,"class","svelte-9sr1xv"),b(gt,"class","svelte-9sr1xv"),b(_e,"class","flex justify-between gap-2 svelte-9sr1xv"),b(t,"class","px-3 pt-2 svelte-9sr1xv"),b(e,"class","absolute rounded-lg border backdrop-blur-md border-slate-900 bg-slate-700/80 text-slate-100 svelte-9sr1xv"),ta(e,"font-family","monospace"),Lt(e,"shadow-lg",s[8]),Lt(e,"border-blue-500",s[8]),Lt(e,"border-2",s[8])},m(xe,Be){ae(xe,e,Be),k(e,t),k(t,n),k(n,i),k(i,r),k(i,o),k(i,l),k(l,h),k(n,u),k(n,f),Ce(d,f,null),k(f,p),Ce(m,f,null),k(t,_),k(t,g),k(g,y),k(y,v),k(y,M),k(y,w),k(g,T),k(g,I),k(I,C),k(t,V),k(t,X),k(X,F),k(F,B),k(F,Y),k(F,O),k(X,Z),k(X,q),k(q,H),k(t,ee),k(t,_e),k(_e,ge),k(ge,Se),k(ge,$e),k(ge,Xe),k(_e,ut),k(_e,gt),k(gt,U),k(e,ve),ye&&ye.m(e,null),se=!0,Ye||(De=[po(VT.call(null,e,{enabled:s[10]})),po(le=Qg.call(null,e,s[3]))],Ye=!0)},p(xe,Be){(!se||Be[0]&4&&a!==(a=`background-color: ${xe[2].layer.color}; width: 12px; height:12px; display: inline-block;`))&&b(r,"style",a),(!se||Be[0]&4)&&c!==(c=xe[2].layer.name+"")&&Ct(h,c);const dt={};Be[1]&8&&(dt.$$scope={dirty:Be,ctx:xe}),d.$set(dt);const L={};Be[0]&256&&(L.color=xe[8]?Dt.SECONDARY:Dt.INVERTED),Be[0]&4|Be[1]&8&&(L.$$scope={dirty:Be,ctx:xe}),m.$set(L),(!se||Be[0]&128)&&x!==(x=xe[7].labels.x+"")&&Ct(M,x),(!se||Be[0]&132)&&S!==(S=xe[2].normalizedCoords.x*xe[7].ranges.x[1]+"")&&Ct(C,S),(!se||Be[0]&128)&&N!==(N=xe[7].labels.y+"")&&Ct(Y,N),(!se||Be[0]&4)&&Q!==(Q=xe[2].y+"")&&Ct(H,Q),(!se||Be[0]&128)&&Fe!==(Fe=xe[7].labels.z+"")&&Ct($e,Fe),(!se||Be[0]&132)&&je!==(je=xe[2].normalizedCoords.z*xe[7].ranges.z[1]+"")&&Ct(U,je),xe[4]?ye?ye.p(xe,Be):(ye=Wd(xe),ye.c(),ye.m(e,null)):ye&&(ye.d(1),ye=null),le&&Bg(le.update)&&Be[0]&8&&le.update.call(null,xe[3]),(!se||Be[0]&256)&&Lt(e,"shadow-lg",xe[8]),(!se||Be[0]&256)&&Lt(e,"border-blue-500",xe[8]),(!se||Be[0]&256)&&Lt(e,"border-2",xe[8])},i(xe){se||(W(d.$$.fragment,xe),W(m.$$.fragment,xe),Dr(()=>{se&&(fe||(fe=Zn(e,ir,{duration:75},!0)),fe.run(1))}),se=!0)},o(xe){K(d.$$.fragment,xe),K(m.$$.fragment,xe),fe||(fe=Zn(e,ir,{duration:75},!1)),fe.run(0),se=!1},d(xe){xe&&R(e),Re(d),Re(m),ye&&ye.d(),xe&&fe&&fe.end(),Ye=!1,Ao(De)}}}function YT(s){let e;return{c(){e=Ne("Show")},l(t){e=Oe(t,"Show")},m(t,n){ae(t,e,n)},d(t){t&&R(e)}}}function qT(s){let e,t;return e=new rp({props:{slot:"leading",size:"10"}}),{c(){Te(e.$$.fragment)},l(n){Ae(e.$$.fragment,n)},m(n,i){Ce(e,n,i),t=!0},p:Ze,i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Re(e,n)}}}function ZT(s){let e,t=s[2].x+"",n,i,r=s[2].z+"",a;return{c(){e=Ne("x:"),n=Ne(t),i=Ne(" z:"),a=Ne(r)},l(o){e=Oe(o,"x:"),n=Oe(o,t),i=Oe(o," z:"),a=Oe(o,r)},m(o,l){ae(o,e,l),ae(o,n,l),ae(o,i,l),ae(o,a,l)},p(o,l){l[0]&4&&t!==(t=o[2].x+"")&&Ct(n,t),l[0]&4&&r!==(r=o[2].z+"")&&Ct(a,r)},d(o){o&&R(e),o&&R(n),o&&R(i),o&&R(a)}}}function jT(s){let e,t;return e=new g0({props:{slot:"leading",size:"10"}}),{c(){Te(e.$$.fragment)},l(n){Ae(e.$$.fragment,n)},m(n,i){Ce(e,n,i),t=!0},p:Ze,i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Re(e,n)}}}function Wd(s){let e,t,n,i,r={ctx:s,current:null,token:null,hasCatch:!0,pending:tA,then:KT,catch:JT,value:28,error:33};return mo(i=s[4],r),{c(){e=ce("hr"),t=Le(),n=ce("div"),r.block.c(),this.h()},l(a){e=he(a,"HR",{class:!0}),t=Ie(a),n=he(a,"DIV",{class:!0});var o=G(n);r.block.l(o),o.forEach(R),this.h()},h(){b(e,"class","border-slate-700 m-2 svelte-9sr1xv"),b(n,"class","px-3 pb-2 tooltip-content overflow-auto max-h-96 max-w-sm svelte-9sr1xv")},m(a,o){ae(a,e,o),ae(a,t,o),ae(a,n,o),r.block.m(n,r.anchor=null),r.mount=()=>n,r.anchor=null},p(a,o){s=a,r.ctx=s,o[0]&16&&i!==(i=s[4])&&mo(i,r)||Qd(r,s,o)},d(a){a&&R(e),a&&R(t),a&&R(n),r.block.d(),r.token=null,r=null}}}function JT(s){let e,t=s[33]+"",n;return{c(){e=Ne("Failed to load info "),n=Ne(t)},l(i){e=Oe(i,"Failed to load info "),n=Oe(i,t)},m(i,r){ae(i,e,r),ae(i,n,r)},p(i,r){r[0]&16&&t!==(t=i[33]+"")&&Ct(n,t)},d(i){i&&R(e),i&&R(n)}}}function KT(s){let e;function t(r,a){return r[28]?eA:QT}let n=t(s),i=n(s);return{c(){i.c(),e=Pt()},l(r){i.l(r),e=Pt()},m(r,a){i.m(r,a),ae(r,e,a)},p(r,a){n===(n=t(r))&&i?i.p(r,a):(i.d(1),i=n(r),i&&(i.c(),i.m(e.parentNode,e)))},d(r){i.d(r),r&&R(e)}}}function QT(s){let e;return{c(){e=Ne("Result empty")},l(t){e=Oe(t,"Result empty")},m(t,n){ae(t,e,n)},p:Ze,d(t){t&&R(e)}}}function eA(s){let e,t=Object.entries(s[28]),n=[];for(let i=0;i<t.length;i+=1)n[i]=Xd(Vd(s,t,i));return{c(){for(let i=0;i<n.length;i+=1)n[i].c();e=Pt()},l(i){for(let r=0;r<n.length;r+=1)n[r].l(i);e=Pt()},m(i,r){for(let a=0;a<n.length;a+=1)n[a]&&n[a].m(i,r);ae(i,e,r)},p(i,r){if(r[0]&16){t=Object.entries(i[28]);let a;for(a=0;a<t.length;a+=1){const o=Vd(i,t,a);n[a]?n[a].p(o,r):(n[a]=Xd(o),n[a].c(),n[a].m(e.parentNode,e))}for(;a<n.length;a+=1)n[a].d(1);n.length=t.length}},d(i){kn(n,i),i&&R(e)}}}function Xd(s){let e,t,n=s[29]+"",i,r,a=s[30]+"",o;return{c(){e=ce("div"),t=ce("b"),i=Ne(n),r=ce("span"),o=Ne(a),this.h()},l(l){e=he(l,"DIV",{class:!0});var c=G(e);t=he(c,"B",{class:!0});var h=G(t);i=Oe(h,n),h.forEach(R),r=he(c,"SPAN",{class:!0});var u=G(r);o=Oe(u,a),u.forEach(R),c.forEach(R),this.h()},h(){b(t,"class","svelte-9sr1xv"),b(r,"class","svelte-9sr1xv"),b(e,"class","flex gap-2 justify-between svelte-9sr1xv")},m(l,c){ae(l,e,c),k(e,t),k(t,i),k(e,r),k(r,o)},p(l,c){c[0]&16&&n!==(n=l[29]+"")&&Ct(i,n),c[0]&16&&a!==(a=l[30]+"")&&Ct(o,a)},d(l){l&&R(e)}}}function tA(s){let e;return{c(){e=Ne("Loading info...")},l(t){e=Oe(t,"Loading info...")},m(t,n){ae(t,e,n)},p:Ze,d(t){t&&R(e)}}}function nA(s){let e,t,n,i,r,a,o,l,c;t=new uo({props:{noPad:!0,class:"py-2 px-4",$$slots:{default:[HT]},$$scope:{ctx:s}}}),i=new uo({props:{noPad:!0,class:"py-2 px-4",$$slots:{default:[GT]},$$scope:{ctx:s}}}),o=new uo({props:{title:"Layers",noPad:!0,$$slots:{default:[$T]},$$scope:{ctx:s}}});let h=s[2]&&s[7]&&Gd(s);return{c(){e=ce("div"),Te(t.$$.fragment),n=Le(),Te(i.$$.fragment),r=Le(),a=ce("div"),Te(o.$$.fragment),l=Le(),h&&h.c(),this.h()},l(u){e=he(u,"DIV",{class:!0});var f=G(e);Ae(t.$$.fragment,f),n=Ie(f),Ae(i.$$.fragment,f),f.forEach(R),r=Ie(u),a=he(u,"DIV",{class:!0});var d=G(a);Ae(o.$$.fragment,d),l=Ie(d),h&&h.l(d),d.forEach(R),this.h()},h(){b(e,"class","absolute bottom-0 left-2 svelte-9sr1xv"),b(a,"class","plane-graph-ui legend absolute isolate left-2 top-16 w-[250px] svelte-9sr1xv")},m(u,f){ae(u,e,f),Ce(t,e,null),k(e,n),Ce(i,e,null),ae(u,r,f),ae(u,a,f),Ce(o,a,null),k(a,l),h&&h.m(a,null),c=!0},p(u,f){const d={};f[0]&35|f[1]&8&&(d.$$scope={dirty:f,ctx:u}),t.$set(d);const p={};f[0]&67|f[1]&8&&(p.$$scope={dirty:f,ctx:u}),i.$set(p);const m={};f[0]&134|f[1]&8&&(m.$$scope={dirty:f,ctx:u}),o.$set(m),u[2]&&u[7]?h?(h.p(u,f),f[0]&132&&W(h,1)):(h=Gd(u),h.c(),W(h,1),h.m(a,null)):h&&(wt(),K(h,1,1,()=>{h=null}),Et())},i(u){c||(W(t.$$.fragment,u),W(i.$$.fragment,u),W(o.$$.fragment,u),W(h),c=!0)},o(u){K(t.$$.fragment,u),K(i.$$.fragment,u),K(o.$$.fragment,u),K(h),c=!1},d(u){u&&R(e),Re(t),Re(i),u&&R(r),u&&R(a),Re(o),h&&h.d()}}}function iA(s){return s===0?"0":`10^${Math.floor(Math.log10(Math.abs(s)))}`}const $d=([s,e])=>s===!0&&e.every(t=>t===!0),Yd=([s,e])=>s!==!0&&e.every(t=>t!==!0);function sA(s,e,t){let n,i,{options:r}=e;const a=hl();let o,l=r.dataStore;Kn(s,l,N=>t(7,n=N));let c=new uT,h,u=[],f=i0(!1);Kn(s,f,N=>t(8,i=N));let d,p=new ne,m=new ne(0,0),_,g=0,y=0;const v=()=>{const{camera:N,scene:Y,domElement:O}=a.getValues();o=O,c==null||c.setup(O,Y,N),Y.add(c),a.registerOnBeforeRender(c.onBeforeRender.bind(c))},x=N=>{!N||!c||(c.setAxisLabelRenderer(T),c.updateWithData(N),t(1,u=c.getLayerVisibility()))},M=async(N,Y,O,Z)=>{const q=Z.find(Q=>Q.x===Y&&Q.z===O);if(q&&q.name)return await Ur.getEntry(N,"name",`'${q.name}'`)},w=N=>{if(i)return;const Y=o.getBoundingClientRect();t(3,m.x=N.clientX-Y.left,m),t(3,m.y=N.clientY-Y.top,m),p.x=m.x/Y.width*2-1,p.y=-(m.y/Y.height)*2+1;const O=c==null?void 0:c.getInfoAtPoint(p);if(!O){t(2,d=O);return}(!d||O.layer!==(d==null?void 0:d.layer)||O.x!==(d==null?void 0:d.x)||O.z!==(d==null?void 0:d.z))&&(t(2,d=O),d.layer.meta&&t(4,_=M(d.parent?d.parent.name:d.layer.name,d.x,d.z,d.layer.meta.rows)))};Bn(()=>{v(),o.addEventListener("mousemove",w);let N=r.dataStore.subscribe(x);h=()=>{N()}}),Fi(()=>{c==null||c.destroy(),o.removeEventListener("mousemove",w),h==null||h()});const T=(N,Y)=>{if(!l)return;const Z=n.ranges[N],q=n.tileRange[N];if(!Z||!q)return Y.toFixed(2);const[Q,H]=Z;if(Y%2===0)return null;const ee=Y/q*H;return Math.abs(ee)<.01||Math.abs(ee)>1e3?iA(ee):ee.toFixed(3).toString()},I=N=>{N.detail.subIndex!==void 0?c.toggleSublayerVisibility(N.detail.index,N.detail.subIndex):c.toggleLayerVisibility(N.detail.index),t(1,u=c.getLayerVisibility())},S=()=>{c.showAllLayers(),t(1,u=c.getLayerVisibility())},C=()=>{c.hideAllLayers(),t(1,u=c.getLayerVisibility())};function V(N){g=N,t(5,g)}function X(N){y=N,t(6,y)}const F=()=>{d&&(t(5,g=d.x),t(6,y=d.z))},B=()=>zg(f,i=!i,i);return s.$$set=N=>{"options"in N&&t(0,r=N.options)},[r,u,d,m,_,g,y,n,i,l,f,I,S,C,V,X,F,B]}class rA extends Mt{constructor(e){super(),bt(this,e,sA,nA,St,{options:0},null,[-1,-1])}}function aA(s){let e,t;return e=new e0({}),{c(){Te(e.$$.fragment)},l(n){Ae(e.$$.fragment,n)},m(n,i){Ce(e,n,i),t=!0},p:Ze,i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Re(e,n)}}}function oA(s){let e,t,n,i;return n=new Zw({props:{$$slots:{default:[lA]},$$scope:{ctx:s}}}),{c(){e=ce("div"),t=ce("div"),Te(n.$$.fragment),this.h()},l(r){e=he(r,"DIV",{class:!0});var a=G(e);t=he(a,"DIV",{class:!0});var o=G(t);Ae(n.$$.fragment,o),o.forEach(R),a.forEach(R),this.h()},h(){b(t,"class","flex flex-col"),b(e,"class","flex-grow flex-shrink")},m(r,a){ae(r,e,a),k(e,t),Ce(n,t,null),i=!0},p(r,a){const o={};a&33&&(o.$$scope={dirty:a,ctx:r}),n.$set(o)},i(r){i||(W(n.$$.fragment,r),i=!0)},o(r){K(n.$$.fragment,r),i=!1},d(r){r&&R(e),Re(n)}}}function qd(s){let e,t;return e=new rA({props:{options:s[0].graphOptions}}),{c(){Te(e.$$.fragment)},l(n){Ae(e.$$.fragment,n)},m(n,i){Ce(e,n,i),t=!0},p(n,i){const r={};i&1&&(r.options=n[0].graphOptions),e.$set(r)},i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Re(e,n)}}}function lA(s){let e,t,n,i=s[0].graphOptions instanceof ou&&qd(s);return t=new cT({}),{c(){i&&i.c(),e=Le(),Te(t.$$.fragment)},l(r){i&&i.l(r),e=Ie(r),Ae(t.$$.fragment,r)},m(r,a){i&&i.m(r,a),ae(r,e,a),Ce(t,r,a),n=!0},p(r,a){r[0].graphOptions instanceof ou?i?(i.p(r,a),a&1&&W(i,1)):(i=qd(r),i.c(),W(i,1),i.m(e.parentNode,e)):i&&(wt(),K(i,1,1,()=>{i=null}),Et())},i(r){n||(W(i),W(t.$$.fragment,r),n=!0)},o(r){K(i),K(t.$$.fragment,r),n=!1},d(r){i&&i.d(r),r&&R(e),Re(t,r)}}}function Zd(s){let e,t;return e=new Qw({props:{isLoading:!0}}),{c(){Te(e.$$.fragment)},l(n){Ae(e.$$.fragment,n)},m(n,i){Ce(e,n,i),t=!0},i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Re(e,n)}}}function cA(s){let e,t,n,i,r,a,o,l,c;const h=[oA,aA],u=[];function f(p,m){return p[0].graphOptions?0:1}i=f(s),r=u[i]=h[i](s),o=new nT({});let d=(s[0].isLoading||s[1].isLoading)&&Zd();return{c(){e=ce("div"),t=ce("div"),n=ce("div"),r.c(),a=Le(),Te(o.$$.fragment),l=Le(),d&&d.c(),this.h()},l(p){e=he(p,"DIV",{});var m=G(e);t=he(m,"DIV",{class:!0});var _=G(t);n=he(_,"DIV",{class:!0});var g=G(n);r.l(g),g.forEach(R),a=Ie(_),Ae(o.$$.fragment,_),l=Ie(_),d&&d.l(_),_.forEach(R),m.forEach(R),this.h()},h(){b(n,"class","h-screen w-full"),b(t,"class","relative")},m(p,m){ae(p,e,m),k(e,t),k(t,n),u[i].m(n,null),k(t,a),Ce(o,t,null),k(t,l),d&&d.m(t,null),c=!0},p(p,[m]){let _=i;i=f(p),i===_?u[i].p(p,m):(wt(),K(u[_],1,1,()=>{u[_]=null}),Et(),r=u[i],r?r.p(p,m):(r=u[i]=h[i](p),r.c()),W(r,1),r.m(n,null)),p[0].isLoading||p[1].isLoading?d?m&3&&W(d,1):(d=Zd(),d.c(),W(d,1),d.m(t,null)):d&&(wt(),K(d,1,1,()=>{d=null}),Et())},i(p){c||(W(r),W(o.$$.fragment,p),W(d),c=!0)},o(p){K(r),K(o.$$.fragment,p),K(d),c=!1},d(p){p&&R(e),u[i].d(),Re(o),d&&d.d()}}}function hA(s,e,t){let n,i;Kn(s,Yn,a=>t(0,n=a)),Kn(s,Ur,a=>t(1,i=a));let{data:r}=e;return Bn(async()=>{console.log({dataset:r.dataset}),await Yn.initWithPreloadedDatasets(r.dataset)}),s.$$set=a=>{"data"in a&&t(2,r=a.data)},[n,i,r]}class yA extends Mt{constructor(e){super(),bt(this,e,hA,cA,St,{data:2})}}export{yA as P,yg as c,zw as g};
